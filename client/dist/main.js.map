{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_services/api.service.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/companies/companies.service.ts","webpack:///./src/app/core/admin-layout/admin-layout.component.html","webpack:///./src/app/core/admin-layout/admin-layout.component.ts","webpack:///./src/app/core/auth-layout/auth-layout.component.html","webpack:///./src/app/core/auth-layout/auth-layout.component.ts","webpack:///./src/app/core/header/header.component.html","webpack:///./src/app/core/header/header.component.ts","webpack:///./src/app/core/index.ts","webpack:///./src/app/core/menu-accordion/accordion.directive.ts","webpack:///./src/app/core/menu-accordion/accordionanchor.directive.ts","webpack:///./src/app/core/menu-accordion/accordionlink.directive.ts","webpack:///./src/app/core/menu-accordion/index.ts","webpack:///./src/app/core/menu/menu.component.html","webpack:///./src/app/core/menu/menu.component.ts","webpack:///./src/app/core/menu/menu.service.ts","webpack:///./src/app/core/notification/notification.component.html","webpack:///./src/app/core/notification/notification.component.ts","webpack:///./src/app/core/options/options.component.html","webpack:///./src/app/core/options/options.component.ts","webpack:///./src/app/core/sidebar/sidebar.component.html","webpack:///./src/app/core/sidebar/sidebar.component.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./companies/companies.module\": [\n\t\t\"./src/app/companies/companies.module.ts\",\n\t\t\"companies-companies-module~dashboard-dashboard-module~pages-pages-module~questions-questions-module~~96517cb9\",\n\t\t\"companies-companies-module~dashboard-dashboard-module~questions-questions-module~users-users-module\",\n\t\t\"companies-companies-module\"\n\t],\n\t\"./dashboard/dashboard.module\": [\n\t\t\"./src/app/dashboard/dashboard.module.ts\",\n\t\t\"companies-companies-module~dashboard-dashboard-module~pages-pages-module~questions-questions-module~~96517cb9\",\n\t\t\"companies-companies-module~dashboard-dashboard-module~questions-questions-module~users-users-module\",\n\t\t\"dashboard-dashboard-module\"\n\t],\n\t\"./pages/pages.module\": [\n\t\t\"./src/app/pages/pages.module.ts\",\n\t\t\"companies-companies-module~dashboard-dashboard-module~pages-pages-module~questions-questions-module~~96517cb9\",\n\t\t\"pages-pages-module\"\n\t],\n\t\"./questions/questions.module\": [\n\t\t\"./src/app/questions/questions.module.ts\",\n\t\t\"companies-companies-module~dashboard-dashboard-module~pages-pages-module~questions-questions-module~~96517cb9\",\n\t\t\"companies-companies-module~dashboard-dashboard-module~questions-questions-module~users-users-module\",\n\t\t\"questions-questions-module\"\n\t],\n\t\"./session/session.module\": [\n\t\t\"./src/app/session/session.module.ts\",\n\t\t\"session-session-module\"\n\t],\n\t\"./users/users.module\": [\n\t\t\"./src/app/users/users.module.ts\",\n\t\t\"companies-companies-module~dashboard-dashboard-module~pages-pages-module~questions-questions-module~~96517cb9\",\n\t\t\"companies-companies-module~dashboard-dashboard-module~questions-questions-module~users-users-module\",\n\t\t\"users-users-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {environment} from '../../environments/environment';\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {catchError, publishLast, refCount} from 'rxjs/operators';\r\nimport {User} from '../users/users.model';\r\nimport {Question} from '../questions/questions.model';\r\nimport {Company} from '../companies/company.model';\r\n\r\nconst API_URL: string = environment.apiUrl;\r\n@Injectable()\r\nexport class ApiService {\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    private handleError(error: HttpErrorResponse) {\r\n        return throwError(error);\r\n    }\r\n    public getAllCompanies(): Observable<Company[]> {\r\n        return this.http.get<Company[]>(API_URL + '/settings/getAllCompanies')\r\n            .pipe(publishLast(), refCount(), catchError(this.handleError));\r\n    }\r\n\r\n    public updateCompany(settings: Company): Observable<any> {\r\n        return this.http.put(API_URL + '/settings/updateCompany', settings)\r\n            .pipe(publishLast(), refCount(), catchError(this.handleError));\r\n    }\r\n\r\n    public addCompany(company: Company): Observable<any> {\r\n        return this.http.post<Company>(API_URL + '/settings/createNewFullSettings', company)\r\n            .pipe(publishLast(), refCount(), catchError(this.handleError));\r\n    }\r\n\r\n    public deleteCompany(companyName: string): Observable<any> {\r\n        return this.http.post(API_URL + '/settings/deleteFullSettings', {companyName})\r\n            .pipe(publishLast(), refCount(), catchError(this.handleError));\r\n    }\r\n\r\n    public getUsers(): Observable<User[]> {\r\n        return this.http.get<User[]>(API_URL + '/users')\r\n            .pipe(publishLast(), refCount(), catchError(this.handleError));\r\n    }\r\n\r\n    public setUser(user: User): Observable<any> {\r\n        return this.http.post<User>(API_URL + '/users/createNewUser', user)\r\n            .pipe(publishLast(), refCount(), catchError(this.handleError));\r\n    }\r\n\r\n    public updateUser(user: User): Observable<any> {\r\n        return this.http.put<User>(API_URL + '/users/updateUserFromAdmin', user)\r\n            .pipe(publishLast(), refCount(), catchError(this.handleError));\r\n    }\r\n\r\n    public deleteUser(user: User): Observable<any> {\r\n        return this.http.post<User>(API_URL + '/users/deleteUser', user)\r\n            .pipe(publishLast(), refCount(), catchError(this.handleError));\r\n    }\r\n\r\n    public getQuestionsByCompany(companyName: string): Observable<Question[]> {\r\n        return this.http.get<Question[]>(API_URL + '/question/getQuestionsByCompany/' + companyName)\r\n            .pipe(publishLast(), refCount(), catchError(this.handleError));\r\n    }\r\n    public getAllQuestions(): Observable<Question[]> {\r\n        return this.http.get<Question[]>(API_URL + '/question/get/getAllQuestions/')\r\n            .pipe(publishLast(), refCount(), catchError(this.handleError));\r\n    }\r\n\r\n    public deleteQuestion(question: Question): Observable<any> {\r\n        return this.http.post<Question>(API_URL + '/question/deleteQ', question)\r\n            .pipe(publishLast(), refCount(), catchError(this.handleError));\r\n    }\r\n    public addQuestion(question: Question): Observable<any> {\r\n        return this.http.post<Question>(API_URL + '/question/enterQ', question)\r\n            .pipe(publishLast(), refCount(), catchError(this.handleError));\r\n\r\n    }\r\n    public editQuestion(question: Question): Observable<any> {\r\n        console.log(\"INSIDEAPI QUESTION UPDATE\")\r\n        return this.http.put<Question>(API_URL + '/question/updateQ', question)\r\n            .pipe(publishLast(), refCount(), catchError(this.handleError));\r\n\r\n    }\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  constructor(translate: TranslateService) {\r\n    translate.addLangs(['en', 'fr']);\r\n    translate.setDefaultLang('en');\r\n\r\n    const browserLang: string = translate.getBrowserLang();\r\n    translate.use(browserLang.match(/en|fr/) ? browserLang : 'en');\r\n  }\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {RouterModule} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\r\n\r\n\r\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\n\r\nimport {LoadingBarRouterModule} from '@ngx-loading-bar/router';\r\n\r\nimport {PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface, PerfectScrollbarModule} from 'ngx-perfect-scrollbar';\r\n\r\nimport {AgmCoreModule} from '@agm/core';\r\n\r\nimport {MatSortModule} from '@angular/material';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport {BidiModule} from '@angular/cdk/bidi';\r\n\r\nimport {\r\n    AccordionAnchorDirective,\r\n    AccordionDirective,\r\n    AccordionLinkDirective,\r\n    AdminLayoutComponent,\r\n    AuthLayoutComponent,\r\n    HeaderComponent,\r\n    MenuComponent,\r\n    NotificationComponent,\r\n    OptionsComponent,\r\n    SidebarComponent\r\n} from './core';\r\n\r\nimport {AppRoutes} from './app.routing';\r\nimport {AppComponent} from './app.component';\r\nimport {ApiService} from './_services/api.service';\r\nimport {SharedModule} from './shared/shared.module';\r\nimport {CompaniesService} from './companies/companies.service';\r\n\r\n\r\nexport function createTranslateLoader(http: HttpClient) {\r\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n    suppressScrollX: true,\r\n    wheelSpeed: 2,\r\n    wheelPropagation: true,\r\n    minScrollbarLength: 20\r\n};\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        HeaderComponent,\r\n        SidebarComponent,\r\n        NotificationComponent,\r\n        OptionsComponent,\r\n        MenuComponent,\r\n        AdminLayoutComponent,\r\n        AuthLayoutComponent,\r\n        AccordionAnchorDirective,\r\n        AccordionLinkDirective,\r\n        AccordionDirective,\r\n    ],\r\n    imports: [\r\n        SharedModule.forRoot(),\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        RouterModule.forRoot(AppRoutes),\r\n        FormsModule,\r\n        HttpClientModule,\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: (createTranslateLoader),\r\n                deps: [HttpClient]\r\n            }\r\n        }),\r\n        LoadingBarRouterModule,\r\n        FlexLayoutModule,\r\n        BidiModule,\r\n        MatSortModule,\r\n        AgmCoreModule.forRoot({apiKey: 'YOURAPIKEY'}),\r\n        PerfectScrollbarModule,\r\n    ],\r\n    providers: [\r\n        ApiService,\r\n        {\r\n            provide: PERFECT_SCROLLBAR_CONFIG,\r\n            useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n        }\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Routes} from '@angular/router';\r\n\r\nimport {AdminLayoutComponent, AuthLayoutComponent} from './core';\r\n\r\nexport const AppRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AdminLayoutComponent,\r\n        children: [\r\n            {\r\n                path: '',\r\n                loadChildren: './dashboard/dashboard.module#DashboardModule'\r\n            },\r\n            {\r\n                path: 'companies',\r\n                loadChildren: './companies/companies.module#CompaniesModule'\r\n            },\r\n            {\r\n                path: 'users',\r\n                loadChildren: './users/users.module#UsersModule'\r\n            },\r\n            {\r\n                path: 'questions',\r\n                loadChildren: './questions/questions.module#QuestionsModule'\r\n            },\r\n            {\r\n                path: 'pages',\r\n                loadChildren: './pages/pages.module#PagesModule'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path: '',\r\n        component: AuthLayoutComponent,\r\n        children: [\r\n            {\r\n                path: 'session',\r\n                loadChildren: './session/session.module#SessionModule'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        path: '**',\r\n        redirectTo: 'session/404'\r\n    }\r\n];\r\n","import {Injectable} from '@angular/core';\r\nimport {ApiService} from '../_services/api.service';\r\nimport {Observable} from 'rxjs';\r\nimport * as _ from 'lodash';\r\nimport {Company} from './company.model';\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\n\r\n\r\n@Injectable()\r\nexport class CompaniesService {\r\n    private companiesSubject: BehaviorSubject<Company[]> = new BehaviorSubject<Company[]>([]);\r\n    companies$: Observable<Company[]> = this.companiesSubject.asObservable();\r\n    constructor(private apiService: ApiService) {\r\n        // from api once to load all companies.\r\n        this.loadCompanies();\r\n    }\r\n\r\n    public updateCompanies(newCompanies: Company[]): void {\r\n        this.companiesSubject.next(_.cloneDeep(newCompanies));\r\n    }\r\n\r\n    public getCompaniesValue(): Company[] {\r\n        return _.cloneDeep(this.companiesSubject.getValue());\r\n    }\r\n\r\n    private loadCompanies(): void {\r\n        this.apiService.getAllCompanies().subscribe((companies: Company[]) => {\r\n            this.updateCompanies(companies);\r\n        }, (error) => {\r\n\r\n        });\r\n    }\r\n\r\n    public addCompany(newCompany: Company): Observable<any> {\r\n        const companies: Company[] = this.getCompaniesValue();\r\n        companies.push(newCompany);\r\n        this.updateCompanies(companies);\r\n\r\n        const obs = this.apiService.addCompany(newCompany);\r\n        obs.subscribe(res => {\r\n            console.log('New Company Added!');\r\n        }, (error) => {\r\n            // handle error!!\r\n        });\r\n\r\n        return obs;\r\n    }\r\n\r\n    public updateCompany(updateCompany: Company): Observable<any> {\r\n        const companies: Company[] = this.getCompaniesValue();\r\n        const index = companies.findIndex((company: Company) => company.companyName ===  updateCompany.companyName);\r\n        if (index > -1) {\r\n            companies[index] = updateCompany;\r\n            this.updateCompanies(companies);\r\n        }\r\n\r\n        return this.apiService.updateCompany(updateCompany);\r\n    }\r\n\r\n    public deleteCompany(companyName: string): Observable<any> {\r\n        const companies: Company[] = this.getCompaniesValue();\r\n        const index = companies.findIndex((company: Company) => company.companyName ===  companyName);\r\n        if (index > -1) {\r\n            companies.splice(index, 1);\r\n            this.updateCompanies(companies);\r\n        }\r\n        return this.apiService.deleteCompany(companyName);\r\n    }\r\n\r\n    private getAllCompanies(): Observable<Company[]> {\r\n        return this.apiService.getAllCompanies();\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"app mat-typography\\\" [dir]=\\\"options.dir\\\" [ngClass]=\\\"{'app-dark': options.dark, 'boxed': options.boxed, 'collapsed-sidebar': options.collapsed, 'compact-sidebar': options.compact, 'side-panel-opened': sidePanelOpened, 'side-panel-closed': !sidePanelOpened }\\\">\\r\\n  <ngx-loading-bar color=\\\"#009688\\\"></ngx-loading-bar>\\r\\n  <app-header (toggleSidenav)=\\\"sidemenu.toggle()\\\" (toggleNotificationSidenav)=\\\"notifications.toggle()\\\"></app-header>\\r\\n\\r\\n  <mat-sidenav-container class=\\\"app-inner\\\">\\r\\n    <mat-sidenav #sidemenu class=\\\"sidebar-panel\\\" id=\\\"sidebar-panel\\\" [mode]=\\\"isOver() ? 'over' : 'side'\\\" [opened]=\\\"!isOver()\\\" (openedStart)=\\\"sidePanelOpened = true\\\"\\r\\n    (closedStart)=\\\"sidePanelOpened = false\\\" (mouseover)=\\\"menuMouseOver()\\\" (mouseout)=\\\"menuMouseOut()\\\" [perfectScrollbar]=\\\"config\\\" [disabled]=\\\"mediaMatcher.matches\\\">\\r\\n      <app-sidebar (click)=\\\"updatePS()\\\"></app-sidebar>\\r\\n    </mat-sidenav>\\r\\n    <mat-sidenav #notifications position=\\\"end\\\" class=\\\"chat-panel\\\" mode=\\\"over\\\" opened=\\\"false\\\">\\r\\n      <app-notification></app-notification>\\r\\n    </mat-sidenav>\\r\\n    <div [perfectScrollbar]=\\\"config\\\" [disabled]=\\\"mediaMatcher.matches\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </mat-sidenav-container>\\r\\n\\r\\n  <!-- Demo Purposes Only -->\\r\\n  <app-options (messageEvent)=\\\"receiveOptions($event)\\\"></app-options>\\r\\n  <!-- /Demo Purposes Only -->\\r\\n</div>\\r\\n\"","import { Component, ElementRef, NgZone, OnInit, OnDestroy, ViewChild, HostListener } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { PerfectScrollbarConfigInterface, PerfectScrollbarDirective } from 'ngx-perfect-scrollbar';\r\n\r\nconst SMALL_WIDTH_BREAKPOINT = 960;\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './admin-layout.component.html'\r\n})\r\nexport class AdminLayoutComponent implements OnInit, OnDestroy {\r\n\r\n  private _router: Subscription;\r\n\r\n  mediaMatcher: MediaQueryList = matchMedia(`(max-width: ${SMALL_WIDTH_BREAKPOINT}px)`);\r\n  url: string;\r\n  sidePanelOpened;\r\n  options = {\r\n    collapsed: false,\r\n    compact: false,\r\n    boxed: false,\r\n    dark: false,\r\n    dir: 'ltr'\r\n  };\r\n\r\n  @ViewChild('sidemenu') sidemenu;\r\n  @ViewChild(PerfectScrollbarDirective) directiveScroll: PerfectScrollbarDirective;\r\n\r\n  public config: PerfectScrollbarConfigInterface = {};\r\n\r\n  constructor(\r\n    private _element: ElementRef,\r\n    private router: Router,\r\n    zone: NgZone) {\r\n    this.mediaMatcher.addListener(mql => zone.run(() => {\r\n      this.mediaMatcher = mql;\r\n    }));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.url = this.router.url;\r\n\r\n    this._router = this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe((event: NavigationEnd) => {\r\n      document.querySelector('.app-inner > .mat-drawer-content > div').scrollTop = 0;\r\n      this.url = event.url;\r\n      this.runOnRouteChange();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void  {\r\n    this._router.unsubscribe();\r\n  }\r\n\r\n  runOnRouteChange(): void {\r\n    if (this.isOver()) {\r\n      this.sidemenu.close();\r\n    }\r\n\r\n    this.updatePS();\r\n  }\r\n\r\n  receiveOptions($event): void {\r\n    this.options = $event;\r\n  }\r\n\r\n  isOver(): boolean {\r\n    if (this.url === '/apps/messages' ||\r\n      this.url === '/apps/calendar' ||\r\n      this.url === '/apps/media' ||\r\n      this.url === '/maps/leaflet' ||\r\n      this.url === '/taskboard') {\r\n      return true;\r\n    } else {\r\n      return this.mediaMatcher.matches;\r\n    }\r\n  }\r\n\r\n  menuMouseOver(): void {\r\n    if (this.mediaMatcher.matches && this.options.collapsed) {\r\n      this.sidemenu.mode = 'over';\r\n    }\r\n  }\r\n\r\n  menuMouseOut(): void {\r\n    if (this.mediaMatcher.matches && this.options.collapsed) {\r\n      this.sidemenu.mode = 'side';\r\n    }\r\n  }\r\n\r\n  updatePS(): void  {\r\n    if (!this.mediaMatcher.matches && !this.options.compact) {\r\n      setTimeout(() => {\r\n        this.directiveScroll.update();\r\n      }, 350);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"<mat-sidenav-container>\\r\\n  <router-outlet></router-outlet>\\r\\n</mat-sidenav-container>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  styles: [':host .mat-drawer-content {padding: 0;} .mat-drawer-container {z-index: 1000}'],\r\n  templateUrl: './auth-layout.component.html'\r\n})\r\nexport class AuthLayoutComponent {}\r\n","module.exports = \"<mat-toolbar class=\\\"main-header\\\" color=\\\"primary\\\">\\r\\n  <button (click)=\\\"toggleSidenav.emit()\\\" mat-icon-button>\\r\\n    <mat-icon>menu</mat-icon>\\r\\n  </button>\\r\\n  <div class=\\\"branding\\\">\\r\\n    <div class=\\\"logo\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"search-bar\\\" fxFlex>\\r\\n    <form class=\\\"search-form\\\" [ngStyle.xs]=\\\"{display: 'none'}\\\">\\r\\n      <mat-icon>search</mat-icon>\\r\\n      <input type=\\\"text\\\" placeholder=\\\"Search\\\" autofocus=\\\"true\\\" />\\r\\n    </form>\\r\\n  </div>\\r\\n  <button (click)=\\\"fullScreenToggle()\\\" mat-icon-button>\\r\\n    <mat-icon>fullscreen</mat-icon>\\r\\n  </button>\\r\\n  <button (click)=\\\"toggleNotificationSidenav.emit()\\\" mat-icon-button class=\\\"ml-xs overflow-visible\\\">\\r\\n    <mat-icon>notifications</mat-icon>\\r\\n    <span class=\\\"notification-label\\\">5</span>\\r\\n  </button>\\r\\n  <button [matMenuTriggerFor]=\\\"user\\\" mat-icon-button class=\\\"ml-xs\\\">\\r\\n    <mat-icon>person</mat-icon>\\r\\n  </button>\\r\\n  <mat-menu #user=\\\"matMenu\\\" x-position=\\\"before\\\">\\r\\n    <button mat-menu-item>\\r\\n      <mat-icon>settings</mat-icon>\\r\\n      Settings\\r\\n    </button>\\r\\n    <button mat-menu-item>\\r\\n      <mat-icon>account_box</mat-icon>\\r\\n      Profile\\r\\n    </button>\\r\\n    <button mat-menu-item>\\r\\n      <mat-icon>notifications_off</mat-icon>\\r\\n      Disable notifications\\r\\n    </button>\\r\\n    <button mat-menu-item>\\r\\n      <mat-icon>exit_to_app</mat-icon>\\r\\n      Sign Out\\r\\n    </button>\\r\\n  </mat-menu>\\r\\n</mat-toolbar>\\r\\n\"","import { Component, EventEmitter, Output } from '@angular/core';\r\n\r\nimport * as screenfull from 'screenfull';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html'\r\n})\r\nexport class HeaderComponent {\r\n\r\n  @Output() toggleSidenav = new EventEmitter<void>();\r\n  @Output() toggleNotificationSidenav = new EventEmitter<void>();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  fullScreenToggle(): void {\r\n    if (screenfull.enabled) {\r\n      screenfull.toggle();\r\n    }\r\n  }\r\n}\r\n","export * from './admin-layout/admin-layout.component';\r\nexport * from './auth-layout/auth-layout.component';\r\nexport * from './header/header.component';\r\nexport * from './sidebar/sidebar.component';\r\nexport * from './notification/notification.component';\r\nexport * from './menu/menu.component';\r\nexport * from './menu-accordion';\r\nexport * from './options/options.component';\r\n","import { Directive, OnInit, AfterViewInit, AfterContentChecked } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordion]',\r\n})\r\nexport class AccordionDirective implements AfterContentChecked {\r\n\r\n  protected navlinks: Array<AccordionLinkDirective> = [];\r\n\r\n  closeOtherLinks(openLink: AccordionLinkDirective): void {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link !== openLink) {\r\n        link.open = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  addLink(link: AccordionLinkDirective): void {\r\n    this.navlinks.push(link);\r\n  }\r\n\r\n  removeGroup(link: AccordionLinkDirective): void {\r\n    const index = this.navlinks.indexOf(link);\r\n    if (index !== -1) {\r\n      this.navlinks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  checkOpenLinks() {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link.group) {\r\n        const routeUrl = this.router.url;\r\n        const currentUrl = routeUrl.split('/');\r\n        if (currentUrl.indexOf( link.group ) > 0) {\r\n          link.open = true;\r\n          this.closeOtherLinks(link);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(e => this.checkOpenLinks());\r\n  }\r\n\r\n  constructor( private router: Router) {\r\n    setTimeout(() => this.checkOpenLinks());\r\n  }\r\n}\r\n","import { Directive, HostListener, Inject } from '@angular/core';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionToggle]'\r\n})\r\nexport class AccordionAnchorDirective {\r\n\r\n  protected navlink: AccordionLinkDirective;\r\n\r\n  constructor( @Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\r\n    this.navlink = navlink;\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(e: any) {\r\n    this.navlink.toggle();\r\n  }\r\n}\r\n","import {\r\n  Directive, HostBinding, Inject, Input, OnInit, OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { AccordionDirective } from './accordion.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionLink]'\r\n})\r\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\r\n\r\n  @Input() public group: any;\r\n\r\n  @HostBinding('class.open')\r\n  @Input()\r\n  get open(): boolean {\r\n    return this._open;\r\n  }\r\n\r\n  set open(value: boolean) {\r\n    this._open = value;\r\n    if (value) {\r\n      this.nav.closeOtherLinks(this);\r\n    }\r\n  }\r\n\r\n  protected _open: boolean;\r\n  protected nav: AccordionDirective;\r\n\r\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\r\n    this.nav = nav;\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    this.nav.addLink(this);\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this.nav.removeGroup(this);\r\n  }\r\n\r\n  toggle(): any {\r\n    this.open = !this.open;\r\n  }\r\n}\r\n","export * from './accordionanchor.directive';\r\nexport * from './accordionlink.directive';\r\nexport * from './accordion.directive';\r\n","module.exports = \"<mat-nav-list appAccordion class=\\\"navigation\\\">\\r\\n    <mat-list-item appAccordionLink *ngFor=\\\"let menuitem of menuService.getAll()\\\" group=\\\"{{menuitem.state}}\\\">\\r\\n      <a appAccordionToggle class=\\\"relative\\\" [routerLink]=\\\"['/', menuitem.state]\\\" *ngIf=\\\"menuitem.type === 'link'\\\">\\r\\n        <mat-icon>{{ menuitem.icon }}</mat-icon>\\r\\n        <span>{{ menuitem.name | translate }}</span>\\r\\n        <span fxFlex></span>\\r\\n        <span class=\\\"menu-badge mat-{{ badge.type }}\\\" *ngFor=\\\"let badge of menuitem.badge\\\">{{ badge.value }}</span>\\r\\n      </a>\\r\\n      <a appAccordionToggle class=\\\"relative\\\" href=\\\"{{menuitem.state}}\\\" *ngIf=\\\"menuitem.type === 'extLink'\\\">\\r\\n        <mat-icon>{{ menuitem.icon }}</mat-icon>\\r\\n        <span>{{ menuitem.name | translate }}</span>\\r\\n        <span fxFlex></span>\\r\\n        <span class=\\\"menu-badge mat-{{ badge.type }}\\\" *ngFor=\\\"let badge of menuitem.badge\\\">{{ badge.value }}</span>\\r\\n      </a>\\r\\n      <a appAccordionToggle class=\\\"relative\\\" href=\\\"{{menuitem.state}}\\\" target=\\\"_blank\\\" *ngIf=\\\"menuitem.type === 'extTabLink'\\\">\\r\\n        <mat-icon>{{ menuitem.icon }}</mat-icon>\\r\\n        <span>{{ menuitem.name | translate }}</span>\\r\\n        <span fxFlex></span>\\r\\n        <span class=\\\"menu-badge mat-{{ badge.type }}\\\" *ngFor=\\\"let badge of menuitem.badge\\\">{{ badge.value }}</span>\\r\\n      </a>\\r\\n      <a appAccordionToggle class=\\\"relative\\\" href=\\\"javascript:;\\\" *ngIf=\\\"menuitem.type === 'sub'\\\">\\r\\n        <mat-icon>{{ menuitem.icon }}</mat-icon>\\r\\n        <span>{{ menuitem.name | translate }}</span>\\r\\n        <span fxFlex></span>\\r\\n        <span class=\\\"menu-badge mat-{{ badge.type }}\\\" *ngFor=\\\"let badge of menuitem.badge\\\">{{ badge.value }}</span>\\r\\n        <mat-icon class=\\\"menu-caret\\\">arrow_drop_down</mat-icon>\\r\\n      </a>\\r\\n      <mat-nav-list class=\\\"sub-menu\\\" *ngIf=\\\"menuitem.type === 'sub'\\\">\\r\\n        <mat-list-item *ngFor=\\\"let childitem of menuitem.children\\\" routerLinkActive=\\\"open\\\">\\r\\n          <a [routerLink]=\\\"['/', menuitem.state, childitem.state ]\\\" class=\\\"relative\\\">{{ childitem.name | translate }}</a>\\r\\n        </mat-list-item>\\r\\n      </mat-nav-list>\\r\\n    </mat-list-item>\\r\\n  </mat-nav-list>\"","import { Component, NgZone, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { MenuService } from './menu.service';\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-menu',\r\n  templateUrl: './menu.component.html',\r\n  providers: [MenuService]\r\n})\r\nexport class MenuComponent {\r\n  currentLang = 'en';\r\n\r\n  constructor(\r\n    public menuService: MenuService,\r\n    public translate: TranslateService) {\r\n  }\r\n\r\n  addMenuItem(): void {\r\n    this.menuService.add({\r\n      state: 'menu',\r\n      name: 'MENU',\r\n      type: 'sub',\r\n      icon: 'trending_flat',\r\n      children: [\r\n        {state: 'menu', name: 'MENU'},\r\n        {state: 'timeline', name: 'MENU'}\r\n      ]\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface BadgeItem {\r\n  type: string;\r\n  value: string;\r\n}\r\n\r\nexport interface ChildrenItems {\r\n  state: string;\r\n  name: string;\r\n  type?: string;\r\n}\r\n\r\nexport interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n  badge?: BadgeItem[];\r\n  children?: ChildrenItems[];\r\n}\r\n\r\nconst MENUITEMS = [\r\n  {\r\n    state: '/',\r\n    name: 'HOME',\r\n    type: 'link',\r\n    icon: 'home'\r\n  },\r\n  {\r\n    state: 'users',\r\n    name: 'User',\r\n    type: 'link',\r\n    icon: 'face'\r\n  },\r\n  {\r\n    state: 'questions',\r\n    name: 'Questions',\r\n    type: 'link',\r\n    icon: 'question_answer'\r\n  },\r\n  {\r\n    state: 'companies',\r\n    name: 'Companies',\r\n    type: 'link',\r\n    icon: 'location_city'\r\n  },\r\n  {\r\n    state: 'http://primer.nyasha.me/docs',\r\n    name: 'DOCS',\r\n    type: 'extTabLink',\r\n    icon: 'local_library'\r\n  }\r\n];\r\n\r\n@Injectable()\r\nexport class MenuService {\r\n  getAll(): Menu[] {\r\n    return MENUITEMS;\r\n  }\r\n\r\n  add(menu) {\r\n    MENUITEMS.push(menu);\r\n  }\r\n}\r\n","module.exports = \"<mat-tab-group [selectedIndex]=\\\"1\\\" mat-stretch-tabs>\\r\\n  <mat-tab>\\r\\n    <ng-template matTabLabel>Today</ng-template>\\r\\n    <div class=\\\"scroll\\\">\\r\\n      <mat-list class=\\\"pt-1 pb-1\\\">\\r\\n        <mat-list-item>\\r\\n          <div fxLayout=\\\"column\\\">\\r\\n            <h1 class=\\\"ma-0\\\">{{ today | date:'EEEE' }}</h1>\\r\\n            <h3 class=\\\"mat-text-muted ma-0\\\"><span>{{ today | date:'dd' }}</span>&nbsp;<span>{{ today | date:'MMMM' }}</span></h3>\\r\\n          </div>\\r\\n        </mat-list-item>\\r\\n      </mat-list>\\r\\n      <mat-nav-list>\\r\\n        <mat-divider></mat-divider>\\r\\n        <h3 mat-subheader class=\\\"text-uppercase font-weight-bold\\\">Stocks</h3>\\r\\n        <mat-list-item>\\r\\n            <a matLine href=\\\"javascript:;\\\">NASDAQ</a>\\r\\n            <span class=\\\"mat-text-muted text-md mr-xs ml-xs\\\">4,492.87</span>\\r\\n            <span>-0.29%</span>\\r\\n        </mat-list-item>\\r\\n        <mat-list-item>\\r\\n            <a matLine href=\\\"javascript:;\\\">NYSE</a>\\r\\n            <span class=\\\"mat-text-muted text-md mr-xs ml-xs\\\">10,692.07</span>\\r\\n            <span>-0.53%</span>\\r\\n        </mat-list-item>\\r\\n        <mat-list-item>\\r\\n            <a matLine href=javascript:;>DOW J</a>\\r\\n            <span class=\\\"mat-text-muted text-md mr-xs ml-xs\\\">17,046.81</span>\\r\\n            <span>-0.14%</span>\\r\\n        </mat-list-item>\\r\\n        <mat-list-item>\\r\\n            <a matLine href=\\\"javascript:;\\\">APPL</a>\\r\\n            <span class=\\\"mat-text-muted text-md mr-xs ml-xs\\\">100,89</span>\\r\\n            <span>+0.75%</span>\\r\\n        </mat-list-item>\\r\\n        <mat-divider></mat-divider>\\r\\n        <h3 mat-subheader class=\\\"text-uppercase font-weight-bold\\\">Weather</h3>\\r\\n        <mat-list-item>\\r\\n            <a matLine href=\\\"javascript:;\\\">{{ today | date:'shortTime' }}</a>\\r\\n            <p matLine class=\\\"mat-text-muted\\\">London</p>\\r\\n            <span class=\\\"mat-h1 mr-1\\\">\\r\\n              <span class=\\\"pe-is-w-blizzard\\\"></span>\\r\\n            </span>\\r\\n            <span class=\\\"mat-h1\\\">26°</span>\\r\\n        </mat-list-item>\\r\\n        <mat-divider></mat-divider>\\r\\n        <h3 mat-subheader class=\\\"text-uppercase font-weight-bold\\\">Todo</h3>\\r\\n        <mat-list-item>\\r\\n          <a matLine href=\\\"javascript:;\\\">Learn Angular 2.0</a>\\r\\n          <p matLine class=\\\"mat-text-muted text-md\\\">2:45PM</p>\\r\\n        </mat-list-item>\\r\\n        <mat-list-item>\\r\\n            <a matLine href=\\\"javascript:;\\\">Learn Angular Material</a>\\r\\n            <p matLine class=\\\"mat-text-muted text-md\\\">3:20PM</p>\\r\\n        </mat-list-item>\\r\\n        <mat-list-item>\\r\\n            <a matLine href=\\\"javascript:;\\\">Write documentation</a>\\r\\n            <p matLine class=\\\"mat-text-muted text-md\\\">6:00PM</p>\\r\\n        </mat-list-item>\\r\\n        <mat-divider class=\\\"mt-xs mb-xs\\\"></mat-divider>\\r\\n        <h3 mat-subheader class=\\\"text-uppercase font-weight-bold\\\">Stats</h3>\\r\\n        <mat-list-item>\\r\\n          <p class=\\\"text-md\\\" matLine>Local Storage (4023 / 10690)</p>\\r\\n          <mat-progress-bar  matLine mode=\\\"determinate\\\" color=\\\"warn\\\" value=\\\"40\\\"></mat-progress-bar>\\r\\n        </mat-list-item>\\r\\n        <mat-list-item>\\r\\n          <p class=\\\"text-md\\\" matLine>Cloud Storage (700 / 1030)</p>\\r\\n          <mat-progress-bar  matLine mode=\\\"determinate\\\" color=\\\"accent\\\" value=\\\"70\\\"></mat-progress-bar>\\r\\n        </mat-list-item>\\r\\n        <mat-list-item>\\r\\n          <p class=\\\"text-md\\\" matLine>Local Storage (20 / 100)</p>\\r\\n          <mat-progress-bar  matLine mode=\\\"determinate\\\" value=\\\"20\\\"></mat-progress-bar>\\r\\n        </mat-list-item>\\r\\n      </mat-nav-list>\\r\\n    </div>\\r\\n  </mat-tab>\\r\\n  <mat-tab>\\r\\n    <ng-template matTabLabel>Notifications</ng-template>\\r\\n    <div class=\\\"scroll\\\">\\r\\n      <mat-nav-list>\\r\\n        <mat-list-item>\\r\\n          <mat-icon mat-list-avatar class=\\\"mat-text-primary\\\">people</mat-icon>\\r\\n          <h4 matLine>Social</h4>\\r\\n          <p matLine>Ligula Purus Adipiscing</p>\\r\\n        </mat-list-item>\\r\\n        <mat-list-item>\\r\\n          <mat-icon mat-list-avatar class=\\\"mat-text-warn\\\">local_offer</mat-icon>\\r\\n          <h4 matLine>Promotions</h4>\\r\\n          <p matLine>Etiam Ligula Dapibus</p>\\r\\n        </mat-list-item>\\r\\n        <mat-list-item>\\r\\n          <mat-icon mat-list-avatar class=\\\"mat-text-accent\\\">info</mat-icon>\\r\\n          <h4 matLine>Updates</h4>\\r\\n          <p matLine>Sollicitudin Euismod Fringilla</p>\\r\\n        </mat-list-item>\\r\\n\\r\\n        <mat-list-item>\\r\\n          <mat-icon mat-list-avatar class=\\\"mat-indigo\\\">delete_sweep</mat-icon>\\r\\n          <h4 matLine>Removed 6 items from task list</h4>\\r\\n          <span class=\\\"text-md mat-text-muted\\\" matLine>{{ 1427207139000 | date: 'fullDate' }}</span>\\r\\n        </mat-list-item>\\r\\n        <mat-list-item>\\r\\n          <mat-icon mat-list-avatar>check_circle</mat-icon>\\r\\n          <h4 matLine>Completed 2 projects</h4>\\r\\n          <span class=\\\"text-md mat-text-muted\\\" matLine>{{ 1427412725000 | date: 'fullDate' }}</span>\\r\\n        </mat-list-item>\\r\\n        <mat-list-item>\\r\\n          <mat-icon mat-list-avatar>notifications_paused</mat-icon>\\r\\n          <h4 matLine>Muted notifications</h4>\\r\\n          <span class=\\\"text-md mat-text-muted\\\" matLine>{{ 1427546580000 | date: 'fullDate' }}</span>\\r\\n        </mat-list-item>\\r\\n        <mat-list-item>\\r\\n          <mat-icon mat-list-avatar>person_add</mat-icon>\\r\\n          <h4 matLine>Added Joel to contact list</h4>\\r\\n          <span class=\\\"text-md mat-text-muted\\\" matLine>{{ 1428275520000 | date: 'fullDate' }}</span>\\r\\n        </mat-list-item>\\r\\n        <mat-list-item>\\r\\n          <mat-icon mat-list-avatar>phone_missed</mat-icon>\\r\\n          <h4 matLine>Missed live call from Ellie</h4>\\r\\n          <span class=\\\"text-md mat-text-muted\\\" matLine>{{ 1428830580000 | date: 'fullDate' }}</span>\\r\\n        </mat-list-item>\\r\\n        <mat-list-item>\\r\\n          <mat-icon mat-list-avatar>group_add</mat-icon>\\r\\n          <h4 matLine>You've been added to HR group</h4>\\r\\n          <span class=\\\"text-md mat-text-muted\\\" matLine>{{ 1429363920000 | date: 'fullDate' }}</span>\\r\\n        </mat-list-item>\\r\\n      </mat-nav-list>\\r\\n    </div>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.component.html'\r\n})\r\nexport class NotificationComponent {\r\n  today: number = Date.now();\r\n  constructor() {}\r\n}\r\n","module.exports = \"<!-- Demo Purposes Only -->\\r\\n<button mat-fab color=\\\"warn\\\" class=\\\"mat-fab-bottom-right\\\" (click)=\\\"showSettings = true\\\" style=\\\"z-index: 9;\\\">\\r\\n  <mat-icon class=\\\"mat-24\\\">settings</mat-icon>\\r\\n</button>\\r\\n<mat-card class=\\\"settings-panel pa-0\\\" *ngIf=\\\"showSettings\\\">\\r\\n  <mat-toolbar color=\\\"warn\\\">\\r\\n    <span fxFlex>Options</span>\\r\\n    <button mat-icon-button (click)=\\\"showSettings = false\\\">\\r\\n      <mat-icon>close</mat-icon>\\r\\n    </button>\\r\\n  </mat-toolbar>\\r\\n  <mat-card-content class=\\\"demo-checkbox pa-1\\\">\\r\\n    <div class=\\\"pb-1\\\">\\r\\n      <mat-checkbox [(ngModel)]=\\\"options.collapsed\\\" (change)=\\\"sendOptions()\\\" [labelPosition]=\\\"end\\\">Collapsed Sidebar</mat-checkbox>\\r\\n    </div>\\r\\n    <div class=\\\"pb-1\\\">\\r\\n      <mat-checkbox [(ngModel)]=\\\"options.compact\\\" (change)=\\\"sendOptions()\\\" [labelPosition]=\\\"end\\\">Compact Sidebar</mat-checkbox>\\r\\n    </div>\\r\\n    <div class=\\\"pb-1\\\">\\r\\n      <mat-checkbox [(ngModel)]=\\\"options.boxed\\\" (change)=\\\"sendOptions()\\\" [labelPosition]=\\\"end\\\">Boxed Layout</mat-checkbox>\\r\\n    </div>\\r\\n    <div class=\\\"pb-1\\\">\\r\\n      <mat-checkbox [(ngModel)]=\\\"options.dark\\\" (change)=\\\"sendOptions()\\\" [labelPosition]=\\\"end\\\">Dark Mode</mat-checkbox>\\r\\n    </div>\\r\\n    <div class=\\\"pb-1\\\">\\r\\n      <mat-checkbox (change)=\\\"options.dir = (options.dir == 'rtl' ? 'ltr' : 'rtl'); sendOptions()\\\" [labelPosition]=\\\"end\\\">RTL</mat-checkbox>\\r\\n    </div>\\r\\n    <div class=\\\"pb-0\\\">\\r\\n      <mat-select placeholder=\\\"Language\\\" class=\\\"mt-1\\\" [(ngModel)]=\\\"currentLang\\\" #langSelect=\\\"ngModel\\\" (ngModelChange)=\\\"translate.use(currentLang)\\\">\\r\\n        <mat-option *ngFor=\\\"let lang of translate.getLangs()\\\" [value]=\\\"lang\\\">{{ lang }}</mat-option>\\r\\n      </mat-select>\\r\\n   </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<!-- /Demo Purposes Only -->\"","import { Component, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-options',\r\n  templateUrl: './options.component.html'\r\n})\r\nexport class OptionsComponent {\r\n\r\n  currentLang = 'en';\r\n  showSettings = false;\r\n  options = {\r\n    collapsed: false,\r\n    compact: false,\r\n    boxed: false,\r\n    dark: false,\r\n    dir: 'ltr'\r\n  };\r\n\r\n  @Output() messageEvent = new EventEmitter<Object>();\r\n\r\n  constructor(\r\n    public translate: TranslateService) {\r\n    const browserLang: string = translate.getBrowserLang();\r\n    translate.use(browserLang.match(/en|fr/) ? browserLang : 'en');\r\n  }\r\n\r\n  sendOptions() {\r\n    if (this.options.collapsed === true ) {\r\n      this.options.compact = false;\r\n    }\r\n    if (this.options.compact === true ) {\r\n      this.options.collapsed = false;\r\n    }\r\n    this.messageEvent.emit(this.options);\r\n  }\r\n}\r\n","module.exports = \"<app-menu></app-menu>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html'\r\n})\r\nexport class SidebarComponent {\r\n  constructor() {}\r\n}\r\n","import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatOptionModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSlideToggleModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule\r\n} from '@angular/material';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {CommonModule} from '@angular/common';\r\nimport {CompaniesService} from '../companies/companies.service';\r\n@NgModule({\r\n    imports: [\r\n        FormsModule,\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        MatSortModule,\r\n        // material\r\n        MatSidenavModule,\r\n        MatCardModule,\r\n        MatMenuModule,\r\n        MatCheckboxModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatToolbarModule,\r\n        MatTabsModule,\r\n        MatListModule,\r\n        MatSlideToggleModule,\r\n        MatTableModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        MatProgressBarModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatProgressSpinnerModule,\r\n        MatDialogModule,\r\n    ],\r\n    declarations: [],\r\n    exports: [\r\n        FormsModule,\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        MatSidenavModule,\r\n        MatCardModule,\r\n        MatMenuModule,\r\n        MatCheckboxModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatToolbarModule,\r\n        MatTabsModule,\r\n        MatListModule,\r\n        MatSlideToggleModule,\r\n        MatTableModule,\r\n        MatSelectModule,\r\n        MatOptionModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        MatDialogModule,\r\n    ]\r\n})\r\n\r\nexport class SharedModule {\r\n    static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: SharedModule,\r\n            providers: [CompaniesService]\r\n        };\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl : 'http://localhost:3000'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}