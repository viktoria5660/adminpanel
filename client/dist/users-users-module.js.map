{"version":3,"sources":["webpack:///./src/app/users/add-edit-user-dialog/add-edit-user.dialog.component.html","webpack:///./src/app/users/add-edit-user-dialog/add-edit-user.dialog.component.scss","webpack:///./src/app/users/add-edit-user-dialog/add-edit-user.dialog.component.ts","webpack:///./src/app/users/users.component.html","webpack:///./src/app/users/users.component.scss","webpack:///./src/app/users/users.component.ts","webpack:///./src/app/users/users.model.ts","webpack:///./src/app/users/users.module.ts","webpack:///./src/app/users/users.routing.ts","webpack:///./src/app/users/users.service.ts"],"names":[],"mappings":"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","file":"users-users-module.js","sourcesContent":["module.exports = \"<h3 matDialogTitle>\\r\\n    <ng-container *ngIf=\\\"editMode\\\" i18n>Edit User</ng-container>\\r\\n    <ng-container *ngIf=\\\"!editMode\\\" i18n>Add User</ng-container>\\r\\n</h3>\\r\\n\\r\\n<div mat-dialog-content style=\\\"padding-bottom: 20px;\\\">\\r\\n    <form *ngIf=\\\"form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n\\r\\n            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n                <!--Is Admin-->\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <mat-form-field>\\r\\n                        <!-- <input matInput formControlName=\\\"isAdmin\\\" placeholder=\\\"isAdmin ? true/false\\\"> -->\\r\\n                        <mat-select placeholder=\\\"isAdmin?\\\" formControlName=\\\"isAdmin\\\">\\r\\n                            <mat-option [value]=\\\"false\\\">False</mat-option>\\r\\n                            <mat-option [value]=\\\"true\\\">True</mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n                <!--First Name-->\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <mat-form-field>\\r\\n                        <input matInput formControlName=\\\"name\\\" placeholder=\\\"First Name\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n                <!--Last Name-->\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <mat-form-field>\\r\\n                        <input matInput formControlName=\\\"lastName\\\" placeholder=\\\"Last Name\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n                <!--Email-->\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <mat-form-field>\\r\\n                        <input type=\\\"email\\\" matInput formControlName=\\\"email\\\" placeholder=\\\"Email\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n                <!--Password-->\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <mat-form-field>\\r\\n                        <input type=\\\"password\\\" matInput formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n                <!--Difficulty-->\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <mat-form-field class=\\\"mr-2\\\">\\r\\n                        <mat-select placeholder=\\\"Difficulty\\\" formControlName=\\\"difficulty\\\">\\r\\n                            <mat-option [value]=\\\"1\\\">Low</mat-option>\\r\\n                            <mat-option [value]=\\\"2\\\">Medium</mat-option>\\r\\n                            <mat-option [value]=\\\"3\\\">High</mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <mat-form-field class=\\\"mr-2\\\">\\r\\n                        <mat-select #selectedCompany placeholder=\\\"Company\\\" formControlName=\\\"company\\\">\\r\\n                            <mat-option *ngFor=\\\"let company of companies$ | async\\\" [value]=\\\"company\\\">\\r\\n                                {{company.companyName}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n                <!--Group-->\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <mat-form-field>\\r\\n                        <mat-select placeholder=\\\"Group\\\" formControlName=\\\"groups\\\">\\r\\n                            <mat-option *ngIf=\\\"!selectedCompany.value\\\">No company selected</mat-option>\\r\\n                            <ng-container *ngIf=\\\"selectedCompany.value\\\">\\r\\n                                <mat-option *ngFor=\\\"let group of selectedCompany.value.groups\\\" [value]=\\\"group\\\">\\r\\n                                    {{group.name}}\\r\\n                                </mat-option>\\r\\n                            </ng-container>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div fxFlex.gt-sm=\\\"50\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n                <!--Coins-->\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <mat-form-field>\\r\\n                        <input matInput type=\\\"number\\\" formControlName=\\\"coins\\\" placeholder=\\\"Coins\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"divider divider-md\\\"></div>\\r\\n\\r\\n        <div class=\\\"form-actions\\\">\\r\\n            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn-w-md\\\" color=\\\"primary\\\"\\r\\n                    [disabled]=\\\"form.invalid\\\">\\r\\n                Submit\\r\\n            </button>\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n\"","module.exports = \"mat-form-field {\\n  width: 100%; }\\n\\n.form-group {\\n  padding: 0 10px 0 10px; }\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {User} from '../users.model';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport {Company } from '../../companies/company.model';\r\nimport {CompaniesService} from '../../companies/companies.service';\r\n// import {settingsService} from '../../settings/settings.service';\r\n\r\n@Component({\r\n    selector: 'app-add-edit-user',\r\n    templateUrl: './add-edit-user.dialog.component.html',\r\n    styleUrls: ['./add-edit-user.dialog.component.scss']\r\n})\r\nexport class AddEditUserDialogComponent implements OnInit {\r\n    form: FormGroup;\r\n    user: User;\r\n    editMode: boolean;\r\n    companies$: Observable<Company[]>;\r\n    selectedCompany: Company;\r\n    constructor(private dialogRef: MatDialogRef<AddEditUserDialogComponent>,\r\n                @Inject(MAT_DIALOG_DATA) public data: any,\r\n                private companiesService: CompaniesService,\r\n                private formBuilder: FormBuilder) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.companies$ = this.companiesService.companies$;\r\n        if (this.data && this.data.user) {\r\n            this.editMode = true;\r\n            this.user = this.data.user;\r\n\r\n        } else {\r\n            this.editMode = false;\r\n            this.user = new User();\r\n        }\r\n        // this.companies$ = this.settingsService.companies$;\r\n        // this.settingsService.companies$.subscribe((companies) => {\r\n        //     this.selectedCompany = companies[0];\r\n        // });\r\n        this.buildForm();\r\n    }\r\n\r\n    public buildForm(): void {\r\n        this.form = this.formBuilder.group({\r\n            name: [this.user.name, Validators.required],\r\n            lastName: [this.user.lastName, Validators.required],\r\n            email: [this.user.email, Validators.required],\r\n            password : [this.user.password, Validators.required],\r\n            groups: [this.user.group, Validators.required],\r\n            company : [this.user.company, Validators.required ],\r\n            difficulty: [this.user.difficulty, Validators.required],\r\n            coins: [this.user.coins, Validators.required],\r\n            isAdmin : [this.user.isAdmin, Validators.required ],\r\n        });\r\n    }\r\n\r\n    public onSubmit(): void {\r\n        this.dialogRef.close(this.form.value);\r\n    }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n<h1>Users</h1>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 pb-2\\\">\\r\\n            <p>{{error}}</p>\\r\\n            <button mat-raised-button color=\\\"accent\\\" (click)=\\\"addUser()\\\">Add user</button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n        <!-- name Column -->\\r\\n        <ng-container matColumnDef=\\\"name\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name</th>\\r\\n            <td mat-cell *matCellDef=\\\"let user\\\"> {{user.name}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- lastName Column -->\\r\\n        <ng-container matColumnDef=\\\"lastName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name</th>\\r\\n            <td mat-cell *matCellDef=\\\"let user\\\"> {{user.lastName}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- email Column -->\\r\\n        <ng-container matColumnDef=\\\"email\\\" mat-sort-header>\\r\\n            <th mat-header-cell *matHeaderCellDef> Email</th>\\r\\n            <td mat-cell *matCellDef=\\\"let user\\\"> {{user.email}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n         <!-- company Column -->\\r\\n         <ng-container matColumnDef=\\\"company\\\" mat-sort-header>\\r\\n            <th mat-header-cell *matHeaderCellDef> Company</th>\\r\\n            <td mat-cell *matCellDef=\\\"let user\\\"> {{user.company}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- group Column -->\\r\\n        <ng-container matColumnDef=\\\"group\\\" mat-sort-header>\\r\\n            <th mat-header-cell *matHeaderCellDef> Group</th>\\r\\n            <td mat-cell *matCellDef=\\\"let user\\\"> {{user.group}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- coins Column -->\\r\\n        <ng-container matColumnDef=\\\"coins\\\" mat-sort-header>\\r\\n            <th mat-header-cell *matHeaderCellDef> Coins</th>\\r\\n            <td mat-cell *matCellDef=\\\"let user\\\"> {{user.coins | number}}</td>\\r\\n        </ng-container>\\r\\n        \\r\\n        \\r\\n        <!-- created_at Column -->\\r\\n        <ng-container matColumnDef=\\\"created_at\\\" mat-sort-header>\\r\\n            <th mat-header-cell *matHeaderCellDef> Created</th>\\r\\n            <td mat-cell *matCellDef=\\\"let user\\\"> {{user.created_at | date:'dd/MM/yyyy, hh:mm'}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- updatedAt Column -->\\r\\n        <ng-container matColumnDef=\\\"updatedAt\\\" mat-sort-header>\\r\\n            <th mat-header-cell *matHeaderCellDef> Updated</th>\\r\\n            <td mat-cell *matCellDef=\\\"let user\\\"> {{user.updatedAt | date:'dd/MM/yyyy, hh:mm'}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n         <!-- isAdmin Column -->\\r\\n         <ng-container matColumnDef=\\\"isAdmin\\\" mat-sort-header>\\r\\n            <th mat-header-cell *matHeaderCellDef> isAdmin</th>\\r\\n            <td mat-cell *matCellDef=\\\"let user\\\"> {{user.isAdmin}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--actions-->\\r\\n        <ng-container matColumnDef=\\\"actions\\\" mat-sort-header>\\r\\n            <th mat-header-cell *matHeaderCellDef> Actions</th>\\r\\n            <td mat-cell *matCellDef=\\\"let user\\\">\\r\\n                <button (click)=\\\"editUser(user)\\\" mat-icon-button class=\\\"ml-xs overflow-visible\\\">\\r\\n                    <mat-icon>edit</mat-icon>\\r\\n                </button>\\r\\n\\r\\n                <button (click)=\\\"deleteUser(user)\\\" mat-icon-button class=\\\"ml-xs overflow-visible\\\">\\r\\n                    <mat-icon>delete</mat-icon>\\r\\n                </button>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n\\r\\n</div>\\r\\n\"","module.exports = \".container {\\n  padding: 30px; }\\n\\ntable {\\n  width: 100%; }\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {UsersService} from './users.service';\r\nimport {User} from './users.model';\r\nimport {MatDialog, MatDialogRef, MatSort, MatTableDataSource} from '@angular/material';\r\nimport {AddEditUserDialogComponent} from './add-edit-user-dialog/add-edit-user.dialog.component';\r\nimport {Subject} from 'rxjs';\r\n\r\n\r\n@Component({\r\n    selector: 'app-users',\r\n    templateUrl: './users.component.html',\r\n    styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n    displayedColumns: string[] = ['name', 'lastName', 'email', 'company', 'group', 'coins',\r\n        'created_at', 'updatedAt', 'isAdmin', 'actions'];\r\n    dataSource;\r\n    dataSourceSubject: Subject<any>;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n    error: string;\r\n\r\n    constructor(private usersService: UsersService,\r\n                private dialog: MatDialog) {\r\n        this.dataSourceSubject = new Subject<any>();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.dataSource = new MatTableDataSource([]);\r\n        this.usersService.getUsers().subscribe((users: User[]) => {\r\n            this.dataSource.data = users;\r\n            this.dataSourceSubject.next(this.dataSource.data);\r\n            this.dataSource.sort = this.sort;\r\n            this.error = '';\r\n        }, (error) => this.error = error.message);\r\n    }\r\n\r\n    public addUser(): void {\r\n        const dialogRef: MatDialogRef<AddEditUserDialogComponent> = this.dialog.open(AddEditUserDialogComponent, {\r\n            width: '450px'\r\n        });\r\n        dialogRef.afterClosed().subscribe((newUser: User) => {\r\n            // this.message = '';\r\n            // console.log(newUser);\r\n            if (newUser) {\r\n                // todo: add user\r\n                // console.log(newUser)\r\n                this.usersService.setUser(newUser).subscribe((response) => {\r\n                    // this.message = response.message;\r\n                    // console.log(\"INSIDE SET USER COMPO\")\r\n                }, (error) => console.log(error));\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    public editUser(user: User): void {\r\n        const dialogRef: MatDialogRef<AddEditUserDialogComponent> = this.dialog.open(AddEditUserDialogComponent, {\r\n            width: '450px',\r\n            data: {user: user}\r\n        });\r\n        dialogRef.afterClosed().subscribe((editUser: User) => {\r\n            console.log(editUser);\r\n            if (editUser) {\r\n                // todo: edit user\r\n                this.usersService.updateUser(editUser).subscribe((response) => {\r\n                    // this.message = response.message;\r\n                    console.log(\"INSIDE SET UPDATE USER COMPO\")\r\n                }, (error) => console.log(error));\r\n            }\r\n        });\r\n    }\r\n\r\n    public deleteUser(user: User): void {\r\n        // todo: delete user\r\n        this.usersService.deleteUser(user).subscribe((response) => {\r\n            // this.message = response.message;\r\n            console.log(\"INSIDE SET UPDATE USER COMPO\", user)\r\n        }, (error) => console.log(error));\r\n    }\r\n\r\n}\r\n","export class User {\r\n    name: string;\r\n    lastName: string;\r\n    email: string;\r\n    password : string;\r\n    group: string;\r\n    company : string;\r\n    countOfcorrectAns: number;\r\n    difficulty: number;\r\n    coins: number;\r\n    isAdmin : boolean;\r\n    created_at: string;\r\n    updatedAt: string;\r\n    constructor() {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatIconModule, MatCardModule, MatButtonModule, MatListModule, MatProgressBarModule, MatMenuModule,\r\n  MatTableModule, MatSortModule, MatFormFieldModule, MatSelectModule, MatDialogModule, MatInputModule\r\n} from '@angular/material';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { UsersComponent } from './users.component';\r\nimport { UsersRoutes } from './users.routing';\r\nimport { UsersService } from './users.service';\r\nimport { AddEditUserDialogComponent } from './add-edit-user-dialog/add-edit-user.dialog.component';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    RouterModule.forChild(UsersRoutes),\r\n    ChartsModule,\r\n    NgxDatatableModule,\r\n    FlexLayoutModule\r\n  ],\r\n  declarations: [ UsersComponent, AddEditUserDialogComponent ],\r\n  providers: [UsersService],\r\n  entryComponents: [AddEditUserDialogComponent]\r\n})\r\n\r\nexport class UsersModule {}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { UsersComponent } from './users.component';\r\n\r\nexport const UsersRoutes: Routes = [{\r\n  path: '',\r\n  component: UsersComponent\r\n}];\r\n","import {Injectable} from '@angular/core';\r\nimport {ApiService} from '../_services/api.service';\r\nimport {Observable} from 'rxjs';\r\nimport {User} from './users.model';\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\nimport * as _ from 'lodash';\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n    private usersSubject: BehaviorSubject<User[]> = new BehaviorSubject<User[]>([]);\r\n    users$: Observable<User[]> = this.usersSubject.asObservable();\r\n    constructor(private apiService: ApiService) {\r\n        this.loadAllUsers();\r\n    }\r\n\r\n    public updateUsers(newUsers: User[]): void {\r\n        this.usersSubject.next(_.cloneDeep(newUsers));\r\n    }\r\n\r\n    public getUsersValue(): User[] {\r\n        return _.cloneDeep(this.usersSubject.getValue());\r\n    }\r\n\r\n    public loadAllUsers(): void {\r\n        this.getUsers().subscribe((users: User[]) => {\r\n            this.updateUsers(users);\r\n        });\r\n    }\r\n\r\n\r\n\r\n    public setUser(newUser: User): Observable<any> {\r\n        // console.log(newUser);\r\n        // console.log('INSIDE SET USER SERViCE');\r\n        return this.apiService.setUser(newUser);\r\n    }\r\n\r\n    public updateUser(newUser: User): Observable<any> {\r\n        console.log(newUser);\r\n        // console.log('INSIDE SET USER SERViCE');\r\n        return this.apiService.updateUser(newUser);\r\n    }\r\n\r\n    public deleteUser(newUser: User): Observable<any> {\r\n        console.log(newUser);\r\n        // console.log('INSIDE SET USER SERViCE');\r\n        return this.apiService.deleteUser(newUser);\r\n    }\r\n\r\n\r\n\r\n    public getUsers(): Observable<User[]> {\r\n        return this.apiService.getUsers();\r\n    }\r\n\r\n\r\n}\r\n"],"sourceRoot":""}