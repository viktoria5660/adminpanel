{"version":3,"file":"material-examples.umd.min.js","sources":["../../src/material-examples/example-module.ts","../../src/material-examples/example-data.ts","../../src/material-examples/toolbar-multirow/toolbar-multirow-example.ts","../../src/material-examples/toolbar-overview/toolbar-overview-example.ts","../../src/material-examples/tooltip-auto-hide/tooltip-auto-hide-example.ts","../../src/material-examples/tooltip-custom-class/tooltip-custom-class-example.ts","../../src/material-examples/tooltip-delay/tooltip-delay-example.ts","../../src/material-examples/tooltip-disabled/tooltip-disabled-example.ts","../../src/material-examples/tooltip-manual/tooltip-manual-example.ts","../../src/material-examples/tooltip-message/tooltip-message-example.ts","../../src/material-examples/tooltip-modified-defaults/tooltip-modified-defaults-example.ts","../../src/material-examples/tooltip-overview/tooltip-overview-example.ts","../../src/material-examples/tooltip-position/tooltip-position-example.ts","../../src/material-examples/tree-checklist/tree-checklist-example.ts","../../src/material-examples/tree-dynamic/tree-dynamic-example.ts","../../src/material-examples/tree-flat-overview/tree-flat-overview-example.ts","../../src/material-examples/tree-loadmore/tree-loadmore-example.ts","../../src/material-examples/tree-nested-overview/tree-nested-overview-example.ts","../../src/material-examples/table-basic/table-basic-example.ts","../../src/material-examples/table-dynamic-columns/table-dynamic-columns-example.ts","../../src/material-examples/table-filtering/table-filtering-example.ts","../../src/material-examples/table-footer-row/table-footer-row-example.ts","../../src/material-examples/table-http/table-http-example.ts","../../src/material-examples/table-multiple-header-footer/table-multiple-header-footer-example.ts","../../src/material-examples/table-native-only/table-native-only-example.ts","../../src/material-examples/table-overview/table-overview-example.ts","../../src/material-examples/table-pagination/table-pagination-example.ts","../../src/material-examples/table-row-context/table-row-context-example.ts","../../src/material-examples/table-selection/table-selection-example.ts","../../src/material-examples/table-sorting/table-sorting-example.ts","../../src/material-examples/tabs-overview/tabs-overview-example.ts","../../src/material-examples/tabs-template-label/tabs-template-label-example.ts","../../src/material-examples/text-field-autofill-directive/text-field-autofill-directive-example.ts","../../src/material-examples/text-field-autofill-monitor/text-field-autofill-monitor-example.ts","../../src/material-examples/text-field-autosize-textarea/text-field-autosize-textarea-example.ts","../../src/material-examples/select-optgroup/select-optgroup-example.ts","../../src/material-examples/select-overview/select-overview-example.ts","../../src/material-examples/select-panel-class/select-panel-class-example.ts","../../src/material-examples/select-reset/select-reset-example.ts","../../src/material-examples/select-value-binding/select-value-binding-example.ts","../../src/material-examples/sidenav-autosize/sidenav-autosize-example.ts","../../src/material-examples/sidenav-backdrop/sidenav-backdrop-example.ts","../../src/material-examples/sidenav-disable-close/sidenav-disable-close-example.ts","../../src/material-examples/sidenav-drawer-overview/sidenav-drawer-overview-example.ts","../../src/material-examples/sidenav-fixed/sidenav-fixed-example.ts","../../src/material-examples/sidenav-mode/sidenav-mode-example.ts","../../src/material-examples/sidenav-open-close/sidenav-open-close-example.ts","../../src/material-examples/sidenav-overview/sidenav-overview-example.ts","../../src/material-examples/sidenav-position/sidenav-position-example.ts","../../src/material-examples/sidenav-responsive/sidenav-responsive-example.ts","../../src/material-examples/slide-toggle-configurable/slide-toggle-configurable-example.ts","../../src/material-examples/slide-toggle-forms/slide-toggle-forms-example.ts","../../src/material-examples/slide-toggle-overview/slide-toggle-overview-example.ts","../../src/material-examples/slider-configurable/slider-configurable-example.ts","../../src/material-examples/slider-formatting/slider-formatting-example.ts","../../src/material-examples/slider-overview/slider-overview-example.ts","../../src/material-examples/snack-bar-component/snack-bar-component-example.ts","../../src/material-examples/snack-bar-overview/snack-bar-overview-example.ts","../../src/material-examples/snack-bar-position/snack-bar-position-example.ts","../../src/material-examples/sort-overview/sort-overview-example.ts","../../src/material-examples/stepper-editable/stepper-editable-example.ts","../../src/material-examples/stepper-optional/stepper-optional-example.ts","../../src/material-examples/stepper-overview/stepper-overview-example.ts","../../src/material-examples/table-basic-flex/table-basic-flex-example.ts","../../src/material-examples/form-field-custom-control/form-field-custom-control-example.ts","../../src/material-examples/form-field-error/form-field-error-example.ts","../../src/material-examples/form-field-hint/form-field-hint-example.ts","../../src/material-examples/form-field-label/form-field-label-example.ts","../../src/material-examples/form-field-overview/form-field-overview-example.ts","../../src/material-examples/form-field-prefix-suffix/form-field-prefix-suffix-example.ts","../../src/material-examples/form-field-theming/form-field-theming-example.ts","../../src/material-examples/grid-list-dynamic/grid-list-dynamic-example.ts","../../src/material-examples/grid-list-overview/grid-list-overview-example.ts","../../src/material-examples/icon-overview/icon-overview-example.ts","../../src/material-examples/icon-svg/icon-svg-example.ts","../../src/material-examples/input-clearable/input-clearable-example.ts","../../src/material-examples/input-error-state-matcher/input-error-state-matcher-example.ts","../../src/material-examples/input-errors/input-errors-example.ts","../../src/material-examples/input-form/input-form-example.ts","../../src/material-examples/input-hint/input-hint-example.ts","../../src/material-examples/input-overview/input-overview-example.ts","../../src/material-examples/input-prefix-suffix/input-prefix-suffix-example.ts","../../src/material-examples/list-overview/list-overview-example.ts","../../src/material-examples/list-sections/list-sections-example.ts","../../src/material-examples/list-selection/list-selection-example.ts","../../src/material-examples/menu-icons/menu-icons-example.ts","../../src/material-examples/menu-overview/menu-overview-example.ts","../../src/material-examples/nested-menu/nested-menu-example.ts","../../src/material-examples/paginator-configurable/paginator-configurable-example.ts","../../src/material-examples/paginator-overview/paginator-overview-example.ts","../../src/material-examples/progress-bar-buffer/progress-bar-buffer-example.ts","../../src/material-examples/progress-bar-configurable/progress-bar-configurable-example.ts","../../src/material-examples/progress-bar-determinate/progress-bar-determinate-example.ts","../../src/material-examples/progress-bar-indeterminate/progress-bar-indeterminate-example.ts","../../src/material-examples/progress-bar-query/progress-bar-query-example.ts","../../src/material-examples/progress-spinner-configurable/progress-spinner-configurable-example.ts","../../src/material-examples/progress-spinner-overview/progress-spinner-overview-example.ts","../../src/material-examples/radio-ng-model/radio-ng-model-example.ts","../../src/material-examples/radio-overview/radio-overview-example.ts","../../src/material-examples/select-custom-trigger/select-custom-trigger-example.ts","../../src/material-examples/select-disabled/select-disabled-example.ts","../../src/material-examples/select-error-state-matcher/select-error-state-matcher-example.ts","../../src/material-examples/select-form/select-form-example.ts","../../src/material-examples/select-hint-error/select-hint-error-example.ts","../../src/material-examples/select-multiple/select-multiple-example.ts","../../src/material-examples/select-no-ripple/select-no-ripple-example.ts","../../src/material-examples/chips-input/chips-input-example.ts","../../src/material-examples/chips-overview/chips-overview-example.ts","../../src/material-examples/chips-stacked/chips-stacked-example.ts","../../src/material-examples/datepicker-api/datepicker-api-example.ts","../../src/material-examples/datepicker-color/datepicker-color-example.ts","../../src/material-examples/datepicker-custom-header/datepicker-custom-header-example.ts","../../src/material-examples/datepicker-custom-icon/datepicker-custom-icon-example.ts","../../src/material-examples/datepicker-disabled/datepicker-disabled-example.ts","../../src/material-examples/datepicker-events/datepicker-events-example.ts","../../src/material-examples/datepicker-filter/datepicker-filter-example.ts","../../src/material-examples/datepicker-formats/datepicker-formats-example.ts","../../src/material-examples/datepicker-locale/datepicker-locale-example.ts","../../src/material-examples/datepicker-min-max/datepicker-min-max-example.ts","../../src/material-examples/datepicker-moment/datepicker-moment-example.ts","../../src/material-examples/datepicker-overview/datepicker-overview-example.ts","../../src/material-examples/datepicker-start-view/datepicker-start-view-example.ts","../../src/material-examples/datepicker-touch/datepicker-touch-example.ts","../../src/material-examples/datepicker-value/datepicker-value-example.ts","../../src/material-examples/datepicker-views-selection/datepicker-views-selection-example.ts","../../src/material-examples/dialog-content/dialog-content-example.ts","../../src/material-examples/dialog-data/dialog-data-example.ts","../../src/material-examples/dialog-elements/dialog-elements-example.ts","../../src/material-examples/dialog-overview/dialog-overview-example.ts","../../src/material-examples/divider-overview/divider-overview-example.ts","../../src/material-examples/elevation-overview/elevation-overview-example.ts","../../src/material-examples/expansion-expand-collapse-all/expansion-expand-collapse-all-example.ts","../../src/material-examples/expansion-overview/expansion-overview-example.ts","../../src/material-examples/expansion-steps/expansion-steps-example.ts","../../src/material-examples/focus-monitor-directives/focus-monitor-directives-example.ts","../../src/material-examples/focus-monitor-focus-via/focus-monitor-focus-via-example.ts","../../src/material-examples/focus-monitor-overview/focus-monitor-overview-example.ts","../../src/material-examples/form-field-appearance/form-field-appearance-example.ts","../../node_modules/tslib/tslib.es6.js","../../src/material-examples/material-module.ts","../../src/material-examples/autocomplete-auto-active-first-option/autocomplete-auto-active-first-option-example.ts","../../src/material-examples/autocomplete-display/autocomplete-display-example.ts","../../src/material-examples/autocomplete-filter/autocomplete-filter-example.ts","../../src/material-examples/autocomplete-optgroup/autocomplete-optgroup-example.ts","../../src/material-examples/autocomplete-overview/autocomplete-overview-example.ts","../../src/material-examples/autocomplete-simple/autocomplete-simple-example.ts","../../src/material-examples/badge-overview/badge-overview-example.ts","../../src/material-examples/bottom-sheet-overview/bottom-sheet-overview-example.ts","../../src/material-examples/button-overview/button-overview-example.ts","../../src/material-examples/button-toggle-exclusive/button-toggle-exclusive-example.ts","../../src/material-examples/button-toggle-overview/button-toggle-overview-example.ts","../../src/material-examples/button-types/button-types-example.ts","../../src/material-examples/card-fancy/card-fancy-example.ts","../../src/material-examples/card-overview/card-overview-example.ts","../../src/material-examples/cdk-table-basic-flex/cdk-table-basic-flex-example.ts","../../src/material-examples/cdk-table-basic/cdk-table-basic-example.ts","../../src/material-examples/cdk-tree-flat/cdk-tree-flat-example.ts","../../src/material-examples/cdk-tree-nested/cdk-tree-nested-example.ts","../../src/material-examples/checkbox-configurable/checkbox-configurable-example.ts","../../src/material-examples/checkbox-overview/checkbox-overview-example.ts","../../src/material-examples/chips-autocomplete/chips-autocomplete-example.ts"],"sourcesContent":["\n/* tslint:disable */\n/** DO NOT MANUALLY EDIT THIS FILE, IT IS GENERATED VIA GULP 'build-examples-module' */\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {ExampleMaterialModule} from './material-module';\nimport {AutocompleteAutoActiveFirstOptionExample} from './autocomplete-auto-active-first-option/autocomplete-auto-active-first-option-example';\nimport {AutocompleteDisplayExample} from './autocomplete-display/autocomplete-display-example';\nimport {AutocompleteFilterExample} from './autocomplete-filter/autocomplete-filter-example';\nimport {AutocompleteOptgroupExample} from './autocomplete-optgroup/autocomplete-optgroup-example';\nimport {AutocompleteOverviewExample} from './autocomplete-overview/autocomplete-overview-example';\nimport {AutocompleteSimpleExample} from './autocomplete-simple/autocomplete-simple-example';\nimport {BadgeOverviewExample} from './badge-overview/badge-overview-example';\nimport {BottomSheetOverviewExampleSheet,BottomSheetOverviewExample} from './bottom-sheet-overview/bottom-sheet-overview-example';\nimport {ButtonOverviewExample} from './button-overview/button-overview-example';\nimport {ButtonToggleExclusiveExample} from './button-toggle-exclusive/button-toggle-exclusive-example';\nimport {ButtonToggleOverviewExample} from './button-toggle-overview/button-toggle-overview-example';\nimport {ButtonTypesExample} from './button-types/button-types-example';\nimport {CardFancyExample} from './card-fancy/card-fancy-example';\nimport {CardOverviewExample} from './card-overview/card-overview-example';\nimport {CdkTableBasicFlexExample} from './cdk-table-basic-flex/cdk-table-basic-flex-example';\nimport {CdkTableBasicExample} from './cdk-table-basic/cdk-table-basic-example';\nimport {CdkTreeFlatExample} from './cdk-tree-flat/cdk-tree-flat-example';\nimport {CdkTreeNestedExample} from './cdk-tree-nested/cdk-tree-nested-example';\nimport {CheckboxConfigurableExample} from './checkbox-configurable/checkbox-configurable-example';\nimport {CheckboxOverviewExample} from './checkbox-overview/checkbox-overview-example';\nimport {ChipsAutocompleteExample} from './chips-autocomplete/chips-autocomplete-example';\nimport {ChipsInputExample} from './chips-input/chips-input-example';\nimport {ChipsOverviewExample} from './chips-overview/chips-overview-example';\nimport {ChipsStackedExample} from './chips-stacked/chips-stacked-example';\nimport {DatepickerApiExample} from './datepicker-api/datepicker-api-example';\nimport {DatepickerColorExample} from './datepicker-color/datepicker-color-example';\nimport {ExampleHeader,DatepickerCustomHeaderExample} from './datepicker-custom-header/datepicker-custom-header-example';\nimport {DatepickerCustomIconExample} from './datepicker-custom-icon/datepicker-custom-icon-example';\nimport {DatepickerDisabledExample} from './datepicker-disabled/datepicker-disabled-example';\nimport {DatepickerEventsExample} from './datepicker-events/datepicker-events-example';\nimport {DatepickerFilterExample} from './datepicker-filter/datepicker-filter-example';\nimport {DatepickerFormatsExample} from './datepicker-formats/datepicker-formats-example';\nimport {DatepickerLocaleExample} from './datepicker-locale/datepicker-locale-example';\nimport {DatepickerMinMaxExample} from './datepicker-min-max/datepicker-min-max-example';\nimport {DatepickerMomentExample} from './datepicker-moment/datepicker-moment-example';\nimport {DatepickerOverviewExample} from './datepicker-overview/datepicker-overview-example';\nimport {DatepickerStartViewExample} from './datepicker-start-view/datepicker-start-view-example';\nimport {DatepickerTouchExample} from './datepicker-touch/datepicker-touch-example';\nimport {DatepickerValueExample} from './datepicker-value/datepicker-value-example';\nimport {DatepickerViewsSelectionExample} from './datepicker-views-selection/datepicker-views-selection-example';\nimport {DialogContentExampleDialog,DialogContentExample} from './dialog-content/dialog-content-example';\nimport {DialogDataExampleDialog,DialogDataExample} from './dialog-data/dialog-data-example';\nimport {DialogElementsExampleDialog,DialogElementsExample} from './dialog-elements/dialog-elements-example';\nimport {DialogOverviewExampleDialog,DialogOverviewExample} from './dialog-overview/dialog-overview-example';\nimport {DividerOverviewExample} from './divider-overview/divider-overview-example';\nimport {ElevationOverviewExample} from './elevation-overview/elevation-overview-example';\nimport {ExpansionExpandCollapseAllExample} from './expansion-expand-collapse-all/expansion-expand-collapse-all-example';\nimport {ExpansionOverviewExample} from './expansion-overview/expansion-overview-example';\nimport {ExpansionStepsExample} from './expansion-steps/expansion-steps-example';\nimport {FocusMonitorDirectivesExample} from './focus-monitor-directives/focus-monitor-directives-example';\nimport {FocusMonitorFocusViaExample} from './focus-monitor-focus-via/focus-monitor-focus-via-example';\nimport {FocusMonitorOverviewExample} from './focus-monitor-overview/focus-monitor-overview-example';\nimport {FormFieldAppearanceExample} from './form-field-appearance/form-field-appearance-example';\nimport {MyTelInput,FormFieldCustomControlExample} from './form-field-custom-control/form-field-custom-control-example';\nimport {FormFieldErrorExample} from './form-field-error/form-field-error-example';\nimport {FormFieldHintExample} from './form-field-hint/form-field-hint-example';\nimport {FormFieldLabelExample} from './form-field-label/form-field-label-example';\nimport {FormFieldOverviewExample} from './form-field-overview/form-field-overview-example';\nimport {FormFieldPrefixSuffixExample} from './form-field-prefix-suffix/form-field-prefix-suffix-example';\nimport {FormFieldThemingExample} from './form-field-theming/form-field-theming-example';\nimport {GridListDynamicExample} from './grid-list-dynamic/grid-list-dynamic-example';\nimport {GridListOverviewExample} from './grid-list-overview/grid-list-overview-example';\nimport {IconOverviewExample} from './icon-overview/icon-overview-example';\nimport {IconSvgExample} from './icon-svg/icon-svg-example';\nimport {InputClearableExample} from './input-clearable/input-clearable-example';\nimport {InputErrorStateMatcherExample} from './input-error-state-matcher/input-error-state-matcher-example';\nimport {InputErrorsExample} from './input-errors/input-errors-example';\nimport {InputFormExample} from './input-form/input-form-example';\nimport {InputHintExample} from './input-hint/input-hint-example';\nimport {InputOverviewExample} from './input-overview/input-overview-example';\nimport {InputPrefixSuffixExample} from './input-prefix-suffix/input-prefix-suffix-example';\nimport {ListOverviewExample} from './list-overview/list-overview-example';\nimport {ListSectionsExample} from './list-sections/list-sections-example';\nimport {ListSelectionExample} from './list-selection/list-selection-example';\nimport {MenuIconsExample} from './menu-icons/menu-icons-example';\nimport {MenuOverviewExample} from './menu-overview/menu-overview-example';\nimport {NestedMenuExample} from './nested-menu/nested-menu-example';\nimport {PaginatorConfigurableExample} from './paginator-configurable/paginator-configurable-example';\nimport {PaginatorOverviewExample} from './paginator-overview/paginator-overview-example';\nimport {ProgressBarBufferExample} from './progress-bar-buffer/progress-bar-buffer-example';\nimport {ProgressBarConfigurableExample} from './progress-bar-configurable/progress-bar-configurable-example';\nimport {ProgressBarDeterminateExample} from './progress-bar-determinate/progress-bar-determinate-example';\nimport {ProgressBarIndeterminateExample} from './progress-bar-indeterminate/progress-bar-indeterminate-example';\nimport {ProgressBarQueryExample} from './progress-bar-query/progress-bar-query-example';\nimport {ProgressSpinnerConfigurableExample} from './progress-spinner-configurable/progress-spinner-configurable-example';\nimport {ProgressSpinnerOverviewExample} from './progress-spinner-overview/progress-spinner-overview-example';\nimport {RadioNgModelExample} from './radio-ng-model/radio-ng-model-example';\nimport {RadioOverviewExample} from './radio-overview/radio-overview-example';\nimport {SelectCustomTriggerExample} from './select-custom-trigger/select-custom-trigger-example';\nimport {SelectDisabledExample} from './select-disabled/select-disabled-example';\nimport {SelectErrorStateMatcherExample} from './select-error-state-matcher/select-error-state-matcher-example';\nimport {SelectFormExample} from './select-form/select-form-example';\nimport {SelectHintErrorExample} from './select-hint-error/select-hint-error-example';\nimport {SelectMultipleExample} from './select-multiple/select-multiple-example';\nimport {SelectNoRippleExample} from './select-no-ripple/select-no-ripple-example';\nimport {SelectOptgroupExample} from './select-optgroup/select-optgroup-example';\nimport {SelectOverviewExample} from './select-overview/select-overview-example';\nimport {SelectPanelClassExample} from './select-panel-class/select-panel-class-example';\nimport {SelectResetExample} from './select-reset/select-reset-example';\nimport {SelectValueBindingExample} from './select-value-binding/select-value-binding-example';\nimport {SidenavAutosizeExample} from './sidenav-autosize/sidenav-autosize-example';\nimport {SidenavBackdropExample} from './sidenav-backdrop/sidenav-backdrop-example';\nimport {SidenavDisableCloseExample} from './sidenav-disable-close/sidenav-disable-close-example';\nimport {SidenavDrawerOverviewExample} from './sidenav-drawer-overview/sidenav-drawer-overview-example';\nimport {SidenavFixedExample} from './sidenav-fixed/sidenav-fixed-example';\nimport {SidenavModeExample} from './sidenav-mode/sidenav-mode-example';\nimport {SidenavOpenCloseExample} from './sidenav-open-close/sidenav-open-close-example';\nimport {SidenavOverviewExample} from './sidenav-overview/sidenav-overview-example';\nimport {SidenavPositionExample} from './sidenav-position/sidenav-position-example';\nimport {SidenavResponsiveExample} from './sidenav-responsive/sidenav-responsive-example';\nimport {SlideToggleConfigurableExample} from './slide-toggle-configurable/slide-toggle-configurable-example';\nimport {SlideToggleFormsExample} from './slide-toggle-forms/slide-toggle-forms-example';\nimport {SlideToggleOverviewExample} from './slide-toggle-overview/slide-toggle-overview-example';\nimport {SliderConfigurableExample} from './slider-configurable/slider-configurable-example';\nimport {SliderFormattingExample} from './slider-formatting/slider-formatting-example';\nimport {SliderOverviewExample} from './slider-overview/slider-overview-example';\nimport {PizzaPartyComponent,SnackBarComponentExample} from './snack-bar-component/snack-bar-component-example';\nimport {SnackBarOverviewExample} from './snack-bar-overview/snack-bar-overview-example';\nimport {SnackBarPositionExample} from './snack-bar-position/snack-bar-position-example';\nimport {SortOverviewExample} from './sort-overview/sort-overview-example';\nimport {StepperEditableExample} from './stepper-editable/stepper-editable-example';\nimport {StepperOptionalExample} from './stepper-optional/stepper-optional-example';\nimport {StepperOverviewExample} from './stepper-overview/stepper-overview-example';\nimport {TableBasicFlexExample} from './table-basic-flex/table-basic-flex-example';\nimport {TableBasicExample} from './table-basic/table-basic-example';\nimport {TableDynamicColumnsExample} from './table-dynamic-columns/table-dynamic-columns-example';\nimport {TableFilteringExample} from './table-filtering/table-filtering-example';\nimport {TableFooterRowExample} from './table-footer-row/table-footer-row-example';\nimport {TableHttpExample} from './table-http/table-http-example';\nimport {TableMultipleHeaderFooterExample} from './table-multiple-header-footer/table-multiple-header-footer-example';\nimport {TableNativeOnlyExample} from './table-native-only/table-native-only-example';\nimport {TableOverviewExample} from './table-overview/table-overview-example';\nimport {TablePaginationExample} from './table-pagination/table-pagination-example';\nimport {TableRowContextExample} from './table-row-context/table-row-context-example';\nimport {TableSelectionExample} from './table-selection/table-selection-example';\nimport {TableSortingExample} from './table-sorting/table-sorting-example';\nimport {TabsOverviewExample} from './tabs-overview/tabs-overview-example';\nimport {TabsTemplateLabelExample} from './tabs-template-label/tabs-template-label-example';\nimport {TextFieldAutofillDirectiveExample} from './text-field-autofill-directive/text-field-autofill-directive-example';\nimport {TextFieldAutofillMonitorExample} from './text-field-autofill-monitor/text-field-autofill-monitor-example';\nimport {TextFieldAutosizeTextareaExample} from './text-field-autosize-textarea/text-field-autosize-textarea-example';\nimport {ToolbarMultirowExample} from './toolbar-multirow/toolbar-multirow-example';\nimport {ToolbarOverviewExample} from './toolbar-overview/toolbar-overview-example';\nimport {TooltipAutoHideExample} from './tooltip-auto-hide/tooltip-auto-hide-example';\nimport {TooltipCustomClassExample} from './tooltip-custom-class/tooltip-custom-class-example';\nimport {TooltipDelayExample} from './tooltip-delay/tooltip-delay-example';\nimport {TooltipDisabledExample} from './tooltip-disabled/tooltip-disabled-example';\nimport {TooltipManualExample} from './tooltip-manual/tooltip-manual-example';\nimport {TooltipMessageExample} from './tooltip-message/tooltip-message-example';\nimport {TooltipModifiedDefaultsExample} from './tooltip-modified-defaults/tooltip-modified-defaults-example';\nimport {TooltipOverviewExample} from './tooltip-overview/tooltip-overview-example';\nimport {TooltipPositionExample} from './tooltip-position/tooltip-position-example';\nimport {TreeChecklistExample} from './tree-checklist/tree-checklist-example';\nimport {TreeDynamicExample} from './tree-dynamic/tree-dynamic-example';\nimport {TreeFlatOverviewExample} from './tree-flat-overview/tree-flat-overview-example';\nimport {TreeLoadmoreExample} from './tree-loadmore/tree-loadmore-example';\nimport {TreeNestedOverviewExample} from './tree-nested-overview/tree-nested-overview-example';\n\nexport interface LiveExample {\n  title: string;\n  component: any;\n  additionalFiles?: string[];\n  selectorName?: string;\n}\n\nexport const EXAMPLE_COMPONENTS: {[key: string]: LiveExample} = {\n  'autocomplete-auto-active-first-option': {\n    title: 'Highlight the first autocomplete option',\n    component: AutocompleteAutoActiveFirstOptionExample\n  },\n  'autocomplete-display': {\n    title: 'Display value autocomplete',\n    component: AutocompleteDisplayExample\n  },\n  'autocomplete-filter': {\n    title: 'Filter autocomplete',\n    component: AutocompleteFilterExample\n  },\n  'autocomplete-optgroup': {\n    title: 'Option groups autocomplete',\n    component: AutocompleteOptgroupExample\n  },\n  'autocomplete-overview': {\n    title: 'Autocomplete overview',\n    component: AutocompleteOverviewExample\n  },\n  'autocomplete-simple': {\n    title: 'Simple autocomplete',\n    component: AutocompleteSimpleExample\n  },\n  'badge-overview': {\n    title: 'Badge overview',\n    component: BadgeOverviewExample\n  },\n  'bottom-sheet-overview': {\n    title: 'Bottom Sheet Overview',\n    component: BottomSheetOverviewExample,\n    additionalFiles: [\"bottom-sheet-overview-example-sheet.html\"],\n    selectorName: 'BottomSheetOverviewExample, BottomSheetOverviewExampleSheet'\n  },\n  'button-overview': {\n    title: 'Basic buttons',\n    component: ButtonOverviewExample\n  },\n  'button-toggle-exclusive': {\n    title: 'Exclusive selection',\n    component: ButtonToggleExclusiveExample\n  },\n  'button-toggle-overview': {\n    title: 'Basic button-toggles',\n    component: ButtonToggleOverviewExample\n  },\n  'button-types': {\n    title: 'Button varieties',\n    component: ButtonTypesExample\n  },\n  'card-fancy': {\n    title: 'Card with multiple sections',\n    component: CardFancyExample\n  },\n  'card-overview': {\n    title: 'Basic cards',\n    component: CardOverviewExample\n  },\n  'cdk-table-basic-flex': {\n    title: 'Basic use of `<cdk-table>` (uses display flex)',\n    component: CdkTableBasicFlexExample\n  },\n  'cdk-table-basic': {\n    title: 'Basic CDK data-table',\n    component: CdkTableBasicExample\n  },\n  'cdk-tree-flat': {\n    title: 'Tree with flat nodes',\n    component: CdkTreeFlatExample\n  },\n  'cdk-tree-nested': {\n    title: 'Tree with nested nodes',\n    component: CdkTreeNestedExample\n  },\n  'checkbox-configurable': {\n    title: 'Configurable checkbox',\n    component: CheckboxConfigurableExample\n  },\n  'checkbox-overview': {\n    title: 'Basic checkboxes',\n    component: CheckboxOverviewExample\n  },\n  'chips-autocomplete': {\n    title: 'Chips Autocomplete',\n    component: ChipsAutocompleteExample\n  },\n  'chips-input': {\n    title: 'Chips with input',\n    component: ChipsInputExample\n  },\n  'chips-overview': {\n    title: 'Basic chips',\n    component: ChipsOverviewExample\n  },\n  'chips-stacked': {\n    title: 'Stacked chips',\n    component: ChipsStackedExample\n  },\n  'datepicker-api': {\n    title: 'Datepicker open method',\n    component: DatepickerApiExample\n  },\n  'datepicker-color': {\n    title: 'Datepicker palette colors',\n    component: DatepickerColorExample\n  },\n  'datepicker-custom-header': {\n    title: 'Datepicker with custom calendar header',\n    component: DatepickerCustomHeaderExample,\n    selectorName: 'DatepickerCustomHeaderExample, ExampleHeader'\n  },\n  'datepicker-custom-icon': {\n    title: 'Datepicker with custom icon',\n    component: DatepickerCustomIconExample\n  },\n  'datepicker-disabled': {\n    title: 'Disabled datepicker',\n    component: DatepickerDisabledExample\n  },\n  'datepicker-events': {\n    title: 'Datepicker input and change events',\n    component: DatepickerEventsExample\n  },\n  'datepicker-filter': {\n    title: 'Datepicker with filter validation',\n    component: DatepickerFilterExample\n  },\n  'datepicker-formats': {\n    title: 'Datepicker with custom formats',\n    component: DatepickerFormatsExample\n  },\n  'datepicker-locale': {\n    title: 'Datepicker with different locale',\n    component: DatepickerLocaleExample\n  },\n  'datepicker-min-max': {\n    title: 'Datepicker with min & max validation',\n    component: DatepickerMinMaxExample\n  },\n  'datepicker-moment': {\n    title: 'Datepicker that uses Moment.js dates',\n    component: DatepickerMomentExample\n  },\n  'datepicker-overview': {\n    title: 'Basic datepicker',\n    component: DatepickerOverviewExample\n  },\n  'datepicker-start-view': {\n    title: 'Datepicker start date',\n    component: DatepickerStartViewExample\n  },\n  'datepicker-touch': {\n    title: 'Datepicker touch UI',\n    component: DatepickerTouchExample\n  },\n  'datepicker-value': {\n    title: 'Datepicker selected value',\n    component: DatepickerValueExample\n  },\n  'datepicker-views-selection': {\n    title: 'Datepicker emulating a Year and month picker',\n    component: DatepickerViewsSelectionExample\n  },\n  'dialog-content': {\n    title: 'Dialog with header, scrollable content and actions',\n    component: DialogContentExample,\n    additionalFiles: [\"dialog-content-example-dialog.html\"],\n    selectorName: 'DialogContentExample, DialogContentExampleDialog'\n  },\n  'dialog-data': {\n    title: 'Injecting data when opening a dialog',\n    component: DialogDataExample,\n    additionalFiles: [\"dialog-data-example-dialog.html\"],\n    selectorName: 'DialogDataExample, DialogDataExampleDialog'\n  },\n  'dialog-elements': {\n    title: 'Dialog elements',\n    component: DialogElementsExample,\n    additionalFiles: [\"dialog-elements-example-dialog.html\"],\n    selectorName: 'DialogElementsExample, DialogElementsExampleDialog'\n  },\n  'dialog-overview': {\n    title: 'Dialog Overview',\n    component: DialogOverviewExample,\n    additionalFiles: [\"dialog-overview-example-dialog.html\"],\n    selectorName: 'DialogOverviewExample, DialogOverviewExampleDialog'\n  },\n  'divider-overview': {\n    title: 'Basic divider',\n    component: DividerOverviewExample\n  },\n  'elevation-overview': {\n    title: 'Elevation CSS classes',\n    component: ElevationOverviewExample\n  },\n  'expansion-expand-collapse-all': {\n    title: 'Accordion with expand/collapse all toggles',\n    component: ExpansionExpandCollapseAllExample\n  },\n  'expansion-overview': {\n    title: 'Basic expansion panel',\n    component: ExpansionOverviewExample\n  },\n  'expansion-steps': {\n    title: 'Expansion panel as accordion',\n    component: ExpansionStepsExample\n  },\n  'focus-monitor-directives': {\n    title: 'Monitoring focus with FocusMonitor',\n    component: FocusMonitorDirectivesExample\n  },\n  'focus-monitor-focus-via': {\n    title: 'Focusing with a specific FocusOrigin',\n    component: FocusMonitorFocusViaExample\n  },\n  'focus-monitor-overview': {\n    title: 'Monitoring focus with FocusMonitor',\n    component: FocusMonitorOverviewExample\n  },\n  'form-field-appearance': {\n    title: 'Form field appearance variants',\n    component: FormFieldAppearanceExample\n  },\n  'form-field-custom-control': {\n    title: 'Form field with custom telephone number input control.',\n    component: FormFieldCustomControlExample,\n    additionalFiles: [\"form-field-custom-control-example.html\"],\n    selectorName: 'FormFieldCustomControlExample, MyTelInput'\n  },\n  'form-field-error': {\n    title: 'Form field with error messages',\n    component: FormFieldErrorExample\n  },\n  'form-field-hint': {\n    title: 'Form field with hints',\n    component: FormFieldHintExample\n  },\n  'form-field-label': {\n    title: 'Form field with label',\n    component: FormFieldLabelExample\n  },\n  'form-field-overview': {\n    title: 'Simple form field',\n    component: FormFieldOverviewExample\n  },\n  'form-field-prefix-suffix': {\n    title: 'Form field with prefix & suffix',\n    component: FormFieldPrefixSuffixExample\n  },\n  'form-field-theming': {\n    title: 'Form field theming',\n    component: FormFieldThemingExample\n  },\n  'grid-list-dynamic': {\n    title: 'Dynamic grid-list',\n    component: GridListDynamicExample\n  },\n  'grid-list-overview': {\n    title: 'Basic grid-list',\n    component: GridListOverviewExample\n  },\n  'icon-overview': {\n    title: 'Basic icons',\n    component: IconOverviewExample\n  },\n  'icon-svg': {\n    title: 'SVG icons',\n    component: IconSvgExample\n  },\n  'input-clearable': {\n    title: 'Input with a clear button',\n    component: InputClearableExample\n  },\n  'input-error-state-matcher': {\n    title: 'Input with a custom ErrorStateMatcher',\n    component: InputErrorStateMatcherExample\n  },\n  'input-errors': {\n    title: 'Input with error messages',\n    component: InputErrorsExample\n  },\n  'input-form': {\n    title: 'Inputs in a form',\n    component: InputFormExample\n  },\n  'input-hint': {\n    title: 'Input with hints',\n    component: InputHintExample\n  },\n  'input-overview': {\n    title: 'Basic Inputs',\n    component: InputOverviewExample\n  },\n  'input-prefix-suffix': {\n    title: 'Inputs with prefixes and suffixes',\n    component: InputPrefixSuffixExample\n  },\n  'list-overview': {\n    title: 'Basic list',\n    component: ListOverviewExample\n  },\n  'list-sections': {\n    title: 'List with sections',\n    component: ListSectionsExample\n  },\n  'list-selection': {\n    title: 'List with selection',\n    component: ListSelectionExample\n  },\n  'menu-icons': {\n    title: 'Menu with icons',\n    component: MenuIconsExample\n  },\n  'menu-overview': {\n    title: 'Basic menu',\n    component: MenuOverviewExample\n  },\n  'nested-menu': {\n    title: 'Nested menu',\n    component: NestedMenuExample\n  },\n  'paginator-configurable': {\n    title: 'Configurable paginator',\n    component: PaginatorConfigurableExample\n  },\n  'paginator-overview': {\n    title: 'Paginator',\n    component: PaginatorOverviewExample\n  },\n  'progress-bar-buffer': {\n    title: 'Buffer progress-bar',\n    component: ProgressBarBufferExample\n  },\n  'progress-bar-configurable': {\n    title: 'Configurable progress-bar',\n    component: ProgressBarConfigurableExample\n  },\n  'progress-bar-determinate': {\n    title: 'Determinate progress-bar',\n    component: ProgressBarDeterminateExample\n  },\n  'progress-bar-indeterminate': {\n    title: 'Indeterminate progress-bar',\n    component: ProgressBarIndeterminateExample\n  },\n  'progress-bar-query': {\n    title: 'Query progress-bar',\n    component: ProgressBarQueryExample\n  },\n  'progress-spinner-configurable': {\n    title: 'Configurable progress spinner',\n    component: ProgressSpinnerConfigurableExample\n  },\n  'progress-spinner-overview': {\n    title: 'Basic progress-spinner',\n    component: ProgressSpinnerOverviewExample\n  },\n  'radio-ng-model': {\n    title: 'Radios with ngModel',\n    component: RadioNgModelExample\n  },\n  'radio-overview': {\n    title: 'Basic radios',\n    component: RadioOverviewExample\n  },\n  'select-custom-trigger': {\n    title: 'Select with custom trigger text',\n    component: SelectCustomTriggerExample\n  },\n  'select-disabled': {\n    title: 'Disabled select',\n    component: SelectDisabledExample\n  },\n  'select-error-state-matcher': {\n    title: 'Select with a custom ErrorStateMatcher',\n    component: SelectErrorStateMatcherExample\n  },\n  'select-form': {\n    title: 'Select in a form',\n    component: SelectFormExample\n  },\n  'select-hint-error': {\n    title: 'Select with form field features',\n    component: SelectHintErrorExample\n  },\n  'select-multiple': {\n    title: 'Select with multiple selection',\n    component: SelectMultipleExample\n  },\n  'select-no-ripple': {\n    title: 'Select with no option ripple',\n    component: SelectNoRippleExample\n  },\n  'select-optgroup': {\n    title: 'Select with option groups',\n    component: SelectOptgroupExample\n  },\n  'select-overview': {\n    title: 'Basic select',\n    component: SelectOverviewExample\n  },\n  'select-panel-class': {\n    title: 'Select with custom panel styling',\n    component: SelectPanelClassExample\n  },\n  'select-reset': {\n    title: 'Select with reset option',\n    component: SelectResetExample\n  },\n  'select-value-binding': {\n    title: 'Select with 2-way value binding',\n    component: SelectValueBindingExample\n  },\n  'sidenav-autosize': {\n    title: 'Autosize sidenav',\n    component: SidenavAutosizeExample\n  },\n  'sidenav-backdrop': {\n    title: 'Drawer with explicit backdrop setting',\n    component: SidenavBackdropExample\n  },\n  'sidenav-disable-close': {\n    title: 'Sidenav with custom escape and backdrop click behavior',\n    component: SidenavDisableCloseExample\n  },\n  'sidenav-drawer-overview': {\n    title: 'Basic drawer',\n    component: SidenavDrawerOverviewExample\n  },\n  'sidenav-fixed': {\n    title: 'Fixed sidenav',\n    component: SidenavFixedExample\n  },\n  'sidenav-mode': {\n    title: 'Sidenav with configurable mode',\n    component: SidenavModeExample\n  },\n  'sidenav-open-close': {\n    title: 'Sidenav open & close behavior',\n    component: SidenavOpenCloseExample\n  },\n  'sidenav-overview': {\n    title: 'Basic sidenav',\n    component: SidenavOverviewExample\n  },\n  'sidenav-position': {\n    title: 'Implicit main content with two sidenavs',\n    component: SidenavPositionExample\n  },\n  'sidenav-responsive': {\n    title: 'Responsive sidenav',\n    component: SidenavResponsiveExample\n  },\n  'slide-toggle-configurable': {\n    title: 'Configurable slide-toggle',\n    component: SlideToggleConfigurableExample\n  },\n  'slide-toggle-forms': {\n    title: 'Slide-toggle with forms',\n    component: SlideToggleFormsExample\n  },\n  'slide-toggle-overview': {\n    title: 'Basic slide-toggles',\n    component: SlideToggleOverviewExample\n  },\n  'slider-configurable': {\n    title: 'Configurable slider',\n    component: SliderConfigurableExample\n  },\n  'slider-formatting': {\n    title: 'Slider with custom thumb label formatting.',\n    component: SliderFormattingExample\n  },\n  'slider-overview': {\n    title: 'Basic slider',\n    component: SliderOverviewExample\n  },\n  'snack-bar-component': {\n    title: 'Snack-bar with a custom component',\n    component: SnackBarComponentExample,\n    additionalFiles: [\"snack-bar-component-example-snack.html\"],\n    selectorName: 'SnackBarComponentExample, PizzaPartyComponent'\n  },\n  'snack-bar-overview': {\n    title: 'Basic snack-bar',\n    component: SnackBarOverviewExample\n  },\n  'snack-bar-position': {\n    title: 'Snack-bar with configurable position',\n    component: SnackBarPositionExample\n  },\n  'sort-overview': {\n    title: 'Sorting overview',\n    component: SortOverviewExample\n  },\n  'stepper-editable': {\n    title: 'Stepper with editable steps',\n    component: StepperEditableExample\n  },\n  'stepper-optional': {\n    title: 'Stepper with optional steps',\n    component: StepperOptionalExample\n  },\n  'stepper-overview': {\n    title: 'Stepper overview',\n    component: StepperOverviewExample\n  },\n  'table-basic-flex': {\n    title: 'Basic use of `<mat-table>` (uses display flex)',\n    component: TableBasicFlexExample\n  },\n  'table-basic': {\n    title: 'Basic use of `<table mat-table>`',\n    component: TableBasicExample\n  },\n  'table-dynamic-columns': {\n    title: 'Table dynamically changing the columns displayed',\n    component: TableDynamicColumnsExample\n  },\n  'table-filtering': {\n    title: 'Table with filtering',\n    component: TableFilteringExample\n  },\n  'table-footer-row': {\n    title: 'Footer row table',\n    component: TableFooterRowExample\n  },\n  'table-http': {\n    title: 'Table retrieving data through HTTP',\n    component: TableHttpExample\n  },\n  'table-multiple-header-footer': {\n    title: 'Table with multiple header and footer rows',\n    component: TableMultipleHeaderFooterExample\n  },\n  'table-native-only': {\n    title: 'Native `<table>` that only applies the Material styles',\n    component: TableNativeOnlyExample\n  },\n  'table-overview': {\n    title: 'Data table with sorting, pagination, and filtering.',\n    component: TableOverviewExample\n  },\n  'table-pagination': {\n    title: 'Table with pagination',\n    component: TablePaginationExample\n  },\n  'table-row-context': {\n    title: 'Table showing each row context properties.',\n    component: TableRowContextExample\n  },\n  'table-selection': {\n    title: 'Table with selection',\n    component: TableSelectionExample\n  },\n  'table-sorting': {\n    title: 'Table with sorting',\n    component: TableSortingExample\n  },\n  'tabs-overview': {\n    title: 'Basic tabs',\n    component: TabsOverviewExample\n  },\n  'tabs-template-label': {\n    title: 'Complex Example',\n    component: TabsTemplateLabelExample\n  },\n  'text-field-autofill-directive': {\n    title: 'Monitoring autofill state with cdkAutofill',\n    component: TextFieldAutofillDirectiveExample\n  },\n  'text-field-autofill-monitor': {\n    title: 'Monitoring autofill state with AutofillMonitor',\n    component: TextFieldAutofillMonitorExample\n  },\n  'text-field-autosize-textarea': {\n    title: 'Auto-resizing textarea',\n    component: TextFieldAutosizeTextareaExample\n  },\n  'toolbar-multirow': {\n    title: 'Multi-row toolbar',\n    component: ToolbarMultirowExample\n  },\n  'toolbar-overview': {\n    title: 'Basic toolbar',\n    component: ToolbarOverviewExample\n  },\n  'tooltip-auto-hide': {\n    title: 'Tooltip that demonstrates auto-hiding when it clips out of its scrolling container.',\n    component: TooltipAutoHideExample\n  },\n  'tooltip-custom-class': {\n    title: 'Tooltip that can have a custom class applied.',\n    component: TooltipCustomClassExample\n  },\n  'tooltip-delay': {\n    title: 'Tooltip with a show and hide delay',\n    component: TooltipDelayExample\n  },\n  'tooltip-disabled': {\n    title: 'Tooltip that can be disabled',\n    component: TooltipDisabledExample\n  },\n  'tooltip-manual': {\n    title: 'Tooltip that can be manually shown/hidden.',\n    component: TooltipManualExample\n  },\n  'tooltip-message': {\n    title: 'Tooltip with a changing message',\n    component: TooltipMessageExample\n  },\n  'tooltip-modified-defaults': {\n    title: 'Tooltip with a show and hide delay',\n    component: TooltipModifiedDefaultsExample\n  },\n  'tooltip-overview': {\n    title: 'Basic tooltip',\n    component: TooltipOverviewExample\n  },\n  'tooltip-position': {\n    title: 'Tooltip with a custom position',\n    component: TooltipPositionExample\n  },\n  'tree-checklist': {\n    title: 'Tree with checkboxes',\n    component: TreeChecklistExample\n  },\n  'tree-dynamic': {\n    title: 'Tree with dynamic data',\n    component: TreeDynamicExample\n  },\n  'tree-flat-overview': {\n    title: 'Tree with flat nodes',\n    component: TreeFlatOverviewExample\n  },\n  'tree-loadmore': {\n    title: 'Tree with partially loaded data',\n    component: TreeLoadmoreExample\n  },\n  'tree-nested-overview': {\n    title: 'Tree with nested nodes',\n    component: TreeNestedOverviewExample\n  },\n};\n\nexport const EXAMPLE_LIST = [\n  AutocompleteAutoActiveFirstOptionExample,\n  AutocompleteDisplayExample,\n  AutocompleteFilterExample,\n  AutocompleteOptgroupExample,\n  AutocompleteOverviewExample,\n  AutocompleteSimpleExample,\n  BadgeOverviewExample,\n  BottomSheetOverviewExampleSheet,BottomSheetOverviewExample,\n  ButtonOverviewExample,\n  ButtonToggleExclusiveExample,\n  ButtonToggleOverviewExample,\n  ButtonTypesExample,\n  CardFancyExample,\n  CardOverviewExample,\n  CdkTableBasicFlexExample,\n  CdkTableBasicExample,\n  CdkTreeFlatExample,\n  CdkTreeNestedExample,\n  CheckboxConfigurableExample,\n  CheckboxOverviewExample,\n  ChipsAutocompleteExample,\n  ChipsInputExample,\n  ChipsOverviewExample,\n  ChipsStackedExample,\n  DatepickerApiExample,\n  DatepickerColorExample,\n  ExampleHeader,DatepickerCustomHeaderExample,\n  DatepickerCustomIconExample,\n  DatepickerDisabledExample,\n  DatepickerEventsExample,\n  DatepickerFilterExample,\n  DatepickerFormatsExample,\n  DatepickerLocaleExample,\n  DatepickerMinMaxExample,\n  DatepickerMomentExample,\n  DatepickerOverviewExample,\n  DatepickerStartViewExample,\n  DatepickerTouchExample,\n  DatepickerValueExample,\n  DatepickerViewsSelectionExample,\n  DialogContentExampleDialog,DialogContentExample,\n  DialogDataExampleDialog,DialogDataExample,\n  DialogElementsExampleDialog,DialogElementsExample,\n  DialogOverviewExampleDialog,DialogOverviewExample,\n  DividerOverviewExample,\n  ElevationOverviewExample,\n  ExpansionExpandCollapseAllExample,\n  ExpansionOverviewExample,\n  ExpansionStepsExample,\n  FocusMonitorDirectivesExample,\n  FocusMonitorFocusViaExample,\n  FocusMonitorOverviewExample,\n  FormFieldAppearanceExample,\n  MyTelInput,FormFieldCustomControlExample,\n  FormFieldErrorExample,\n  FormFieldHintExample,\n  FormFieldLabelExample,\n  FormFieldOverviewExample,\n  FormFieldPrefixSuffixExample,\n  FormFieldThemingExample,\n  GridListDynamicExample,\n  GridListOverviewExample,\n  IconOverviewExample,\n  IconSvgExample,\n  InputClearableExample,\n  InputErrorStateMatcherExample,\n  InputErrorsExample,\n  InputFormExample,\n  InputHintExample,\n  InputOverviewExample,\n  InputPrefixSuffixExample,\n  ListOverviewExample,\n  ListSectionsExample,\n  ListSelectionExample,\n  MenuIconsExample,\n  MenuOverviewExample,\n  NestedMenuExample,\n  PaginatorConfigurableExample,\n  PaginatorOverviewExample,\n  ProgressBarBufferExample,\n  ProgressBarConfigurableExample,\n  ProgressBarDeterminateExample,\n  ProgressBarIndeterminateExample,\n  ProgressBarQueryExample,\n  ProgressSpinnerConfigurableExample,\n  ProgressSpinnerOverviewExample,\n  RadioNgModelExample,\n  RadioOverviewExample,\n  SelectCustomTriggerExample,\n  SelectDisabledExample,\n  SelectErrorStateMatcherExample,\n  SelectFormExample,\n  SelectHintErrorExample,\n  SelectMultipleExample,\n  SelectNoRippleExample,\n  SelectOptgroupExample,\n  SelectOverviewExample,\n  SelectPanelClassExample,\n  SelectResetExample,\n  SelectValueBindingExample,\n  SidenavAutosizeExample,\n  SidenavBackdropExample,\n  SidenavDisableCloseExample,\n  SidenavDrawerOverviewExample,\n  SidenavFixedExample,\n  SidenavModeExample,\n  SidenavOpenCloseExample,\n  SidenavOverviewExample,\n  SidenavPositionExample,\n  SidenavResponsiveExample,\n  SlideToggleConfigurableExample,\n  SlideToggleFormsExample,\n  SlideToggleOverviewExample,\n  SliderConfigurableExample,\n  SliderFormattingExample,\n  SliderOverviewExample,\n  PizzaPartyComponent,SnackBarComponentExample,\n  SnackBarOverviewExample,\n  SnackBarPositionExample,\n  SortOverviewExample,\n  StepperEditableExample,\n  StepperOptionalExample,\n  StepperOverviewExample,\n  TableBasicFlexExample,\n  TableBasicExample,\n  TableDynamicColumnsExample,\n  TableFilteringExample,\n  TableFooterRowExample,\n  TableHttpExample,\n  TableMultipleHeaderFooterExample,\n  TableNativeOnlyExample,\n  TableOverviewExample,\n  TablePaginationExample,\n  TableRowContextExample,\n  TableSelectionExample,\n  TableSortingExample,\n  TabsOverviewExample,\n  TabsTemplateLabelExample,\n  TextFieldAutofillDirectiveExample,\n  TextFieldAutofillMonitorExample,\n  TextFieldAutosizeTextareaExample,\n  ToolbarMultirowExample,\n  ToolbarOverviewExample,\n  TooltipAutoHideExample,\n  TooltipCustomClassExample,\n  TooltipDelayExample,\n  TooltipDisabledExample,\n  TooltipManualExample,\n  TooltipMessageExample,\n  TooltipModifiedDefaultsExample,\n  TooltipOverviewExample,\n  TooltipPositionExample,\n  TreeChecklistExample,\n  TreeDynamicExample,\n  TreeFlatOverviewExample,\n  TreeLoadmoreExample,\n  TreeNestedOverviewExample,\n];\n\n@NgModule({\n  declarations: EXAMPLE_LIST,\n  entryComponents: EXAMPLE_LIST,\n  imports: [\n    ExampleMaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule\n  ]\n})\nexport class ExampleModule { }\n","// The example-module file will be auto-generated. As soon as the\n// examples are being compiled, the module file will be generated.\nimport {EXAMPLE_COMPONENTS} from './example-module';\n\n/**\n * Example data\n *   with information about Component name, selector, files used in example, and path to examples\n */\nexport class ExampleData {\n\n  /** Description of the example. */\n  description: string;\n\n  /** Path to the example. This is based on the structure of the material.angular.io repo. */\n  examplePath: string;\n\n  /** List of files that are part of this example. */\n  exampleFiles: string[];\n\n  /** Selector name of the example component. */\n  selectorName: string;\n\n  /** Name of the file that contains the example component. */\n  indexFilename: string;\n\n  /**\n   * Name of the example component. For examples with multiple components, this property will\n   * include multiple components that are comma separated (e.g. dialog-overview)\n   */\n  componentName: string;\n\n  constructor(example: string) {\n    if (!example || !EXAMPLE_COMPONENTS.hasOwnProperty(example)) {\n      return;\n    }\n\n    const exampleConfig = EXAMPLE_COMPONENTS[example];\n\n    // TODO(tinayuangao): Do not hard-code extensions\n    this.exampleFiles = ['html', 'ts', 'css'].map(extension => `${example}-example.${extension}`);\n    this.examplePath = `/assets/stackblitz/examples/${example}/`;\n    this.selectorName = this.indexFilename = `${example}-example`;\n\n    if (exampleConfig.additionalFiles) {\n      this.exampleFiles.push(...exampleConfig.additionalFiles);\n    }\n\n    const exampleName = example.replace(/(?:^\\w|\\b\\w)/g, letter => letter.toUpperCase());\n\n    this.description = exampleConfig.title || exampleName.replace(/[\\-]+/g, ' ') + ' Example';\n    this.componentName = exampleConfig.selectorName ||\n                          exampleName.replace(/[\\-]+/g, '') + 'Example';\n  }\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Multi-row toolbar\n */\n@Component({\n  selector: 'toolbar-multirow-example',\n  templateUrl: 'toolbar-multirow-example.html',\n  styleUrls: ['toolbar-multirow-example.css'],\n})\nexport class ToolbarMultirowExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic toolbar\n */\n@Component({\n  selector: 'toolbar-overview-example',\n  templateUrl: 'toolbar-overview-example.html',\n  styleUrls: ['toolbar-overview-example.css'],\n})\nexport class ToolbarOverviewExample {}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {TooltipPosition} from '@angular/material';\n\n/**\n * @title Tooltip that demonstrates auto-hiding when it clips out of its scrolling container.\n */\n@Component({\n  selector: 'tooltip-auto-hide-example',\n  templateUrl: 'tooltip-auto-hide-example.html',\n  styleUrls: ['tooltip-auto-hide-example.css'],\n})\nexport class TooltipAutoHideExample {\n  positionOptions: TooltipPosition[] = ['below', 'above', 'left', 'right'];\n  position = new FormControl(this.positionOptions[0]);\n}\n","import {Component, ViewEncapsulation} from '@angular/core';\n\n/**\n * @title Tooltip that can have a custom class applied.\n */\n@Component({\n  selector: 'tooltip-custom-class-example',\n  templateUrl: 'tooltip-custom-class-example.html',\n  styleUrls: ['tooltip-custom-class-example.css'],\n  // Need to remove view encapsulation so that the custom tooltip style defined in\n  // `tooltip-custom-class-example.css` will not be scoped to this component's view.\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TooltipCustomClassExample { }\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/**\n * @title Tooltip with a show and hide delay\n */\n@Component({\n  selector: 'tooltip-delay-example',\n  templateUrl: 'tooltip-delay-example.html',\n  styleUrls: ['tooltip-delay-example.css'],\n})\nexport class TooltipDelayExample {\n  showDelay = new FormControl(1000);\n  hideDelay = new FormControl(2000);\n}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/**\n * @title Tooltip that can be disabled\n */\n@Component({\n  selector: 'tooltip-disabled-example',\n  templateUrl: 'tooltip-disabled-example.html',\n  styleUrls: ['tooltip-disabled-example.css'],\n})\nexport class TooltipDisabledExample {\n  disabled = new FormControl(false);\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Tooltip that can be manually shown/hidden.\n */\n@Component({\n  selector: 'tooltip-manual-example',\n  templateUrl: 'tooltip-manual-example.html',\n  styleUrls: ['tooltip-manual-example.css'],\n})\nexport class TooltipManualExample {}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/**\n * @title Tooltip with a changing message\n */\n@Component({\n  selector: 'tooltip-message-example',\n  templateUrl: 'tooltip-message-example.html',\n  styleUrls: ['tooltip-message-example.css'],\n})\nexport class TooltipMessageExample {\n  message = new FormControl('Info about the action');\n}\n","import {Component} from '@angular/core';\nimport {MAT_TOOLTIP_DEFAULT_OPTIONS, MatTooltipDefaultOptions} from '@angular/material';\n\n/** Custom options the configure the tooltip's default show/hide delays. */\nexport const myCustomTooltipDefaults: MatTooltipDefaultOptions = {\n  showDelay: 1000,\n  hideDelay: 1000,\n  touchendHideDelay: 1000,\n};\n\n/**\n * @title Tooltip with a show and hide delay\n */\n@Component({\n  selector: 'tooltip-modified-defaults-example',\n  templateUrl: 'tooltip-modified-defaults-example.html',\n  styleUrls: ['tooltip-modified-defaults-example.css'],\n  providers: [\n    {provide: MAT_TOOLTIP_DEFAULT_OPTIONS, useValue: myCustomTooltipDefaults}\n  ],\n})\nexport class TooltipModifiedDefaultsExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic tooltip\n */\n@Component({\n  selector: 'tooltip-overview-example',\n  templateUrl: 'tooltip-overview-example.html',\n  styleUrls: ['tooltip-overview-example.css'],\n})\nexport class TooltipOverviewExample {}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {TooltipPosition} from '@angular/material';\n\n/**\n * @title Tooltip with a custom position\n */\n@Component({\n  selector: 'tooltip-position-example',\n  templateUrl: 'tooltip-position-example.html',\n  styleUrls: ['tooltip-position-example.css'],\n})\nexport class TooltipPositionExample {\n  positionOptions: TooltipPosition[] = ['after', 'before', 'above', 'below', 'left', 'right'];\n  position = new FormControl(this.positionOptions[0]);\n}\n","import {Component, Injectable} from '@angular/core';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MatTreeFlattener, MatTreeFlatDataSource} from '@angular/material/tree';\nimport {of as ofObservable, Observable, BehaviorSubject} from 'rxjs';\n\n\n/**\n * Node for to-do item\n */\nexport class TodoItemNode {\n  children: TodoItemNode[];\n  item: string;\n}\n\n/** Flat to-do item node with expandable and level information */\nexport class TodoItemFlatNode {\n  item: string;\n  level: number;\n  expandable: boolean;\n}\n\n/**\n * The Json object for to-do list data.\n */\nconst TREE_DATA = {\n  'Reminders': [\n    'Cook dinner',\n    'Read the Material Design spec',\n    'Upgrade Application to Angular'\n  ],\n  'Groceries': {\n    'Organic eggs': null,\n    'Protein Powder': null,\n    'Almond Meal flour': null,\n    'Fruits': {\n      'Apple': null,\n      'Orange': null,\n      'Berries': ['Blueberry', 'Raspberry']\n    }\n  }\n};\n\n/**\n * Checklist database, it can build a tree structured Json object.\n * Each node in Json object represents a to-do item or a category.\n * If a node is a category, it has children items and new items can be added under the category.\n */\n@Injectable()\nexport class ChecklistDatabase {\n  dataChange: BehaviorSubject<TodoItemNode[]> = new BehaviorSubject<TodoItemNode[]>([]);\n\n  get data(): TodoItemNode[] { return this.dataChange.value; }\n\n  constructor() {\n    this.initialize();\n  }\n\n  initialize() {\n    // Build the tree nodes from Json object. The result is a list of `TodoItemNode` with nested\n    //     file node as children.\n    const data = this.buildFileTree(TREE_DATA, 0);\n\n    // Notify the change.\n    this.dataChange.next(data);\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * The return value is the list of `TodoItemNode`.\n   */\n  buildFileTree(value: any, level: number) {\n    let data: any[] = [];\n    for (let k in value) {\n      let v = value[k];\n      let node = new TodoItemNode();\n      node.item = `${k}`;\n      if (v === null || v === undefined) {\n        // no action\n      } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.item = v;\n      }\n      data.push(node);\n    }\n    return data;\n  }\n\n  /** Add an item to to-do list */\n  insertItem(parent: TodoItemNode, name: string) {\n    const child = <TodoItemNode>{item: name};\n    if (parent.children) {\n      parent.children.push(child);\n      this.dataChange.next(this.data);\n    }\n  }\n\n  updateItem(node: TodoItemNode, name: string) {\n    node.item = name;\n    this.dataChange.next(this.data);\n  }\n}\n\n/**\n * @title Tree with checkboxes\n */\n@Component({\n  selector: 'tree-checklist-example',\n  templateUrl: 'tree-checklist-example.html',\n  styleUrls: ['tree-checklist-example.css'],\n  providers: [ChecklistDatabase]\n})\nexport class TreeChecklistExample {\n  /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n  flatNodeMap: Map<TodoItemFlatNode, TodoItemNode> = new Map<TodoItemFlatNode, TodoItemNode>();\n\n  /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n  nestedNodeMap: Map<TodoItemNode, TodoItemFlatNode> = new Map<TodoItemNode, TodoItemFlatNode>();\n\n  /** A selected parent node to be inserted */\n  selectedParent: TodoItemFlatNode | null = null;\n\n  /** The new item's name */\n  newItemName: string = '';\n\n  treeControl: FlatTreeControl<TodoItemFlatNode>;\n\n  treeFlattener: MatTreeFlattener<TodoItemNode, TodoItemFlatNode>;\n\n  dataSource: MatTreeFlatDataSource<TodoItemNode, TodoItemFlatNode>;\n\n  /** The selection for checklist */\n  checklistSelection = new SelectionModel<TodoItemFlatNode>(true /* multiple */);\n\n  constructor(private database: ChecklistDatabase) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\n      this.isExpandable, this.getChildren);\n    this.treeControl = new FlatTreeControl<TodoItemFlatNode>(this.getLevel, this.isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => {\n      this.dataSource.data = data;\n    });\n  }\n\n  getLevel = (node: TodoItemFlatNode) => { return node.level; };\n\n  isExpandable = (node: TodoItemFlatNode) => { return node.expandable; };\n\n  getChildren = (node: TodoItemNode): Observable<TodoItemNode[]> => {\n    return ofObservable(node.children);\n  }\n\n  hasChild = (_: number, _nodeData: TodoItemFlatNode) => { return _nodeData.expandable; };\n\n  hasNoContent = (_: number, _nodeData: TodoItemFlatNode) => { return _nodeData.item === ''; };\n\n  /**\n   * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n   */\n  transformer = (node: TodoItemNode, level: number) => {\n    let flatNode = this.nestedNodeMap.has(node) && this.nestedNodeMap.get(node)!.item === node.item\n      ? this.nestedNodeMap.get(node)!\n      : new TodoItemFlatNode();\n    flatNode.item = node.item;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    this.flatNodeMap.set(flatNode, node);\n    this.nestedNodeMap.set(node, flatNode);\n    return flatNode;\n  }\n\n  /** Whether all the descendants of the node are selected */\n  descendantsAllSelected(node: TodoItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    return descendants.every(child => this.checklistSelection.isSelected(child));\n  }\n\n  /** Whether part of the descendants are selected */\n  descendantsPartiallySelected(node: TodoItemFlatNode): boolean {\n    const descendants = this.treeControl.getDescendants(node);\n    const result = descendants.some(child => this.checklistSelection.isSelected(child));\n    return result && !this.descendantsAllSelected(node);\n  }\n\n  /** Toggle the to-do item selection. Select/deselect all the descendants node */\n  todoItemSelectionToggle(node: TodoItemFlatNode): void {\n    this.checklistSelection.toggle(node);\n    const descendants = this.treeControl.getDescendants(node);\n    this.checklistSelection.isSelected(node)\n      ? this.checklistSelection.select(...descendants)\n      : this.checklistSelection.deselect(...descendants);\n  }\n\n  /** Select the category so we can insert the new item. */\n  addNewItem(node: TodoItemFlatNode) {\n    const parentNode = this.flatNodeMap.get(node);\n    this.database.insertItem(parentNode!, '');\n    this.treeControl.expand(node);\n  }\n\n  /** Save the node to database */\n  saveNode(node: TodoItemFlatNode, itemValue: string) {\n    const nestedNode = this.flatNodeMap.get(node);\n    this.database.updateItem(nestedNode!, itemValue);\n  }\n}\n","import {Component, Injectable} from '@angular/core';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {CollectionViewer, SelectionChange} from '@angular/cdk/collections';\nimport {BehaviorSubject, Observable, merge} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n\n/** Flat node with expandable and level information */\nexport class DynamicFlatNode {\n  constructor(public item: string, public level: number = 1, public expandable: boolean = false,\n              public isLoading: boolean = false) {}\n}\n\n\n/**\n * Database for dynamic data. When expanding a node in the tree, the data source will need to fetch\n * the descendants data from the database.\n */\nexport class DynamicDatabase {\n  dataMap = new Map([\n    ['Fruits', ['Apple', 'Orange', 'Banana']],\n    ['Vegetables', ['Tomato', 'Potato', 'Onion']],\n    ['Apple', ['Fuji', 'Macintosh']],\n    ['Onion', ['Yellow', 'White', 'Purple']]\n  ]);\n\n  rootLevelNodes = ['Fruits', 'Vegetables'];\n\n  /** Initial data from database */\n  initialData(): DynamicFlatNode[] {\n    return this.rootLevelNodes.map(name => new DynamicFlatNode(name, 0, true));\n  }\n\n\n  getChildren(node: string): string[] | undefined {\n    return this.dataMap.get(node);\n  }\n\n  isExpandable(node: string): boolean {\n    return this.dataMap.has(node);\n  }\n}\n/**\n * File database, it can build a tree structured Json object from string.\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\n * For a directory, it has filename and children (a list of files or directories).\n * The input will be a json object string, and the output is a list of `FileNode` with nested\n * structure.\n */\n@Injectable()\nexport class DynamicDataSource {\n\n  dataChange: BehaviorSubject<DynamicFlatNode[]> = new BehaviorSubject<DynamicFlatNode[]>([]);\n\n  get data(): DynamicFlatNode[] { return this.dataChange.value; }\n  set data(value: DynamicFlatNode[]) {\n    this.treeControl.dataNodes = value;\n    this.dataChange.next(value);\n  }\n\n  constructor(private treeControl: FlatTreeControl<DynamicFlatNode>,\n              private database: DynamicDatabase) {}\n\n  connect(collectionViewer: CollectionViewer): Observable<DynamicFlatNode[]> {\n    this.treeControl.expansionModel.onChange!.subscribe(change => {\n      if ((change as SelectionChange<DynamicFlatNode>).added ||\n        (change as SelectionChange<DynamicFlatNode>).removed) {\n        this.handleTreeControl(change as SelectionChange<DynamicFlatNode>);\n      }\n    });\n\n    return merge(collectionViewer.viewChange, this.dataChange).pipe(map(() => this.data));\n  }\n\n  /** Handle expand/collapse behaviors */\n  handleTreeControl(change: SelectionChange<DynamicFlatNode>) {\n    if (change.added) {\n      change.added.forEach((node) => this.toggleNode(node, true));\n    }\n    if (change.removed) {\n      change.removed.reverse().forEach((node) => this.toggleNode(node, false));\n    }\n  }\n\n  /**\n   * Toggle the node, remove from display list\n   */\n  toggleNode(node: DynamicFlatNode, expand: boolean) {\n    const children = this.database.getChildren(node.item);\n    const index = this.data.indexOf(node);\n    if (!children || index < 0) { // If no children, or cannot find the node, no op\n      return;\n    }\n\n    node.isLoading = true;\n\n    setTimeout(() => {\n      if (expand) {\n        const nodes = children.map(name =>\n          new DynamicFlatNode(name, node.level + 1, this.database.isExpandable(name)));\n        this.data.splice(index + 1, 0, ...nodes);\n      } else {\n        this.data.splice(index + 1, children.length);\n      }\n\n      // notify the change\n      this.dataChange.next(this.data);\n      node.isLoading = false;\n    }, 1000);\n  }\n}\n\n/**\n * @title Tree with dynamic data\n */\n@Component({\n  selector: 'tree-dynamic-example',\n  templateUrl: 'tree-dynamic-example.html',\n  styleUrls: ['tree-dynamic-example.css'],\n  providers: [DynamicDatabase]\n})\nexport class TreeDynamicExample {\n\n  constructor(database: DynamicDatabase) {\n    this.treeControl = new FlatTreeControl<DynamicFlatNode>(this.getLevel, this.isExpandable);\n    this.dataSource = new DynamicDataSource(this.treeControl, database);\n\n    this.dataSource.data = database.initialData();\n  }\n\n  treeControl: FlatTreeControl<DynamicFlatNode>;\n\n  dataSource: DynamicDataSource;\n\n  getLevel = (node: DynamicFlatNode) => { return node.level; };\n\n  isExpandable = (node: DynamicFlatNode) => { return node.expandable; };\n\n  hasChild = (_: number, _nodeData: DynamicFlatNode) => { return _nodeData.expandable; };\n}\n","import {FlatTreeControl} from '@angular/cdk/tree';\nimport {Component, Injectable} from '@angular/core';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {BehaviorSubject, Observable, of as observableOf} from 'rxjs';\n\n/**\n * File node data with nested structure.\n * Each node has a filename, and a type or a list of children.\n */\nexport class FileNode {\n  children: FileNode[];\n  filename: string;\n  type: any;\n}\n\n/** Flat node with expandable and level information */\nexport class FileFlatNode {\n  filename: string;\n  type: any;\n  level: number;\n  expandable: boolean;\n}\n\n/**\n * The file structure tree data in string. The data could be parsed into a Json object\n */\nconst TREE_DATA = `\n  {\n    \"Documents\": {\n      \"angular\": {\n        \"src\": {\n          \"core\": \"ts\",\n          \"compiler\": \"ts\"\n        }\n      },\n      \"material2\": {\n        \"src\": {\n          \"button\": \"ts\",\n          \"checkbox\": \"ts\",\n          \"input\": \"ts\"\n        }\n      }\n    },\n    \"Downloads\": {\n        \"Tutorial\": \"html\",\n        \"November\": \"pdf\",\n        \"October\": \"pdf\"\n    },\n    \"Pictures\": {\n        \"Sun\": \"png\",\n        \"Woods\": \"jpg\",\n        \"Photo Booth Library\": {\n          \"Contents\": \"dir\",\n          \"Pictures\": \"dir\"\n        }\n    },\n    \"Applications\": {\n        \"Chrome\": \"app\",\n        \"Calendar\": \"app\",\n        \"Webstorm\": \"app\"\n    }\n}`;\n\n/**\n * File database, it can build a tree structured Json object from string.\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\n * For a directory, it has filename and children (a list of files or directories).\n * The input will be a json object string, and the output is a list of `FileNode` with nested\n * structure.\n */\n@Injectable()\nexport class FileDatabase {\n  dataChange: BehaviorSubject<FileNode[]> = new BehaviorSubject<FileNode[]>([]);\n\n  get data(): FileNode[] { return this.dataChange.value; }\n\n  constructor() {\n    this.initialize();\n  }\n\n  initialize() {\n    // Parse the string to json object.\n    const dataObject = JSON.parse(TREE_DATA);\n\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\n    //     file node as children.\n    const data = this.buildFileTree(dataObject, 0);\n\n    // Notify the change.\n    this.dataChange.next(data);\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * The return value is the list of `FileNode`.\n   */\n  buildFileTree(value: any, level: number): FileNode[] {\n    let data: any[] = [];\n    for (let k in value) {\n      let v = value[k];\n      let node = new FileNode();\n      node.filename = `${k}`;\n      if (v === null || v === undefined) {\n        // no action\n      } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.type = v;\n      }\n      data.push(node);\n    }\n    return data;\n  }\n}\n\n/**\n * @title Tree with flat nodes\n */\n@Component({\n  selector: 'tree-flat-overview-example',\n  templateUrl: 'tree-flat-overview-example.html',\n  styleUrls: ['tree-flat-overview-example.css'],\n  providers: [FileDatabase]\n})\nexport class TreeFlatOverviewExample {\n\n  treeControl: FlatTreeControl<FileFlatNode>;\n\n  treeFlattener: MatTreeFlattener<FileNode, FileFlatNode>;\n\n  dataSource: MatTreeFlatDataSource<FileNode, FileFlatNode>;\n\n  constructor(database: FileDatabase) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this._getLevel,\n      this._isExpandable, this._getChildren);\n    this.treeControl = new FlatTreeControl<FileFlatNode>(this._getLevel, this._isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => {\n      this.dataSource.data = data;\n    });\n  }\n\n  transformer = (node: FileNode, level: number) => {\n    let flatNode = new FileFlatNode();\n    flatNode.filename = node.filename;\n    flatNode.type = node.type;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    return flatNode;\n  }\n\n  private _getLevel = (node: FileFlatNode) => { return node.level; };\n\n  private _isExpandable = (node: FileFlatNode) => { return node.expandable; };\n\n  private _getChildren = (node: FileNode): Observable<FileNode[]> => {\n    return observableOf(node.children);\n  }\n\n  hasChild = (_: number, _nodeData: FileFlatNode) => { return _nodeData.expandable; };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Component, Injectable} from '@angular/core';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n\nconst LOAD_MORE = 'LOAD_MORE';\n\n/** Nested node */\nexport class LoadmoreNode {\n  childrenChange: BehaviorSubject<LoadmoreNode[]> = new BehaviorSubject<LoadmoreNode[]>([]);\n\n  get children(): LoadmoreNode[] {\n    return this.childrenChange.value;\n  }\n\n  constructor(public item: string,\n              public hasChildren: boolean = false,\n              public loadMoreParentItem: string | null = null) {}\n}\n\n/** Flat node with expandable and level information */\nexport class LoadmoreFlatNode {\n  constructor(public item: string,\n              public level: number = 1,\n              public expandable: boolean = false,\n              public loadMoreParentItem: string | null = null) {}\n}\n\n/**\n * A database that only load part of the data initially. After user clicks on the `Load more`\n * button, more data will be loaded.\n */\n@Injectable()\nexport class LoadmoreDatabase {\n  batchNumber = 5;\n  dataChange: BehaviorSubject<LoadmoreNode[]> = new BehaviorSubject<LoadmoreNode[]>([]);\n  nodeMap: Map<string, LoadmoreNode> = new Map<string, LoadmoreNode>();\n\n  /** The data */\n  rootLevelNodes = ['Vegetables', 'Fruits'];\n  dataMap = new Map([\n    ['Fruits', ['Apple', 'Orange', 'Banana']],\n    ['Vegetables', ['Tomato', 'Potato', 'Onion']],\n    ['Apple', ['Fuji', 'Macintosh']],\n    ['Onion', ['Yellow', 'White', 'Purple', 'Green', 'Shallot', 'Sweet', 'Red', 'Leek']],\n  ]);\n\n  initialize() {\n    const data = this.rootLevelNodes.map(name => this._generateNode(name));\n    this.dataChange.next(data);\n  }\n\n  /** Expand a node whose children are not loaded */\n  loadMore(item: string, onlyFirstTime: boolean = false) {\n    if (!this.nodeMap.has(item) || !this.dataMap.has(item)) {\n      return;\n    }\n    const parent = this.nodeMap.get(item)!;\n    const children = this.dataMap.get(item)!;\n    if (onlyFirstTime && parent.children!.length > 0) {\n      return;\n    }\n    const newChildrenNumber = parent.children!.length + this.batchNumber;\n    let nodes = children.slice(0, newChildrenNumber)\n      .map(name => this._generateNode(name));\n    if (newChildrenNumber < children.length) {\n      // Need a new load more node\n      nodes.push(new LoadmoreNode(LOAD_MORE, false, item));\n    }\n\n    parent.childrenChange.next(nodes);\n    this.dataChange.next(this.dataChange.value);\n  }\n\n  private _generateNode(item: string): LoadmoreNode {\n    if (this.nodeMap.has(item)) {\n      return this.nodeMap.get(item)!;\n    }\n    const result = new LoadmoreNode(item, this.dataMap.has(item));\n    this.nodeMap.set(item, result);\n    return result;\n  }\n}\n\n/**\n * @title Tree with partially loaded data\n */\n@Component({\n  selector: 'tree-loadmore-example',\n  templateUrl: 'tree-loadmore-example.html',\n  styleUrls: ['tree-loadmore-example.css'],\n  providers: [LoadmoreDatabase]\n})\nexport class TreeLoadmoreExample {\n\n  nodeMap: Map<string, LoadmoreFlatNode> = new Map<string, LoadmoreFlatNode>();\n\n  treeControl: FlatTreeControl<LoadmoreFlatNode>;\n\n  treeFlattener: MatTreeFlattener<LoadmoreNode, LoadmoreFlatNode>;\n\n  // Flat tree data source\n  dataSource: MatTreeFlatDataSource<LoadmoreNode, LoadmoreFlatNode>;\n\n  constructor(private database: LoadmoreDatabase) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this.getLevel,\n      this.isExpandable, this.getChildren);\n\n    this.treeControl = new FlatTreeControl<LoadmoreFlatNode>(this.getLevel, this.isExpandable);\n\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => {\n      this.dataSource.data = data;\n    });\n\n    database.initialize();\n  }\n\n  getChildren = (node: LoadmoreNode): Observable<LoadmoreNode[]> => { return node.childrenChange; };\n\n  transformer = (node: LoadmoreNode, level: number) => {\n    if (this.nodeMap.has(node.item)) {\n      return this.nodeMap.get(node.item)!;\n    }\n    let newNode = new LoadmoreFlatNode(node.item, level, node.hasChildren, node.loadMoreParentItem);\n    this.nodeMap.set(node.item, newNode);\n    return newNode;\n  }\n\n  getLevel = (node: LoadmoreFlatNode) => { return node.level; };\n\n  isExpandable = (node: LoadmoreFlatNode) => { return node.expandable; };\n\n  hasChild = (_: number, _nodeData: LoadmoreFlatNode) => { return _nodeData.expandable; };\n\n  isLoadMore = (_: number, _nodeData: LoadmoreFlatNode) => { return _nodeData.item === LOAD_MORE; };\n\n  /** Load more nodes from data source */\n  loadMore(item: string) {\n    this.database.loadMore(item);\n  }\n\n  loadChildren(node: LoadmoreFlatNode) {\n    this.database.loadMore(node.item, true);\n  }\n}\n","import {NestedTreeControl} from '@angular/cdk/tree';\nimport {Component, Injectable} from '@angular/core';\nimport {MatTreeNestedDataSource} from '@angular/material/tree';\nimport {BehaviorSubject, of as observableOf} from 'rxjs';\n\n/**\n * Json node data with nested structure. Each node has a filename and a value or a list of children\n */\nexport class FileNode {\n  children: FileNode[];\n  filename: string;\n  type: any;\n}\n\n/**\n * The Json tree data in string. The data could be parsed into Json object\n */\nconst TREE_DATA = `\n  {\n    \"Documents\": {\n      \"angular\": {\n        \"src\": {\n          \"core\": \"ts\",\n          \"compiler\": \"ts\"\n        }\n      },\n      \"material2\": {\n        \"src\": {\n          \"button\": \"ts\",\n          \"checkbox\": \"ts\",\n          \"input\": \"ts\"\n        }\n      }\n    },\n    \"Downloads\": {\n        \"Tutorial\": \"html\",\n        \"November\": \"pdf\",\n        \"October\": \"pdf\"\n    },\n    \"Pictures\": {\n        \"Sun\": \"png\",\n        \"Woods\": \"jpg\",\n        \"Photo Booth Library\": {\n          \"Contents\": \"dir\",\n          \"Pictures\": \"dir\"\n        }\n    },\n    \"Applications\": {\n        \"Chrome\": \"app\",\n        \"Calendar\": \"app\",\n        \"Webstorm\": \"app\"\n    }\n  }`;\n\n/**\n * File database, it can build a tree structured Json object from string.\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\n * For a directory, it has filename and children (a list of files or directories).\n * The input will be a json object string, and the output is a list of `FileNode` with nested\n * structure.\n */\n@Injectable()\nexport class FileDatabase {\n  dataChange: BehaviorSubject<FileNode[]> = new BehaviorSubject<FileNode[]>([]);\n\n  get data(): FileNode[] { return this.dataChange.value; }\n\n  constructor() {\n    this.initialize();\n  }\n\n  initialize() {\n    // Parse the string to json object.\n    const dataObject = JSON.parse(TREE_DATA);\n\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\n    //     file node as children.\n    const data = this.buildFileTree(dataObject, 0);\n\n    // Notify the change.\n    this.dataChange.next(data);\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * The return value is the list of `FileNode`.\n   */\n  buildFileTree(value: any, level: number): FileNode[] {\n    let data: any[] = [];\n    for (let k in value) {\n      let v = value[k];\n      let node = new FileNode();\n      node.filename = `${k}`;\n      if (v === null || v === undefined) {\n        // no action\n      } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.type = v;\n      }\n      data.push(node);\n    }\n    return data;\n  }\n}\n\n/**\n * @title Tree with nested nodes\n */\n@Component({\n  selector: 'tree-nested-overview-example',\n  templateUrl: 'tree-nested-overview-example.html',\n  styleUrls: ['tree-nested-overview-example.css'],\n  providers: [FileDatabase]\n})\nexport class TreeNestedOverviewExample {\n  nestedTreeControl: NestedTreeControl<FileNode>;\n\n  nestedDataSource: MatTreeNestedDataSource<FileNode>;\n\n  constructor(database: FileDatabase) {\n    this.nestedTreeControl = new NestedTreeControl<FileNode>(this._getChildren);\n    this.nestedDataSource = new MatTreeNestedDataSource();\n\n    database.dataChange.subscribe(data => this.nestedDataSource.data = data);\n  }\n\n  private _getChildren = (node: FileNode) => { return observableOf(node.children); };\n\n  hasNestedChild = (_: number, nodeData: FileNode) => {return !(nodeData.type); };\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic use of `<table mat-table>`\n */\n@Component({\n  selector: 'table-basic-example',\n  styleUrls: ['table-basic-example.css'],\n  templateUrl: 'table-basic-example.html',\n})\nexport class TableBasicExample {\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","import {Component} from '@angular/core';\n\n/**\n * @title Table dynamically changing the columns displayed\n */\n@Component({\n  selector: 'table-dynamic-columns-example',\n  styleUrls: ['table-dynamic-columns-example.css'],\n  templateUrl: 'table-dynamic-columns-example.html',\n})\nexport class TableDynamicColumnsExample {\n  definedColumns = ['name', 'weight', 'symbol', 'position'];\n  columnsToDisplay = this.definedColumns.slice();\n  data: PeriodicElement[] = ELEMENT_DATA;\n\n  addColumn() {\n    const randomColumn = Math.floor(Math.random() * this.definedColumns.length);\n    this.columnsToDisplay.push(this.definedColumns[randomColumn]);\n  }\n\n  removeColumn() {\n    if (this.columnsToDisplay.length) {\n      this.columnsToDisplay.pop();\n    }\n  }\n\n  shuffle() {\n    let currentIndex = this.columnsToDisplay.length;\n    while (0 !== currentIndex) {\n      let randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // Swap\n      let temp = this.columnsToDisplay[currentIndex];\n      this.columnsToDisplay[currentIndex] = this.columnsToDisplay[randomIndex];\n      this.columnsToDisplay[randomIndex] = temp;\n    }\n  }\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","import {Component} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material';\n\n/**\n * @title Table with filtering\n */\n@Component({\n  selector: 'table-filtering-example',\n  styleUrls: ['table-filtering-example.css'],\n  templateUrl: 'table-filtering-example.html',\n})\nexport class TableFilteringExample {\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","import {Component} from '@angular/core';\n\nexport interface Transaction {\n  item: string;\n  cost: number;\n}\n\n/**\n * @title Footer row table\n */\n@Component({\n  selector: 'table-footer-row-example',\n  styleUrls: ['table-footer-row-example.css'],\n  templateUrl: 'table-footer-row-example.html',\n})\nexport class TableFooterRowExample {\n  displayedColumns = ['item', 'cost'];\n  transactions: Transaction[] = [\n    {item: 'Beach ball', cost: 4},\n    {item: 'Towel', cost: 5},\n    {item: 'Frisbee', cost: 2},\n    {item: 'Sunscreen', cost: 4},\n    {item: 'Cooler', cost: 25},\n    {item: 'Swim suit', cost: 15},\n  ];\n\n  /** Gets the total cost of all transactions. */\n  getTotalCost() {\n    return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\n  }\n}\n","import {HttpClient} from '@angular/common/http';\nimport {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort} from '@angular/material';\nimport {merge, Observable, of as observableOf} from 'rxjs';\nimport {catchError, map, startWith, switchMap} from 'rxjs/operators';\n\n/**\n * @title Table retrieving data through HTTP\n */\n@Component({\n  selector: 'table-http-example',\n  styleUrls: ['table-http-example.css'],\n  templateUrl: 'table-http-example.html',\n})\nexport class TableHttpExample implements OnInit {\n  displayedColumns = ['created', 'state', 'number', 'title'];\n  exampleDatabase: ExampleHttpDao | null;\n  data: GithubIssue[] = [];\n\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.exampleDatabase = new ExampleHttpDao(this.http);\n\n    // If the user changes the sort order, reset back to the first page.\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.isLoadingResults = true;\n          return this.exampleDatabase!.getRepoIssues(\n            this.sort.active, this.sort.direction, this.paginator.pageIndex);\n        }),\n        map(data => {\n          // Flip flag to show that loading has finished.\n          this.isLoadingResults = false;\n          this.isRateLimitReached = false;\n          this.resultsLength = data.total_count;\n\n          return data.items;\n        }),\n        catchError(() => {\n          this.isLoadingResults = false;\n          // Catch if the GitHub API has reached its rate limit. Return empty data.\n          this.isRateLimitReached = true;\n          return observableOf([]);\n        })\n      ).subscribe(data => this.data = data);\n  }\n}\n\nexport interface GithubApi {\n  items: GithubIssue[];\n  total_count: number;\n}\n\nexport interface GithubIssue {\n  created_at: string;\n  number: string;\n  state: string;\n  title: string;\n}\n\n/** An example database that the data source uses to retrieve data for the table. */\nexport class ExampleHttpDao {\n  constructor(private http: HttpClient) {}\n\n  getRepoIssues(sort: string, order: string, page: number): Observable<GithubApi> {\n    const href = 'https://api.github.com/search/issues';\n    const requestUrl =\n        `${href}?q=repo:angular/material2&sort=${sort}&order=${order}&page=${page + 1}`;\n\n    return this.http.get<GithubApi>(requestUrl);\n  }\n}\n","import {Component} from '@angular/core';\nimport {Transaction} from '../table-footer-row/table-footer-row-example';\n\nexport interface Transaction {\n  item: string;\n  cost: number;\n}\n\n/**\n * @title Table with multiple header and footer rows\n */\n@Component({\n  selector: 'table-multiple-header-footer-example',\n  styleUrls: ['table-multiple-header-footer-example.css'],\n  templateUrl: 'table-multiple-header-footer-example.html',\n})\nexport class TableMultipleHeaderFooterExample {\n  displayedColumns = ['item', 'cost'];\n  transactions: Transaction[] = [\n    {item: 'Beach ball', cost: 4},\n    {item: 'Towel', cost: 5},\n    {item: 'Frisbee', cost: 2},\n    {item: 'Sunscreen', cost: 4},\n    {item: 'Cooler', cost: 25},\n    {item: 'Swim suit', cost: 15},\n  ];\n\n  /** Gets the total cost of all transactions. */\n  getTotalCost() {\n    return this.transactions.map(t => t.cost).reduce((acc, value) => acc + value, 0);\n  }\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Native `<table>` that only applies the Material styles\n */\n@Component({\n  selector: 'table-native-only-example',\n  styleUrls: ['table-native-only-example.css'],\n  templateUrl: 'table-native-only-example.html',\n})\nexport class TableNativeOnlyExample {\n  elements = [\n    {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n    {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n    {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n    {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n    {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  ];\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\n\n/**\n * @title Data table with sorting, pagination, and filtering.\n */\n@Component({\n  selector: 'table-overview-example',\n  styleUrls: ['table-overview-example.css'],\n  templateUrl: 'table-overview-example.html',\n})\nexport class TableOverviewExample implements OnInit {\n  displayedColumns = ['id', 'name', 'progress', 'color'];\n  dataSource: MatTableDataSource<UserData>;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor() {\n    // Create 100 users\n    const users: UserData[] = [];\n    for (let i = 1; i <= 100; i++) { users.push(createNewUser(i)); }\n\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(users);\n  }\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n\n/** Builds and returns a new User. */\nfunction createNewUser(id: number): UserData {\n  const name =\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))] + ' ' +\n      NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) + '.';\n\n  return {\n    id: id.toString(),\n    name: name,\n    progress: Math.round(Math.random() * 100).toString(),\n    color: COLORS[Math.round(Math.random() * (COLORS.length - 1))]\n  };\n}\n\n/** Constants used to fill up our data base. */\nconst COLORS = ['maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple',\n  'fuchsia', 'lime', 'teal', 'aqua', 'blue', 'navy', 'black', 'gray'];\nconst NAMES = ['Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack',\n  'Charlotte', 'Theodore', 'Isla', 'Oliver', 'Isabella', 'Jasper',\n  'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'];\n\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  color: string;\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator, MatTableDataSource} from '@angular/material';\n\n/**\n * @title Table with pagination\n */\n@Component({\n  selector: 'table-pagination-example',\n  styleUrls: ['table-pagination-example.css'],\n  templateUrl: 'table-pagination-example.html',\n})\nexport class TablePaginationExample implements OnInit {\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngOnInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\n];\n","import {Component} from '@angular/core';\n\n/**\n * @title Table showing each row context properties.\n */\n@Component({\n  selector: 'table-row-context-example',\n  styleUrls: ['table-row-context-example.css'],\n  templateUrl: 'table-row-context-example.html',\n})\nexport class TableRowContextExample {\n  displayedColumns = ['$implicit', 'index', 'count', 'first', 'last', 'even', 'odd'];\n  data: string[] = ['one', 'two', 'three', 'four', 'five'];\n}\n","import {Component} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material';\nimport {SelectionModel} from '@angular/cdk/collections';\n\n/**\n * @title Table with selection\n */\n@Component({\n  selector: 'table-selection-example',\n  styleUrls: ['table-selection-example.css'],\n  templateUrl: 'table-selection-example.html',\n})\nexport class TableSelectionExample {\n  displayedColumns = ['select', 'position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n  selection = new SelectionModel<PeriodicElement>(true, []);\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n        this.selection.clear() :\n        this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MatSort, MatTableDataSource} from '@angular/material';\n\n/**\n * @title Table with sorting\n */\n@Component({\n  selector: 'table-sorting-example',\n  styleUrls: ['table-sorting-example.css'],\n  templateUrl: 'table-sorting-example.html',\n})\nexport class TableSortingExample implements OnInit {\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit() {\n    this.dataSource.sort = this.sort;\n  }\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic tabs\n */\n@Component({\n  selector: 'tabs-overview-example',\n  templateUrl: 'tabs-overview-example.html',\n  styleUrls: ['tabs-overview-example.css'],\n})\nexport class TabsOverviewExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Complex Example\n */\n@Component({\n  selector: 'tabs-template-label-example',\n  templateUrl: 'tabs-template-label-example.html',\n  styleUrls: ['./tabs-template-label-example.css']\n})\nexport class TabsTemplateLabelExample {}\n","import {Component} from '@angular/core';\n\n/** @title Monitoring autofill state with cdkAutofill */\n@Component({\n  selector: 'text-field-autofill-directive-example',\n  templateUrl: './text-field-autofill-directive-example.html',\n  styleUrls: ['./text-field-autofill-directive-example.css'],\n})\nexport class TextFieldAutofillDirectiveExample {\n  firstNameAutofilled: boolean;\n  lastNameAutofilled: boolean;\n}\n","import {AutofillMonitor} from '@angular/cdk/text-field';\nimport {Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\n\n/** @title Monitoring autofill state with AutofillMonitor */\n@Component({\n  selector: 'text-field-autofill-monitor-example',\n  templateUrl: './text-field-autofill-monitor-example.html',\n  styleUrls: ['./text-field-autofill-monitor-example.css'],\n})\nexport class TextFieldAutofillMonitorExample implements OnDestroy, OnInit {\n  @ViewChild('first', {read: ElementRef}) firstName: ElementRef;\n  @ViewChild('last', {read: ElementRef}) lastName: ElementRef;\n  firstNameAutofilled: boolean;\n  lastNameAutofilled: boolean;\n\n  constructor(private autofill: AutofillMonitor) {}\n\n  ngOnInit() {\n    this.autofill.monitor(this.firstName.nativeElement)\n        .subscribe(e => this.firstNameAutofilled = e.isAutofilled);\n    this.autofill.monitor(this.lastName.nativeElement)\n        .subscribe(e => this.lastNameAutofilled = e.isAutofilled);\n  }\n\n  ngOnDestroy() {\n    this.autofill.stopMonitoring(this.firstName.nativeElement);\n    this.autofill.stopMonitoring(this.lastName.nativeElement);\n  }\n}\n","import {CdkTextareaAutosize} from '@angular/cdk/text-field';\nimport {Component, NgZone, ViewChild} from '@angular/core';\nimport {take} from 'rxjs/operators';\n\n/** @title Auto-resizing textarea */\n@Component({\n  selector: 'text-field-autosize-textarea-example',\n  templateUrl: './text-field-autosize-textarea-example.html',\n  styleUrls: ['./text-field-autosize-textarea-example.css'],\n})\nexport class TextFieldAutosizeTextareaExample {\n  constructor(private ngZone: NgZone) {}\n\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\n\n  triggerResize() {\n    // Wait for changes to be applied, then trigger textarea resize.\n    this.ngZone.onStable.pipe(take(1))\n        .subscribe(() => this.autosize.resizeToFitContent(true));\n  }\n}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/** @title Select with option groups */\n@Component({\n  selector: 'select-optgroup-example',\n  templateUrl: 'select-optgroup-example.html',\n  styleUrls: ['select-optgroup-example.css'],\n})\nexport class SelectOptgroupExample {\n  pokemonControl = new FormControl();\n\n  pokemonGroups = [\n    {\n      name: 'Grass',\n      pokemon: [\n        { value: 'bulbasaur-0', viewValue: 'Bulbasaur' },\n        { value: 'oddish-1', viewValue: 'Oddish' },\n        { value: 'bellsprout-2', viewValue: 'Bellsprout' }\n      ]\n    },\n    {\n      name: 'Water',\n      pokemon: [\n        { value: 'squirtle-3', viewValue: 'Squirtle' },\n        { value: 'psyduck-4', viewValue: 'Psyduck' },\n        { value: 'horsea-5', viewValue: 'Horsea' }\n      ]\n    },\n    {\n      name: 'Fire',\n      disabled: true,\n      pokemon: [\n        { value: 'charmander-6', viewValue: 'Charmander' },\n        { value: 'vulpix-7', viewValue: 'Vulpix' },\n        { value: 'flareon-8', viewValue: 'Flareon' }\n      ]\n    },\n    {\n      name: 'Psychic',\n      pokemon: [\n        { value: 'mew-9', viewValue: 'Mew' },\n        { value: 'mewtwo-10', viewValue: 'Mewtwo' },\n      ]\n    }\n  ];\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic select\n */\n@Component({\n  selector: 'select-overview-example',\n  templateUrl: 'select-overview-example.html',\n  styleUrls: ['select-overview-example.css'],\n})\nexport class SelectOverviewExample {\n  foods = [\n    {value: 'steak-0', viewValue: 'Steak'},\n    {value: 'pizza-1', viewValue: 'Pizza'},\n    {value: 'tacos-2', viewValue: 'Tacos'}\n  ];\n}\n","import {Component, ViewEncapsulation} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/**\n * @title Select with custom panel styling\n */\n@Component({\n  selector: 'select-panel-class-example',\n  templateUrl: 'select-panel-class-example.html',\n  styleUrls: ['select-panel-class-example.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SelectPanelClassExample {\n  panelColor = new FormControl('red');\n}\n","import {Component} from '@angular/core';\n\n/** @title Select with reset option */\n@Component({\n  selector: 'select-reset-example',\n  templateUrl: 'select-reset-example.html',\n  styleUrls: ['select-reset-example.css'],\n})\nexport class SelectResetExample {\n  states = [\n    'Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware',\n    'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky',\n    'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi',\n    'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico',\n    'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania',\n    'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont',\n    'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'\n  ];\n}\n","import {Component} from '@angular/core';\n\n/** @title Select with 2-way value binding */\n@Component({\n  selector: 'select-value-binding-example',\n  templateUrl: 'select-value-binding-example.html',\n  styleUrls: ['select-value-binding-example.css'],\n})\nexport class SelectValueBindingExample {\n  selected = 'option2';\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Autosize sidenav\n */\n@Component({\n  selector: 'sidenav-autosize-example',\n  templateUrl: 'sidenav-autosize-example.html',\n  styleUrls: ['sidenav-autosize-example.css'],\n})\nexport class SidenavAutosizeExample {\n  showFiller = false;\n}\n","import {Component} from '@angular/core';\n\n/** @title Drawer with explicit backdrop setting */\n@Component({\n  selector: 'sidenav-backdrop-example',\n  templateUrl: 'sidenav-backdrop-example.html',\n  styleUrls: ['sidenav-backdrop-example.css'],\n})\nexport class SidenavBackdropExample {}\n","import {Component, ViewChild} from '@angular/core';\nimport {MatSidenav} from '@angular/material/sidenav';\n\n/** @title Sidenav with custom escape and backdrop click behavior */\n@Component({\n  selector: 'sidenav-disable-close-example',\n  templateUrl: 'sidenav-disable-close-example.html',\n  styleUrls: ['sidenav-disable-close-example.css'],\n})\nexport class SidenavDisableCloseExample {\n  @ViewChild('sidenav') sidenav: MatSidenav;\n\n  reason = '';\n\n  close(reason: string) {\n    this.reason = reason;\n    this.sidenav.close();\n  }\n\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n}\n","import {Component} from '@angular/core';\n\n/** @title Basic drawer */\n@Component({\n  selector: 'sidenav-drawer-overview-example',\n  templateUrl: 'sidenav-drawer-overview-example.html',\n  styleUrls: ['sidenav-drawer-overview-example.css'],\n})\nexport class SidenavDrawerOverviewExample {}\n","import {Component} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\n\n/** @title Fixed sidenav */\n@Component({\n  selector: 'sidenav-fixed-example',\n  templateUrl: 'sidenav-fixed-example.html',\n  styleUrls: ['sidenav-fixed-example.css'],\n})\nexport class SidenavFixedExample {\n  options: FormGroup;\n\n  constructor(fb: FormBuilder) {\n    this.options = fb.group({\n      'fixed': false,\n      'top': 0,\n      'bottom': 0,\n    });\n  }\n\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/** @title Sidenav with configurable mode */\n@Component({\n  selector: 'sidenav-mode-example',\n  templateUrl: 'sidenav-mode-example.html',\n  styleUrls: ['sidenav-mode-example.css'],\n})\nexport class SidenavModeExample {\n  mode = new FormControl('over');\n\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n}\n","import {Component} from '@angular/core';\n\n/** @title Sidenav open & close behavior */\n@Component({\n  selector: 'sidenav-open-close-example',\n  templateUrl: 'sidenav-open-close-example.html',\n  styleUrls: ['sidenav-open-close-example.css'],\n})\nexport class SidenavOpenCloseExample {\n  events: string[] = [];\n  opened: boolean;\n\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n}\n","import {Component} from '@angular/core';\n\n/** @title Basic sidenav */\n@Component({\n  selector: 'sidenav-overview-example',\n  templateUrl: 'sidenav-overview-example.html',\n  styleUrls: ['sidenav-overview-example.css'],\n})\nexport class SidenavOverviewExample {\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n}\n","import {Component} from '@angular/core';\n\n/** @title Implicit main content with two sidenavs */\n@Component({\n  selector: 'sidenav-position-example',\n  templateUrl: 'sidenav-position-example.html',\n  styleUrls: ['sidenav-position-example.css'],\n})\nexport class SidenavPositionExample {\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n}\n","import {MediaMatcher} from '@angular/cdk/layout';\nimport {ChangeDetectorRef, Component, OnDestroy} from '@angular/core';\n\n/** @title Responsive sidenav */\n@Component({\n  selector: 'sidenav-responsive-example',\n  templateUrl: 'sidenav-responsive-example.html',\n  styleUrls: ['sidenav-responsive-example.css'],\n})\nexport class SidenavResponsiveExample implements OnDestroy {\n  mobileQuery: MediaQueryList;\n\n  fillerNav = Array(50).fill(0).map((_, i) => `Nav Item ${i + 1}`);\n\n  fillerContent = Array(50).fill(0).map(() =>\n      `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n       labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\n       laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in\n       voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\n       cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.`);\n\n  private _mobileQueryListener: () => void;\n\n  constructor(changeDetectorRef: ChangeDetectorRef, media: MediaMatcher) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Configurable slide-toggle\n */\n@Component({\n  selector: 'slide-toggle-configurable-example',\n  templateUrl: 'slide-toggle-configurable-example.html',\n  styleUrls: ['slide-toggle-configurable-example.css'],\n})\nexport class SlideToggleConfigurableExample {\n  color = 'accent';\n  checked = false;\n  disabled = false;\n}\n","import {Component} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n/**\n * @title Slide-toggle with forms\n */\n@Component({\n  selector: 'slide-toggle-forms-example',\n  templateUrl: './slide-toggle-forms-example.html',\n  styleUrls: ['./slide-toggle-forms-example.css'],\n})\nexport class SlideToggleFormsExample {\n  isChecked = true;\n  formGroup: FormGroup;\n\n  constructor(formBuilder: FormBuilder) {\n    this.formGroup = formBuilder.group({\n      enableWifi: '',\n      acceptTerms: ['', Validators.requiredTrue]\n    });\n  }\n\n  onFormSubmit(formValue: any) {\n    alert(JSON.stringify(formValue, null, 2));\n  }\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic slide-toggles\n */\n@Component({\n  selector: 'slide-toggle-overview-example',\n  templateUrl: 'slide-toggle-overview-example.html',\n  styleUrls: ['slide-toggle-overview-example.css'],\n})\nexport class SlideToggleOverviewExample {}\n","import {Component, ViewEncapsulation} from '@angular/core';\n\n/**\n * @title Configurable slider\n */\n@Component({\n  selector: 'slider-configurable-example',\n  templateUrl: 'slider-configurable-example.html',\n  styleUrls: ['slider-configurable-example.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SliderConfigurableExample {\n  autoTicks = false;\n  disabled = false;\n  invert = false;\n  max = 100;\n  min = 0;\n  showTicks = false;\n  step = 1;\n  thumbLabel = false;\n  value = 0;\n  vertical = false;\n\n  get tickInterval(): number | 'auto' {\n    return this.showTicks ? (this.autoTicks ? 'auto' : this._tickInterval) : 0;\n  }\n  set tickInterval(v) {\n    this._tickInterval = Number(v);\n  }\n  private _tickInterval = 1;\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Slider with custom thumb label formatting.\n */\n@Component({\n  selector: 'slider-formatting-example',\n  templateUrl: 'slider-formatting-example.html',\n  styleUrls: ['slider-formatting-example.css'],\n})\nexport class SliderFormattingExample {\n  formatLabel(value: number | null) {\n    if (!value) {\n      return 0;\n    }\n\n    if (value >= 1000) {\n      return Math.round(value / 1000) + 'k';\n    }\n\n    return value;\n  }\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic slider\n */\n@Component({\n  selector: 'slider-overview-example',\n  templateUrl: 'slider-overview-example.html',\n  styleUrls: ['slider-overview-example.css'],\n})\nexport class SliderOverviewExample {}\n","import {Component} from '@angular/core';\nimport {MatSnackBar} from '@angular/material';\n\n/**\n * @title Snack-bar with a custom component\n */\n@Component({\n  selector: 'snack-bar-component-example',\n  templateUrl: 'snack-bar-component-example.html',\n})\nexport class SnackBarComponentExample {\n  constructor(public snackBar: MatSnackBar) {}\n\n  openSnackBar() {\n    this.snackBar.openFromComponent(PizzaPartyComponent, {\n      duration: 500,\n    });\n  }\n}\n\n\n@Component({\n  selector: 'snack-bar-component-example-snack',\n  templateUrl: 'snack-bar-component-example-snack.html',\n  styles: [`.example-pizza-party { color: hotpink; }`],\n})\nexport class PizzaPartyComponent {}\n","import {Component} from '@angular/core';\nimport {MatSnackBar} from '@angular/material';\n\n/**\n * @title Basic snack-bar\n */\n@Component({\n  selector: 'snack-bar-overview-example',\n  templateUrl: 'snack-bar-overview-example.html',\n  styleUrls: ['snack-bar-overview-example.css'],\n})\nexport class SnackBarOverviewExample {\n  constructor(public snackBar: MatSnackBar) {}\n\n  openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 2000,\n    });\n  }\n}\n","import {Component} from '@angular/core';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material';\n\n/**\n * @title Snack-bar with configurable position\n */\n@Component({\n  selector: 'snack-bar-position-example',\n  templateUrl: 'snack-bar-position-example.html',\n})\nexport class SnackBarPositionExample {\n\n  horizontalPosition: MatSnackBarHorizontalPosition = 'start';\n  verticalPosition: MatSnackBarVerticalPosition = 'bottom';\n\n  constructor(public snackBar: MatSnackBar) {}\n\n  openSnackBar() {\n    this.snackBar.open('Canonball!!', 'End now', {\n      duration: 500,\n      horizontalPosition: this.horizontalPosition,\n      verticalPosition: this.verticalPosition,\n    });\n  }\n}\n","import {Component} from '@angular/core';\nimport {Sort} from '@angular/material';\n\n/**\n * @title Sorting overview\n */\n@Component({\n  selector: 'sort-overview-example',\n  templateUrl: 'sort-overview-example.html',\n  styleUrls: ['sort-overview-example.css'],\n})\nexport class SortOverviewExample {\n  desserts = [\n    {name: 'Frozen yogurt', calories: '159', fat: '6', carbs: '24', protein: '4'},\n    {name: 'Ice cream sandwich', calories: '237', fat: '9', carbs: '37', protein: '4'},\n    {name: 'Eclair', calories: '262', fat: '16', carbs: '24', protein: '6'},\n    {name: 'Cupcake', calories: '305', fat: '4', carbs: '67', protein: '4'},\n    {name: 'Gingerbread', calories: '356', fat: '16', carbs: '49', protein: '4'},\n  ];\n\n  sortedData;\n\n  constructor() {\n    this.sortedData = this.desserts.slice();\n  }\n\n  sortData(sort: Sort) {\n    const data = this.desserts.slice();\n    if (!sort.active || sort.direction == '') {\n      this.sortedData = data;\n      return;\n    }\n\n    this.sortedData = data.sort((a, b) => {\n      let isAsc = sort.direction == 'asc';\n      switch (sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'calories': return compare(+a.calories, +b.calories, isAsc);\n        case 'fat': return compare(+a.fat, +b.fat, isAsc);\n        case 'carbs': return compare(+a.carbs, +b.carbs, isAsc);\n        case 'protein': return compare(+a.protein, +b.protein, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n/**\n * @title Stepper with editable steps\n */\n@Component({\n  selector: 'stepper-editable-example',\n  templateUrl: 'stepper-editable-example.html',\n  styleUrls: ['stepper-editable-example.css']\n})\nexport class StepperEditableExample implements OnInit {\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  isEditable: boolean = false;\n\n  constructor(private _formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ['', Validators.required]\n    });\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n/**\n * @title Stepper with optional steps\n */\n@Component({\n  selector: 'stepper-optional-example',\n  templateUrl: 'stepper-optional-example.html',\n  styleUrls: ['stepper-optional-example.css']\n})\nexport class StepperOptionalExample implements OnInit {\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n  isOptional: boolean = false;\n\n  constructor(private _formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ''\n    });\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n/**\n * @title Stepper overview\n */\n@Component({\n  selector: 'stepper-overview-example',\n  templateUrl: 'stepper-overview-example.html',\n  styleUrls: ['stepper-overview-example.css']\n})\nexport class StepperOverviewExample implements OnInit {\n  isLinear = false;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n\n  constructor(private _formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ['', Validators.required]\n    });\n  }\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic use of `<mat-table>` (uses display flex)\n */\n@Component({\n  selector: 'table-basic-flex-example',\n  styleUrls: ['table-basic-flex-example.css'],\n  templateUrl: 'table-basic-flex-example.html',\n})\nexport class TableBasicFlexExample {\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n","import {FocusMonitor} from '@angular/cdk/a11y';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Component, ElementRef, Input, OnDestroy} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {MatFormFieldControl} from '@angular/material';\nimport {Subject} from 'rxjs';\n\n\n/** Data structure for holding telephone number. */\nexport class MyTel {\n  constructor(public area: string, public exchange: string, public subscriber: string) {}\n}\n\n\n/** Custom `MatFormFieldControl` for telephone number input. */\n@Component({\n  selector: 'my-tel-input',\n  templateUrl: 'form-field-custom-control-example.html',\n  styleUrls: ['form-field-custom-control-example.css'],\n  providers: [{provide: MatFormFieldControl, useExisting: MyTelInput}],\n  host: {\n    '[class.floating]': 'shouldLabelFloat',\n    '[id]': 'id',\n    '[attr.aria-describedby]': 'describedBy',\n  }\n})\nexport class MyTelInput implements MatFormFieldControl<MyTel>, OnDestroy {\n  static nextId = 0;\n\n  parts: FormGroup;\n\n  stateChanges = new Subject<void>();\n\n  focused = false;\n\n  ngControl = null;\n\n  errorState = false;\n\n  controlType = 'my-tel-input';\n\n  get empty() {\n    let n = this.parts.value;\n    return !n.area && !n.exchange && !n.subscriber;\n  }\n\n  get shouldLabelFloat() { return this.focused || !this.empty; }\n\n  id = `my-tel-input-${MyTelInput.nextId++}`;\n\n  describedBy = '';\n\n  @Input()\n  get placeholder() { return this._placeholder; }\n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n  private _placeholder: string;\n\n  @Input()\n  get required() { return this._required; }\n  set required(req) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n  private _required = false;\n\n  @Input()\n  get disabled() { return this._disabled; }\n  set disabled(dis) {\n    this._disabled = coerceBooleanProperty(dis);\n    this.stateChanges.next();\n  }\n  private _disabled = false;\n\n  @Input()\n  get value(): MyTel | null {\n    let n = this.parts.value;\n    if (n.area.length == 3 && n.exchange.length == 3 && n.subscriber.length == 4) {\n      return new MyTel(n.area, n.exchange, n.subscriber);\n    }\n    return null;\n  }\n  set value(tel: MyTel | null) {\n    tel = tel || new MyTel('', '', '');\n    this.parts.setValue({area: tel.area, exchange: tel.exchange, subscriber: tel.subscriber});\n    this.stateChanges.next();\n  }\n\n  constructor(fb: FormBuilder, private fm: FocusMonitor, private elRef: ElementRef) {\n    this.parts = fb.group({\n      'area': '',\n      'exchange': '',\n      'subscriber': '',\n    });\n\n    fm.monitor(elRef.nativeElement, true).subscribe((origin) => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    this.fm.stopMonitoring(this.elRef.nativeElement);\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() != 'input') {\n      this.elRef.nativeElement.querySelector('input').focus();\n    }\n  }\n}\n\n\n/** @title Form field with custom telephone number input control. */\n@Component({\n  selector: 'form-field-custom-control-example',\n  template: `\n    <mat-form-field>\n      <my-tel-input placeholder=\"Phone number\" required></my-tel-input>\n      <mat-icon matSuffix>phone</mat-icon>\n      <mat-hint>Include area code</mat-hint>\n    </mat-form-field>\n  `\n})\nexport class FormFieldCustomControlExample {}\n","import {Component} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\n\n/** @title Form field with error messages */\n@Component({\n  selector: 'form-field-error-example',\n  templateUrl: 'form-field-error-example.html',\n  styleUrls: ['form-field-error-example.css']\n})\nexport class FormFieldErrorExample {\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  getErrorMessage() {\n    return this.email.hasError('required') ? 'You must enter a value' :\n        this.email.hasError('email') ? 'Not a valid email' :\n            '';\n  }\n}\n","import {Component} from '@angular/core';\n\n/** @title Form field with hints */\n@Component({\n  selector: 'form-field-hint-example',\n  templateUrl: 'form-field-hint-example.html',\n  styleUrls: ['form-field-hint-example.css']\n})\nexport class FormFieldHintExample {}\n","import {Component} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\n\n/** @title Form field with label */\n@Component({\n  selector: 'form-field-label-example',\n  templateUrl: 'form-field-label-example.html',\n  styleUrls: ['form-field-label-example.css']\n})\nexport class FormFieldLabelExample {\n  options: FormGroup;\n\n  constructor(fb: FormBuilder) {\n    this.options = fb.group({\n      hideRequired: false,\n      floatLabel: 'auto',\n    });\n  }\n}\n","import {Component} from '@angular/core';\n\n/** @title Simple form field */\n@Component({\n  selector: 'form-field-overview-example',\n  templateUrl: 'form-field-overview-example.html',\n  styleUrls: ['form-field-overview-example.css']\n})\nexport class FormFieldOverviewExample {}\n","import {Component} from '@angular/core';\n\n/** @title Form field with prefix & suffix */\n@Component({\n  selector: 'form-field-prefix-suffix-example',\n  templateUrl: 'form-field-prefix-suffix-example.html',\n  styleUrls: ['form-field-prefix-suffix-example.css']\n})\nexport class FormFieldPrefixSuffixExample {\n  hide = true;\n}\n","import {Component} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n/** @title Form field theming */\n@Component({\n  selector: 'form-field-theming-example',\n  templateUrl: 'form-field-theming-example.html',\n  styleUrls: ['form-field-theming-example.css']\n})\nexport class FormFieldThemingExample {\n  options: FormGroup;\n\n  constructor(fb: FormBuilder) {\n    this.options = fb.group({\n      'color': 'primary',\n      'fontSize': [16, Validators.min(10)],\n    });\n  }\n\n  getFontSize() {\n    return Math.max(10, this.options.value.fontSize);\n  }\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Dynamic grid-list\n */\n@Component({\n  selector: 'grid-list-dynamic-example',\n  templateUrl: 'grid-list-dynamic-example.html',\n  styleUrls: ['grid-list-dynamic-example.css'],\n})\nexport class GridListDynamicExample {\n  tiles = [\n    {text: 'One', cols: 3, rows: 1, color: 'lightblue'},\n    {text: 'Two', cols: 1, rows: 2, color: 'lightgreen'},\n    {text: 'Three', cols: 1, rows: 1, color: 'lightpink'},\n    {text: 'Four', cols: 2, rows: 1, color: '#DDBDF1'},\n  ];\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic grid-list\n */\n@Component({\n  selector: 'grid-list-overview-example',\n  styleUrls: ['grid-list-overview-example.css'],\n  templateUrl: 'grid-list-overview-example.html',\n})\nexport class GridListOverviewExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic icons\n */\n@Component({\n  selector: 'icon-overview-example',\n  templateUrl: 'icon-overview-example.html',\n  styleUrls: ['icon-overview-example.css']\n})\nexport class IconOverviewExample {}\n","import {Component} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {MatIconRegistry} from '@angular/material';\n\n/**\n * @title SVG icons\n */\n@Component({\n  selector: 'icon-svg-example',\n  templateUrl: 'icon-svg-example.html',\n  styleUrls: ['icon-svg-example.css'],\n})\nexport class IconSvgExample {\n  constructor(iconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n    iconRegistry.addSvgIcon(\n        'thumbs-up',\n        sanitizer.bypassSecurityTrustResourceUrl('assets/img/examples/thumbup-icon.svg'));\n  }\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Input with a clear button\n */\n@Component({\n  selector: 'input-clearable-example',\n  templateUrl: './input-clearable-example.html',\n  styleUrls: ['./input-clearable-example.css'],\n})\nexport class InputClearableExample {\n  value = 'Clear me';\n}\n","import {Component} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n/** @title Input with a custom ErrorStateMatcher */\n@Component({\n  selector: 'input-error-state-matcher-example',\n  templateUrl: './input-error-state-matcher-example.html',\n  styleUrls: ['./input-error-state-matcher-example.css'],\n})\nexport class InputErrorStateMatcherExample {\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n}\n","import {Component} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\n\n/**\n * @title Input with error messages\n */\n@Component({\n  selector: 'input-errors-example',\n  templateUrl: 'input-errors-example.html',\n  styleUrls: ['input-errors-example.css'],\n})\nexport class InputErrorsExample {\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Inputs in a form\n */\n@Component({\n  selector: 'input-form-example',\n  templateUrl: 'input-form-example.html',\n  styleUrls: ['input-form-example.css'],\n})\nexport class InputFormExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Input with hints\n */\n@Component({\n  selector: 'input-hint-example',\n  templateUrl: 'input-hint-example.html',\n  styleUrls: ['input-hint-example.css'],\n})\nexport class InputHintExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic Inputs\n */\n@Component({\n  selector: 'input-overview-example',\n  styleUrls: ['input-overview-example.css'],\n  templateUrl: 'input-overview-example.html',\n})\nexport class InputOverviewExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Inputs with prefixes and suffixes\n */\n@Component({\n  selector: 'input-prefix-suffix-example',\n  templateUrl: 'input-prefix-suffix-example.html',\n  styleUrls: ['input-prefix-suffix-example.css'],\n})\nexport class InputPrefixSuffixExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic list\n */\n@Component({\n  selector: 'list-overview-example',\n  templateUrl: 'list-overview-example.html',\n  styleUrls: ['list-overview-example.css'],\n})\nexport class ListOverviewExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title List with sections\n */\n@Component({\n  selector: 'list-sections-example',\n  styleUrls: ['list-sections-example.css'],\n  templateUrl: 'list-sections-example.html',\n})\nexport class ListSectionsExample {\n  folders = [\n    {\n      name: 'Photos',\n      updated: new Date('1/1/16'),\n    },\n    {\n      name: 'Recipes',\n      updated: new Date('1/17/16'),\n    },\n    {\n      name: 'Work',\n      updated: new Date('1/28/16'),\n    }\n  ];\n  notes = [\n    {\n      name: 'Vacation Itinerary',\n      updated: new Date('2/20/16'),\n    },\n    {\n      name: 'Kitchen Remodel',\n      updated: new Date('1/18/16'),\n    }\n  ];\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title List with selection\n */\n@Component({\n  selector: 'list-selection-example',\n  styleUrls: ['list-selection-example.css'],\n  templateUrl: 'list-selection-example.html',\n})\nexport class ListSelectionExample {\n  typesOfShoes = ['Boots', 'Clogs', 'Loafers', 'Moccasins', 'Sneakers'];\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Menu with icons\n */\n@Component({\n  selector: 'menu-icons-example',\n  templateUrl: 'menu-icons-example.html',\n  styleUrls: ['menu-icons-example.css'],\n})\nexport class MenuIconsExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic menu\n */\n@Component({\n  selector: 'menu-overview-example',\n  templateUrl: 'menu-overview-example.html',\n  styleUrls: ['menu-overview-example.css'],\n})\nexport class MenuOverviewExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Nested menu\n */\n@Component({\n  selector: 'nested-menu-example',\n  templateUrl: 'nested-menu-example.html',\n  styleUrls: ['nested-menu-example.css']\n})\nexport class NestedMenuExample {}\n","import {Component} from '@angular/core';\nimport {PageEvent} from '@angular/material';\n\n/**\n * @title Configurable paginator\n */\n@Component({\n  selector: 'paginator-configurable-example',\n  templateUrl: 'paginator-configurable-example.html',\n  styleUrls: ['paginator-configurable-example.css'],\n})\nexport class PaginatorConfigurableExample {\n  // MatPaginator Inputs\n  length = 100;\n  pageSize = 10;\n  pageSizeOptions = [5, 10, 25, 100];\n\n  // MatPaginator Output\n  pageEvent: PageEvent;\n\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n  }\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Paginator\n */\n@Component({\n  selector: 'paginator-overview-example',\n  templateUrl: 'paginator-overview-example.html',\n  styleUrls: ['paginator-overview-example.css'],\n})\nexport class PaginatorOverviewExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Buffer progress-bar\n */\n@Component({\n  selector: 'progress-bar-buffer-example',\n  templateUrl: 'progress-bar-buffer-example.html',\n  styleUrls: ['progress-bar-buffer-example.css'],\n})\nexport class ProgressBarBufferExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Configurable progress-bar\n */\n@Component({\n  selector: 'progress-bar-configurable-example',\n  templateUrl: 'progress-bar-configurable-example.html',\n  styleUrls: ['progress-bar-configurable-example.css'],\n})\nexport class ProgressBarConfigurableExample {\n  color = 'primary';\n  mode = 'determinate';\n  value = 50;\n  bufferValue = 75;\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Determinate progress-bar\n */\n@Component({\n  selector: 'progress-bar-determinate-example',\n  templateUrl: 'progress-bar-determinate-example.html',\n  styleUrls: ['progress-bar-determinate-example.css'],\n})\nexport class ProgressBarDeterminateExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Indeterminate progress-bar\n */\n@Component({\n  selector: 'progress-bar-indeterminate-example',\n  templateUrl: 'progress-bar-indeterminate-example.html',\n  styleUrls: ['progress-bar-indeterminate-example.css'],\n})\nexport class ProgressBarIndeterminateExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Query progress-bar\n */\n@Component({\n  selector: 'progress-bar-query-example',\n  templateUrl: 'progress-bar-query-example.html',\n  styleUrls: ['progress-bar-query-example.css'],\n})\nexport class ProgressBarQueryExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Configurable progress spinner\n */\n@Component({\n  selector: 'progress-spinner-configurable-example',\n  templateUrl: 'progress-spinner-configurable-example.html',\n  styleUrls: ['progress-spinner-configurable-example.css'],\n})\nexport class ProgressSpinnerConfigurableExample {\n  color = 'primary';\n  mode = 'determinate';\n  value = 50;\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic progress-spinner\n */\n@Component({\n  selector: 'progress-spinner-overview-example',\n  templateUrl: 'progress-spinner-overview-example.html',\n  styleUrls: ['progress-spinner-overview-example.css'],\n})\nexport class ProgressSpinnerOverviewExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Radios with ngModel\n */\n@Component({\n  selector: 'radio-ng-model-example',\n  templateUrl: 'radio-ng-model-example.html',\n  styleUrls: ['radio-ng-model-example.css'],\n})\nexport class RadioNgModelExample {\n  favoriteSeason: string;\n\n  seasons = [\n    'Winter',\n    'Spring',\n    'Summer',\n    'Autumn',\n  ];\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic radios\n */\n@Component({\n  selector: 'radio-overview-example',\n  templateUrl: 'radio-overview-example.html',\n  styleUrls: ['radio-overview-example.css'],\n})\nexport class RadioOverviewExample {}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/** @title Select with custom trigger text */\n@Component({\n  selector: 'select-custom-trigger-example',\n  templateUrl: 'select-custom-trigger-example.html',\n  styleUrls: ['select-custom-trigger-example.css'],\n})\nexport class SelectCustomTriggerExample {\n  toppings = new FormControl();\n\n  toppingList = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\n}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/** @title Disabled select */\n@Component({\n  selector: 'select-disabled-example',\n  templateUrl: 'select-disabled-example.html',\n  styleUrls: ['select-disabled-example.css'],\n})\nexport class SelectDisabledExample {\n  disableSelect = new FormControl(false);\n}\n","import {Component} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n/** @title Select with a custom ErrorStateMatcher */\n@Component({\n  selector: 'select-error-state-matcher-example',\n  templateUrl: 'select-error-state-matcher-example.html',\n  styleUrls: ['select-error-state-matcher-example.css'],\n})\nexport class SelectErrorStateMatcherExample {\n  selected = new FormControl('valid', [\n    Validators.required,\n    Validators.pattern('valid'),\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Select in a form\n */\n@Component({\n  selector: 'select-form-example',\n  templateUrl: 'select-form-example.html',\n  styleUrls: ['select-form-example.css'],\n})\nexport class SelectFormExample {\n  selectedValue: string;\n\n  foods = [\n    {value: 'steak-0', viewValue: 'Steak'},\n    {value: 'pizza-1', viewValue: 'Pizza'},\n    {value: 'tacos-2', viewValue: 'Tacos'}\n  ];\n}\n","import {Component} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\n\n/** @title Select with form field features */\n@Component({\n  selector: 'select-hint-error-example',\n  templateUrl: 'select-hint-error-example.html',\n  styleUrls: ['select-hint-error-example.css'],\n})\nexport class SelectHintErrorExample {\n  animalControl = new FormControl('', [Validators.required]);\n\n  animals = [\n    {name: 'Dog', sound: 'Woof!'},\n    {name: 'Cat', sound: 'Meow!'},\n    {name: 'Cow', sound: 'Moo!'},\n    {name: 'Fox', sound: 'Wa-pa-pa-pa-pa-pa-pow!'},\n  ];\n}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/** @title Select with multiple selection */\n@Component({\n  selector: 'select-multiple-example',\n  templateUrl: 'select-multiple-example.html',\n  styleUrls: ['select-multiple-example.css'],\n})\nexport class SelectMultipleExample {\n  toppings = new FormControl();\n\n  toppingList = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\n}\n","import {Component} from '@angular/core';\n\n/** @title Select with no option ripple */\n@Component({\n  selector: 'select-no-ripple-example',\n  templateUrl: 'select-no-ripple-example.html',\n  styleUrls: ['select-no-ripple-example.css'],\n})\nexport class SelectNoRippleExample {}\n","import {Component} from '@angular/core';\nimport {MatChipInputEvent} from '@angular/material';\nimport {ENTER, COMMA} from '@angular/cdk/keycodes';\n\n/**\n * @title Chips with input\n */\n@Component({\n  selector: 'chips-input-example',\n  templateUrl: 'chips-input-example.html',\n  styleUrls: ['chips-input-example.css']\n})\nexport class ChipsInputExample {\n  visible: boolean = true;\n  selectable: boolean = true;\n  removable: boolean = true;\n  addOnBlur: boolean = true;\n\n  // Enter, comma\n  separatorKeysCodes = [ENTER, COMMA];\n\n  fruits = [\n    { name: 'Lemon' },\n    { name: 'Lime' },\n    { name: 'Apple' },\n  ];\n\n\n  add(event: MatChipInputEvent): void {\n    let input = event.input;\n    let value = event.value;\n\n    // Add our fruit\n    if ((value || '').trim()) {\n      this.fruits.push({ name: value.trim() });\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  remove(fruit: any): void {\n    let index = this.fruits.indexOf(fruit);\n\n    if (index >= 0) {\n      this.fruits.splice(index, 1);\n    }\n  }\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic chips\n */\n@Component({\n  selector: 'chips-overview-example',\n  templateUrl: 'chips-overview-example.html',\n  styleUrls: ['chips-overview-example.css'],\n})\nexport class ChipsOverviewExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Stacked chips\n */\n@Component({\n  selector: 'chips-stacked-example',\n  templateUrl: 'chips-stacked-example.html',\n  styleUrls: ['chips-stacked-example.css'],\n})\nexport class ChipsStackedExample {\n  color: string;\n\n  availableColors = [\n    { name: 'none', color: '' },\n    { name: 'Primary', color: 'primary' },\n    { name: 'Accent', color: 'accent' },\n    { name: 'Warn', color: 'warn' }\n  ];\n}\n","import {Component} from '@angular/core';\n\n/** @title Datepicker open method */\n@Component({\n  selector: 'datepicker-api-example',\n  templateUrl: 'datepicker-api-example.html',\n  styleUrls: ['datepicker-api-example.css'],\n})\nexport class DatepickerApiExample {}\n","import {Component} from '@angular/core';\n\n/** @title Datepicker palette colors */\n@Component({\n  selector: 'datepicker-color-example',\n  templateUrl: 'datepicker-color-example.html',\n  styleUrls: ['datepicker-color-example.css'],\n})\nexport class DatepickerColorExample {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Host,\n  Inject,\n  OnDestroy,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MatCalendar} from '@angular/material';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\n/** @title Datepicker with custom calendar header */\n@Component({\n  selector: 'datepicker-custom-header-example',\n  templateUrl: 'datepicker-custom-header-example.html',\n  styleUrls: ['datepicker-custom-header-example.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DatepickerCustomHeaderExample {\n  exampleHeader = ExampleHeader;\n}\n\n/** Custom header component for datepicker. */\n@Component({\n  selector: 'example-header',\n  template: `\n    <div class=\"example-header\">\n      <button mat-icon-button class=\"example-double-arrow\" (click)=\"previousClicked('year')\">\n        <mat-icon>keyboard_arrow_left</mat-icon>\n        <mat-icon>keyboard_arrow_left</mat-icon>\n      </button>\n      <button mat-icon-button (click)=\"previousClicked('month')\">\n        <mat-icon>keyboard_arrow_left</mat-icon>\n      </button>\n      <span class=\"example-header-label\">{{periodLabel}}</span>\n      <button mat-icon-button (click)=\"nextClicked('month')\">\n        <mat-icon>keyboard_arrow_right</mat-icon>\n      </button>\n      <button mat-icon-button class=\"example-double-arrow\" (click)=\"nextClicked('year')\">\n        <mat-icon>keyboard_arrow_right</mat-icon>\n        <mat-icon>keyboard_arrow_right</mat-icon>\n      </button>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ExampleHeader<D> implements OnDestroy {\n  private destroyed = new Subject<void>();\n\n  constructor(@Host() private calendar: MatCalendar<D>,\n              private dateAdapter: DateAdapter<D>,\n              @Inject(MAT_DATE_FORMATS) private dateFormats: MatDateFormats,\n              cdr: ChangeDetectorRef) {\n    calendar.stateChanges\n        .pipe(takeUntil(this.destroyed))\n        .subscribe(() => cdr.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n    this.destroyed.complete();\n  }\n\n  get periodLabel() {\n    return this.dateAdapter\n        .format(this.calendar.activeDate, this.dateFormats.display.monthYearLabel)\n        .toLocaleUpperCase();\n  }\n\n  previousClicked(mode: 'month' | 'year') {\n    this.calendar.activeDate = mode == 'month' ?\n        this.dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n        this.dateAdapter.addCalendarYears(this.calendar.activeDate, -1);\n  }\n\n  nextClicked(mode: 'month' | 'year') {\n    this.calendar.activeDate = mode == 'month' ?\n        this.dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n        this.dateAdapter.addCalendarYears(this.calendar.activeDate, 1);\n  }\n}\n","import {Component} from '@angular/core';\n\n/** @title Datepicker with custom icon */\n@Component({\n  selector: 'datepicker-custom-icon-example',\n  templateUrl: 'datepicker-custom-icon-example.html',\n  styleUrls: ['datepicker-custom-icon-example.css'],\n})\nexport class DatepickerCustomIconExample {}\n","import {Component} from '@angular/core';\n\n/** @title Disabled datepicker */\n@Component({\n  selector: 'datepicker-disabled-example',\n  templateUrl: 'datepicker-disabled-example.html',\n  styleUrls: ['datepicker-disabled-example.css'],\n})\nexport class DatepickerDisabledExample {}\n","import {Component} from '@angular/core';\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\n\n/** @title Datepicker input and change events */\n@Component({\n  selector: 'datepicker-events-example',\n  templateUrl: 'datepicker-events-example.html',\n  styleUrls: ['datepicker-events-example.css'],\n})\nexport class DatepickerEventsExample {\n  events: string[] = [];\n\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n    this.events.push(`${type}: ${event.value}`);\n  }\n}\n","import {Component} from '@angular/core';\n\n/** @title Datepicker with filter validation */\n@Component({\n  selector: 'datepicker-filter-example',\n  templateUrl: 'datepicker-filter-example.html',\n  styleUrls: ['datepicker-filter-example.css'],\n})\nexport class DatepickerFilterExample {\n  myFilter = (d: Date): boolean => {\n    const day = d.getDay();\n    // Prevent Saturday and Sunday from being selected.\n    return day !== 0 && day !== 6;\n  }\n}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\n\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\n// tslint:disable-next-line:no-duplicate-imports\nimport {default as _rollupMoment} from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\n// See the Moment.js docs for the meaning of these formats:\n// https://momentjs.com/docs/#/displaying/format/\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n/** @title Datepicker with custom formats */\n@Component({\n  selector: 'datepicker-formats-example',\n  templateUrl: 'datepicker-formats-example.html',\n  styleUrls: ['datepicker-formats-example.css'],\n  providers: [\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\n    // application's root module. We provide it at the component level here, due to limitations of\n    // our example generation script.\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n  ],\n})\nexport class DatepickerFormatsExample {\n  date = new FormControl(moment());\n}\n","import {Component} from '@angular/core';\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\n\n/** @title Datepicker with different locale */\n@Component({\n  selector: 'datepicker-locale-example',\n  templateUrl: 'datepicker-locale-example.html',\n  styleUrls: ['datepicker-locale-example.css'],\n  providers: [\n    // The locale would typically be provided on the root module of your application. We do it at\n    // the component level here, due to limitations of our example generation script.\n    {provide: MAT_DATE_LOCALE, useValue: 'ja-JP'},\n\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\n    // here, due to limitations of our example generation script.\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ],\n})\nexport class DatepickerLocaleExample {\n  constructor(private adapter: DateAdapter<any>) {}\n\n  french() {\n    this.adapter.setLocale('fr');\n  }\n}\n","import {Component} from '@angular/core';\n\n/** @title Datepicker with min & max validation */\n@Component({\n  selector: 'datepicker-min-max-example',\n  templateUrl: 'datepicker-min-max-example.html',\n  styleUrls: ['datepicker-min-max-example.css'],\n})\nexport class DatepickerMinMaxExample {\n  minDate = new Date(2000, 0, 1);\n  maxDate = new Date(2020, 0, 1);\n}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\n\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\n// tslint:disable-next-line:no-duplicate-imports\nimport {default as _rollupMoment} from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\n/** @title Datepicker that uses Moment.js dates */\n@Component({\n  selector: 'datepicker-moment-example',\n  templateUrl: 'datepicker-moment-example.html',\n  styleUrls: ['datepicker-moment-example.css'],\n  providers: [\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\n    // here, due to limitations of our example generation script.\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ],\n})\nexport class DatepickerMomentExample {\n  // Datepicker takes `Moment` objects instead of `Date` objects.\n  date = new FormControl(moment([2017, 0, 1]));\n}\n","import {Component} from '@angular/core';\n\n/** @title Basic datepicker */\n@Component({\n  selector: 'datepicker-overview-example',\n  templateUrl: 'datepicker-overview-example.html',\n  styleUrls: ['datepicker-overview-example.css'],\n})\nexport class DatepickerOverviewExample {}\n","import {Component} from '@angular/core';\n\n/** @title Datepicker start date */\n@Component({\n  selector: 'datepicker-start-view-example',\n  templateUrl: 'datepicker-start-view-example.html',\n  styleUrls: ['datepicker-start-view-example.css'],\n})\nexport class DatepickerStartViewExample {\n  startDate = new Date(1990, 0, 1);\n}\n","import {Component} from '@angular/core';\n\n/** @title Datepicker touch UI */\n@Component({\n  selector: 'datepicker-touch-example',\n  templateUrl: 'datepicker-touch-example.html',\n  styleUrls: ['datepicker-touch-example.css'],\n})\nexport class DatepickerTouchExample {}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/** @title Datepicker selected value */\n@Component({\n  selector: 'datepicker-value-example',\n  templateUrl: 'datepicker-value-example.html',\n  styleUrls: ['datepicker-value-example.css'],\n})\nexport class DatepickerValueExample {\n  date = new FormControl(new Date());\n  serializedDate = new FormControl((new Date()).toISOString());\n}\n","import {Component, ViewEncapsulation} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\nimport {MatDatepicker} from '@angular/material/datepicker';\n\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\n// tslint:disable-next-line:no-duplicate-imports\nimport {default as _rollupMoment, Moment} from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\n// See the Moment.js docs for the meaning of these formats:\n// https://momentjs.com/docs/#/displaying/format/\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'MM/YYYY',\n  },\n  display: {\n    dateInput: 'MM/YYYY',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n/** @title Datepicker emulating a Year and month picker */\n@Component({\n  selector: 'datepicker-views-selection-example',\n  templateUrl: 'datepicker-views-selection-example.html',\n  styleUrls: ['datepicker-views-selection-example.css'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\n    // application's root module. We provide it at the component level here, due to limitations of\n    // our example generation script.\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n  ],\n})\nexport class DatepickerViewsSelectionExample {\n  date = new FormControl(moment());\n\n  chosenYearHandler(normalizedYear: Moment) {\n    const ctrlValue = this.date.value;\n    ctrlValue.year(normalizedYear.year());\n    this.date.setValue(ctrlValue);\n  }\n\n  chosenMonthHandler(normlizedMonth: Moment, datepicker: MatDatepicker<Moment>) {\n    const ctrlValue = this.date.value;\n    ctrlValue.month(normlizedMonth.month());\n    this.date.setValue(ctrlValue);\n    datepicker.close();\n  }\n}\n","import {Component} from '@angular/core';\nimport {MatDialog} from '@angular/material';\n\n/**\n * @title Dialog with header, scrollable content and actions\n */\n@Component({\n  selector: 'dialog-content-example',\n  templateUrl: 'dialog-content-example.html',\n  styleUrls: ['dialog-content-example.css'],\n})\nexport class DialogContentExample {\n  constructor(public dialog: MatDialog) {}\n\n  openDialog() {\n    const dialogRef = this.dialog.open(DialogContentExampleDialog, {\n      height: '350px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-content-example-dialog',\n  templateUrl: 'dialog-content-example-dialog.html',\n})\nexport class DialogContentExampleDialog {}\n","import {Component, Inject} from '@angular/core';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material';\n\n/**\n * @title Injecting data when opening a dialog\n */\n@Component({\n  selector: 'dialog-data-example',\n  templateUrl: 'dialog-data-example.html',\n  styleUrls: ['dialog-data-example.css']\n})\nexport class DialogDataExample {\n  constructor(public dialog: MatDialog) {}\n\n  openDialog() {\n    this.dialog.open(DialogDataExampleDialog, {\n      data: {\n        animal: 'panda'\n      }\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-data-example-dialog',\n  templateUrl: 'dialog-data-example-dialog.html',\n})\nexport class DialogDataExampleDialog {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {}\n}\n","import {Component} from '@angular/core';\nimport {MatDialog} from '@angular/material';\n\n/**\n * @title Dialog elements\n */\n@Component({\n  selector: 'dialog-elements-example',\n  templateUrl: 'dialog-elements-example.html',\n  styleUrls: ['dialog-elements-example.css'],\n})\nexport class DialogElementsExample {\n  constructor(public dialog: MatDialog) { }\n\n  openDialog() {\n    this.dialog.open(DialogElementsExampleDialog);\n  }\n}\n\n\n@Component({\n  selector: 'dialog-elements-example-dialog',\n  templateUrl: 'dialog-elements-example-dialog.html',\n})\nexport class DialogElementsExampleDialog { }\n","import {Component, Inject} from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\n/**\n * @title Dialog Overview\n */\n@Component({\n  selector: 'dialog-overview-example',\n  templateUrl: 'dialog-overview-example.html',\n  styleUrls: ['dialog-overview-example.css'],\n})\nexport class DialogOverviewExample {\n\n  animal: string;\n  name: string;\n\n  constructor(public dialog: MatDialog) {}\n\n  openDialog(): void {\n    let dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      width: '250px',\n      data: { name: this.name, animal: this.animal }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.animal = result;\n    });\n  }\n\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html',\n})\nexport class DialogOverviewExampleDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic divider\n */\n@Component({\n  selector: 'divider-overview-example',\n  templateUrl: 'divider-overview-example.html',\n  styleUrls: ['divider-overview-example.css'],\n})\nexport class DividerOverviewExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Elevation CSS classes\n */\n@Component({\n  selector: 'elevation-overview-example',\n  styleUrls: ['elevation-overview-example.css'],\n  templateUrl: 'elevation-overview-example.html',\n})\nexport class ElevationOverviewExample {\n  isActive = false;\n}\n","import {Component, ViewChild} from '@angular/core';\nimport {MatAccordion} from '@angular/material';\n\n/**\n * @title Accordion with expand/collapse all toggles\n */\n@Component({\n  selector: 'expansion-toggle-all-example',\n  templateUrl: 'expansion-expand-collapse-all-example.html',\n  styleUrls: ['expansion-expand-collapse-all-example.css']\n})\nexport class ExpansionExpandCollapseAllExample {\n  @ViewChild(MatAccordion) accordion: MatAccordion;\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic expansion panel\n */\n@Component({\n  selector: 'expansion-overview-example',\n  templateUrl: 'expansion-overview-example.html',\n  styleUrls: ['expansion-overview-example.css'],\n})\nexport class ExpansionOverviewExample {\n  panelOpenState: boolean = false;\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Expansion panel as accordion\n */\n@Component({\n  selector: 'expansion-steps-example',\n  templateUrl: 'expansion-steps-example.html',\n  styleUrls: ['expansion-steps-example.css']\n})\nexport class ExpansionStepsExample {\n  step = 0;\n\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n}\n","import {FocusOrigin} from '@angular/cdk/a11y';\nimport {ChangeDetectorRef, Component, NgZone} from '@angular/core';\n\n/** @title Monitoring focus with FocusMonitor */\n@Component({\n  selector: 'focus-monitor-directives-example',\n  templateUrl: 'focus-monitor-directives-example.html',\n  styleUrls: ['focus-monitor-directives-example.css']\n})\nexport class FocusMonitorDirectivesExample {\n  elementOrigin: string = this.formatOrigin(null);\n  subtreeOrigin: string = this.formatOrigin(null);\n\n  constructor(private ngZone: NgZone, private cdr: ChangeDetectorRef) {}\n\n\n  formatOrigin(origin: FocusOrigin): string {\n    return origin ? origin + ' focused' : 'blurred';\n  }\n\n  // Workaround for the fact that (cdkFocusChange) emits outside NgZone.\n  markForCheck() {\n    this.ngZone.run(() => this.cdr.markForCheck());\n  }\n}\n","import {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\n\n/** @title Focusing with a specific FocusOrigin */\n@Component({\n  selector: 'focus-monitor-focus-via-example',\n  templateUrl: 'focus-monitor-focus-via-example.html',\n  styleUrls: ['focus-monitor-focus-via-example.css']\n})\nexport class FocusMonitorFocusViaExample implements OnDestroy, OnInit {\n  @ViewChild('monitored') monitoredEl: ElementRef;\n\n  origin: string = this.formatOrigin(null);\n\n  constructor(public focusMonitor: FocusMonitor,\n              private cdr: ChangeDetectorRef,\n              private ngZone: NgZone) {}\n\n  ngOnInit() {\n    this.focusMonitor.monitor(this.monitoredEl.nativeElement)\n        .subscribe(origin => this.ngZone.run(() => {\n          this.origin = this.formatOrigin(origin);\n          this.cdr.markForCheck();\n        }));\n  }\n\n  ngOnDestroy() {\n    this.focusMonitor.stopMonitoring(this.monitoredEl.nativeElement);\n  }\n\n  formatOrigin(origin: FocusOrigin): string {\n    return origin ? origin + ' focused' : 'blurred';\n  }\n}\n","import {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\nimport {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\n\n/** @title Monitoring focus with FocusMonitor */\n@Component({\n  selector: 'focus-monitor-overview-example',\n  templateUrl: 'focus-monitor-overview-example.html',\n  styleUrls: ['focus-monitor-overview-example.css']\n})\nexport class FocusMonitorOverviewExample implements OnDestroy, OnInit {\n  @ViewChild('element') element: ElementRef;\n  @ViewChild('subtree') subtree: ElementRef;\n\n  elementOrigin: string = this.formatOrigin(null);\n  subtreeOrigin: string = this.formatOrigin(null);\n\n  constructor(private focusMonitor: FocusMonitor,\n              private cdr: ChangeDetectorRef,\n              private ngZone: NgZone) {}\n\n  ngOnInit() {\n    this.focusMonitor.monitor(this.element.nativeElement)\n        .subscribe(origin => this.ngZone.run(() => {\n          this.elementOrigin = this.formatOrigin(origin);\n          this.cdr.markForCheck();\n        }));\n    this.focusMonitor.monitor(this.subtree.nativeElement, true)\n        .subscribe(origin => this.ngZone.run(() => {\n          this.subtreeOrigin = this.formatOrigin(origin);\n          this.cdr.markForCheck();\n        }));\n  }\n\n  ngOnDestroy() {\n    this.focusMonitor.stopMonitoring(this.element.nativeElement);\n    this.focusMonitor.stopMonitoring(this.subtree.nativeElement);\n  }\n\n  formatOrigin(origin: FocusOrigin): string {\n    return origin ? origin + ' focused' : 'blurred';\n  }\n}\n","import {Component} from '@angular/core';\n\n/** @title Form field appearance variants */\n@Component({\n  selector: 'form-field-appearance-example',\n  templateUrl: 'form-field-appearance-example.html',\n  styleUrls: ['form-field-appearance-example.css']\n})\nexport class FormFieldAppearanceExample {}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {NgModule} from '@angular/core';\n\nimport {ScrollDispatchModule} from '@angular/cdk/scrolling';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {\n  MatAutocompleteModule, MatBadgeModule, MatBottomSheetModule, MatButtonModule,\n  MatButtonToggleModule, MatCardModule, MatCheckboxModule, MatChipsModule, MatDatepickerModule,\n  MatDialogModule, MatDividerModule, MatExpansionModule, MatFormFieldModule, MatGridListModule,\n  MatIconModule, MatInputModule, MatListModule, MatMenuModule, MatPaginatorModule,\n  MatProgressBarModule, MatProgressSpinnerModule, MatRadioModule, MatRippleModule, MatSelectModule,\n  MatSidenavModule, MatSliderModule, MatSlideToggleModule, MatSnackBarModule, MatSortModule,\n  MatStepperModule, MatTableModule, MatTabsModule, MatToolbarModule, MatTooltipModule, MatTreeModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    ScrollDispatchModule,\n  ],\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    ScrollDispatchModule,\n  ]\n})\nexport class ExampleMaterialModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n/**\n * @title Highlight the first autocomplete option\n */\n@Component({\n  selector: 'autocomplete-auto-active-first-option-example',\n  templateUrl: 'autocomplete-auto-active-first-option-example.html',\n  styleUrls: ['autocomplete-auto-active-first-option-example.css']\n})\nexport class AutocompleteAutoActiveFirstOptionExample implements OnInit {\n  myControl: FormControl = new FormControl();\n  options = ['One', 'Two', 'Three'];\n  filteredOptions: Observable<string[]>;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(val => this.filter(val))\n    );\n  }\n\n  filter(val: string): string[] {\n    return this.options.filter(option => option.toLowerCase().indexOf(val.toLowerCase()) === 0);\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\nexport class User {\n  constructor(public name: string) { }\n}\n\n/**\n * @title Display value autocomplete\n */\n@Component({\n  selector: 'autocomplete-display-example',\n  templateUrl: 'autocomplete-display-example.html',\n  styleUrls: ['autocomplete-display-example.css']\n})\nexport class AutocompleteDisplayExample implements OnInit {\n\n  myControl = new FormControl();\n\n  options = [\n    new User('Mary'),\n    new User('Shelley'),\n    new User('Igor')\n  ];\n\n  filteredOptions: Observable<User[]>;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith<string | User>(''),\n        map(value => typeof value === 'string' ? value : value.name),\n        map(name => name ? this.filter(name) : this.options.slice())\n      );\n  }\n\n  filter(name: string): User[] {\n    return this.options.filter(option =>\n      option.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\n  }\n\n  displayFn(user?: User): string | undefined {\n    return user ? user.name : undefined;\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n/**\n * @title Filter autocomplete\n */\n@Component({\n  selector: 'autocomplete-filter-example',\n  templateUrl: 'autocomplete-filter-example.html',\n  styleUrls: ['autocomplete-filter-example.css']\n})\nexport class AutocompleteFilterExample implements OnInit {\n\n  myControl: FormControl = new FormControl();\n\n  options = [\n    'One',\n    'Two',\n    'Three'\n  ];\n\n  filteredOptions: Observable<string[]>;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(val => this.filter(val))\n      );\n  }\n\n  filter(val: string): string[] {\n    return this.options.filter(option =>\n      option.toLowerCase().includes(val.toLowerCase()));\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormGroup, FormBuilder} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {startWith, map} from 'rxjs/operators';\n\nexport interface StateGroup {\n  letter: string;\n  names: string[];\n}\n\n/**\n * @title Option groups autocomplete\n */\n@Component({\n  templateUrl: './autocomplete-optgroup-example.html',\n  styleUrls: ['./autocomplete-optgroup-example.css'],\n})\n\nexport class AutocompleteOptgroupExample implements OnInit {\n  stateForm: FormGroup = this.fb.group({\n    stateGroup: '',\n  });\n\n  stateGroups: StateGroup[] = [{\n    letter: 'A',\n    names: ['Alabama', 'Alaska', 'Arizona', 'Arkansas']\n  }, {\n    letter: 'C',\n    names: ['California', 'Colorado', 'Connecticut']\n  }, {\n    letter: 'D',\n    names: ['Delaware']\n  }, {\n    letter: 'F',\n    names: ['Florida']\n  }, {\n    letter: 'G',\n    names: ['Georgia']\n  }, {\n    letter: 'H',\n    names: ['Hawaii']\n  }, {\n    letter: 'I',\n    names: ['Idaho', 'Illinois', 'Indiana', 'Iowa']\n  }, {\n    letter: 'K',\n    names: ['Kansas', 'Kentucky']\n  }, {\n    letter: 'L',\n    names: ['Louisiana']\n  }, {\n    letter: 'M',\n    names: ['Maine', 'Maryland', 'Massachusetts', 'Michigan',\n      'Minnesota', 'Mississippi', 'Missouri', 'Montana']\n  }, {\n    letter: 'N',\n    names: ['Nebraska', 'Nevada', 'New Hampshire', 'New Jersey',\n      'New Mexico', 'New York', 'North Carolina', 'North Dakota']\n  }, {\n    letter: 'O',\n    names: ['Ohio', 'Oklahoma', 'Oregon']\n  }, {\n    letter: 'P',\n    names: ['Pennsylvania']\n  }, {\n    letter: 'R',\n    names: ['Rhode Island']\n  }, {\n    letter: 'S',\n    names: ['South Carolina', 'South Dakota']\n  }, {\n    letter: 'T',\n    names: ['Tennessee', 'Texas']\n  }, {\n    letter: 'U',\n    names: ['Utah']\n  }, {\n    letter: 'V',\n    names: ['Vermont', 'Virginia']\n  }, {\n    letter: 'W',\n    names: ['Washington', 'West Virginia', 'Wisconsin', 'Wyoming']\n  }];\n\n  stateGroupOptions: Observable<StateGroup[]>;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.stateGroupOptions = this.stateForm.get('stateGroup')!.valueChanges\n      .pipe(\n        startWith(''),\n        map(val => this.filterGroup(val))\n      );\n  }\n\n  filterGroup(val: string): StateGroup[] {\n    if (val) {\n      return this.stateGroups\n        .map(group => ({ letter: group.letter, names: this._filter(group.names, val) }))\n        .filter(group => group.names.length > 0);\n    }\n\n    return this.stateGroups;\n  }\n\n  private _filter(opt: string[], val: string) {\n    const filterValue = val.toLowerCase();\n    return opt.filter(item => item.toLowerCase().startsWith(filterValue));\n  }\n}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\nexport class State {\n  constructor(public name: string, public population: string, public flag: string) { }\n}\n\n/**\n * @title Autocomplete overview\n */\n@Component({\n  selector: 'autocomplete-overview-example',\n  templateUrl: 'autocomplete-overview-example.html',\n  styleUrls: ['autocomplete-overview-example.css']\n})\nexport class AutocompleteOverviewExample {\n  stateCtrl: FormControl;\n  filteredStates: Observable<any[]>;\n\n  states: State[] = [\n    {\n      name: 'Arkansas',\n      population: '2.978M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\n    },\n    {\n      name: 'California',\n      population: '39.14M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\n    },\n    {\n      name: 'Florida',\n      population: '20.27M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\n    },\n    {\n      name: 'Texas',\n      population: '27.47M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\n    }\n  ];\n\n  constructor() {\n    this.stateCtrl = new FormControl();\n    this.filteredStates = this.stateCtrl.valueChanges\n      .pipe(\n        startWith(''),\n        map(state => state ? this.filterStates(state) : this.states.slice())\n      );\n  }\n\n  filterStates(name: string) {\n    return this.states.filter(state =>\n      state.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\n  }\n\n}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/**\n * @title Simple autocomplete\n */\n@Component({\n  selector: 'autocomplete-simple-example',\n  templateUrl: 'autocomplete-simple-example.html',\n  styleUrls: ['autocomplete-simple-example.css']\n})\nexport class AutocompleteSimpleExample {\n\n  myControl: FormControl = new FormControl();\n\n  options = [\n    'One',\n    'Two',\n    'Three'\n   ];\n\n}\n","import {Component} from '@angular/core';\n\n\n/**\n * @title Badge overview\n */\n@Component({\n  selector: 'badge-overview-example',\n  templateUrl: 'badge-overview-example.html',\n  styleUrls: ['badge-overview-example.css']\n})\nexport class BadgeOverviewExample { }\n","import {Component} from '@angular/core';\nimport {MatBottomSheet, MatBottomSheetRef} from '@angular/material';\n\n/**\n * @title Bottom Sheet Overview\n */\n@Component({\n  selector: 'bottom-sheet-overview-example',\n  templateUrl: 'bottom-sheet-overview-example.html',\n  styleUrls: ['bottom-sheet-overview-example.css'],\n})\nexport class BottomSheetOverviewExample {\n  constructor(private bottomSheet: MatBottomSheet) {}\n\n  openBottomSheet(): void {\n    this.bottomSheet.open(BottomSheetOverviewExampleSheet);\n  }\n}\n\n@Component({\n  selector: 'bottom-sheet-overview-example-sheet',\n  templateUrl: 'bottom-sheet-overview-example-sheet.html',\n})\nexport class BottomSheetOverviewExampleSheet {\n  constructor(private bottomSheetRef: MatBottomSheetRef<BottomSheetOverviewExampleSheet>) {}\n\n  openLink(event: MouseEvent): void {\n    this.bottomSheetRef.dismiss();\n    event.preventDefault();\n  }\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic buttons\n */\n@Component({\n  selector: 'button-overview-example',\n  templateUrl: 'button-overview-example.html',\n  styleUrls: ['button-overview-example.css'],\n})\nexport class ButtonOverviewExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Exclusive selection\n */\n@Component({\n  selector: 'button-toggle-exclusive-example',\n  templateUrl: 'button-toggle-exclusive-example.html',\n  styleUrls: ['button-toggle-exclusive-example.css'],\n})\nexport class ButtonToggleExclusiveExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic button-toggles\n */\n@Component({\n  selector: 'button-toggle-overview-example',\n  templateUrl: 'button-toggle-overview-example.html',\n  styleUrls: ['button-toggle-overview-example.css'],\n})\nexport class ButtonToggleOverviewExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Button varieties\n */\n@Component({\n  selector: 'button-types-example',\n  templateUrl: 'button-types-example.html',\n  styleUrls: ['button-types-example.css'],\n})\nexport class ButtonTypesExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Card with multiple sections\n */\n@Component({\n  selector: 'card-fancy-example',\n  templateUrl: 'card-fancy-example.html',\n  styleUrls: ['card-fancy-example.css'],\n})\nexport class CardFancyExample {}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic cards\n */\n@Component({\n  selector: 'card-overview-example',\n  templateUrl: 'card-overview-example.html',\n  styleUrls: ['card-overview-example.css'],\n})\nexport class CardOverviewExample {}\n","import {DataSource} from '@angular/cdk/collections';\nimport {Component} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n/**\n * @title Basic use of `<cdk-table>` (uses display flex)\n */\n@Component({\n  selector: 'cdk-table-basic-flex-example',\n  styleUrls: ['cdk-table-basic-flex-example.css'],\n  templateUrl: 'cdk-table-basic-flex-example.html',\n})\nexport class CdkTableBasicFlexExample {\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new ExampleDataSource();\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource<PeriodicElement> {\n  /** Stream of data that is provided to the table. */\n  data: BehaviorSubject<PeriodicElement[]> = new BehaviorSubject<PeriodicElement[]>(ELEMENT_DATA);\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<PeriodicElement[]> {\n    return this.data;\n  }\n\n  disconnect() {}\n}\n","import {DataSource} from '@angular/cdk/collections';\nimport {Component} from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\n/**\n * @title Basic CDK data-table\n */\n@Component({\n  selector: 'cdk-table-basic-example',\n  styleUrls: ['cdk-table-basic-example.css'],\n  templateUrl: 'cdk-table-basic-example.html',\n})\nexport class CdkTableBasicExample {\n  displayedColumns = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new ExampleDataSource();\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource<PeriodicElement> {\n  /** Stream of data that is provided to the table. */\n  data: BehaviorSubject<PeriodicElement[]> = new BehaviorSubject<PeriodicElement[]>(ELEMENT_DATA);\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<PeriodicElement[]> {\n    return this.data;\n  }\n\n  disconnect() {}\n}\n","import {FlatTreeControl} from '@angular/cdk/tree';\nimport {Component, Injectable} from '@angular/core';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {BehaviorSubject, Observable, of as observableOf} from 'rxjs';\n\n/**\n * File node data with nested structure.\n * Each node has a filename, and a type or a list of children.\n */\nexport class FileNode {\n  children: FileNode[];\n  filename: string;\n  type: any;\n}\n\n/** Flat node with expandable and level information */\nexport class FileFlatNode {\n  filename: string;\n  type: any;\n  level: number;\n  expandable: boolean;\n}\n\n/**\n * The file structure tree data in string. The data could be parsed into a Json object\n */\nconst TREE_DATA = `\n  {\n    \"Documents\": {\n      \"angular\": {\n        \"src\": {\n          \"core\": \"ts\",\n          \"compiler\": \"ts\"\n        }\n      },\n      \"material2\": {\n        \"src\": {\n          \"button\": \"ts\",\n          \"checkbox\": \"ts\",\n          \"input\": \"ts\"\n        }\n      }\n    },\n    \"Downloads\": {\n        \"Tutorial\": \"html\",\n        \"November\": \"pdf\",\n        \"October\": \"pdf\"\n    },\n    \"Pictures\": {\n        \"Sun\": \"png\",\n        \"Woods\": \"jpg\",\n        \"Photo Booth Library\": {\n          \"Contents\": \"dir\",\n          \"Pictures\": \"dir\"\n        }\n    },\n    \"Applications\": {\n        \"Chrome\": \"app\",\n        \"Calendar\": \"app\",\n        \"Webstorm\": \"app\"\n    }\n}`;\n\n/**\n * File database, it can build a tree structured Json object from string.\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\n * For a directory, it has filename and children (a list of files or directories).\n * The input will be a json object string, and the output is a list of `FileNode` with nested\n * structure.\n */\n@Injectable()\nexport class FileDatabase {\n  dataChange: BehaviorSubject<FileNode[]> = new BehaviorSubject<FileNode[]>([]);\n\n  get data(): FileNode[] { return this.dataChange.value; }\n\n  constructor() {\n    this.initialize();\n  }\n\n  initialize() {\n    // Parse the string to json object.\n    const dataObject = JSON.parse(TREE_DATA);\n\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\n    //     file node as children.\n    const data = this.buildFileTree(dataObject, 0);\n\n    // Notify the change.\n    this.dataChange.next(data);\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * The return value is the list of `FileNode`.\n   */\n  buildFileTree(value: any, level: number): FileNode[] {\n    let data: any[] = [];\n    for (let k in value) {\n      let v = value[k];\n      let node = new FileNode();\n      node.filename = `${k}`;\n      if (v === null || v === undefined) {\n        // no action\n      } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.type = v;\n      }\n      data.push(node);\n    }\n    return data;\n  }\n}\n\n/**\n * @title Tree with flat nodes\n */\n@Component({\n  selector: 'cdk-tree-flat-example',\n  templateUrl: 'cdk-tree-flat-example.html',\n  styleUrls: ['cdk-tree-flat-example.css'],\n  providers: [FileDatabase]\n})\nexport class CdkTreeFlatExample {\n\n  treeControl: FlatTreeControl<FileFlatNode>;\n\n  treeFlattener: MatTreeFlattener<FileNode, FileFlatNode>;\n\n  dataSource: MatTreeFlatDataSource<FileNode, FileFlatNode>;\n\n  constructor(database: FileDatabase) {\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this._getLevel,\n      this._isExpandable, this._getChildren);\n    this.treeControl = new FlatTreeControl<FileFlatNode>(this._getLevel, this._isExpandable);\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n    database.dataChange.subscribe(data => {\n      this.dataSource.data = data;\n    });\n  }\n\n  transformer = (node: FileNode, level: number) => {\n    let flatNode = new FileFlatNode();\n    flatNode.filename = node.filename;\n    flatNode.type = node.type;\n    flatNode.level = level;\n    flatNode.expandable = !!node.children;\n    return flatNode;\n  }\n\n  private _getLevel = (node: FileFlatNode) => { return node.level; };\n\n  private _isExpandable = (node: FileFlatNode) => { return node.expandable; };\n\n  private _getChildren = (node: FileNode): Observable<FileNode[]> => {\n    return observableOf(node.children);\n  }\n\n  hasChild = (_: number, _nodeData: FileFlatNode) => { return _nodeData.expandable; };\n}\n","import {NestedTreeControl} from '@angular/cdk/tree';\nimport {Component, Injectable} from '@angular/core';\nimport {MatTreeNestedDataSource} from '@angular/material/tree';\nimport {BehaviorSubject, of as observableOf} from 'rxjs';\n\n/**\n * Json node data with nested structure. Each node has a filename and a value or a list of children\n */\nexport class FileNode {\n  children: FileNode[];\n  filename: string;\n  type: any;\n}\n\n/**\n * The Json tree data in string. The data could be parsed into Json object\n */\nconst TREE_DATA = `\n  {\n    \"Documents\": {\n      \"angular\": {\n        \"src\": {\n          \"core\": \"ts\",\n          \"compiler\": \"ts\"\n        }\n      },\n      \"material2\": {\n        \"src\": {\n          \"button\": \"ts\",\n          \"checkbox\": \"ts\",\n          \"input\": \"ts\"\n        }\n      }\n    },\n    \"Downloads\": {\n        \"Tutorial\": \"html\",\n        \"November\": \"pdf\",\n        \"October\": \"pdf\"\n    },\n    \"Pictures\": {\n        \"Sun\": \"png\",\n        \"Woods\": \"jpg\",\n        \"Photo Booth Library\": {\n          \"Contents\": \"dir\",\n          \"Pictures\": \"dir\"\n        }\n    },\n    \"Applications\": {\n        \"Chrome\": \"app\",\n        \"Calendar\": \"app\",\n        \"Webstorm\": \"app\"\n    }\n  }`;\n\n/**\n * File database, it can build a tree structured Json object from string.\n * Each node in Json object represents a file or a directory. For a file, it has filename and type.\n * For a directory, it has filename and children (a list of files or directories).\n * The input will be a json object string, and the output is a list of `FileNode` with nested\n * structure.\n */\n@Injectable()\nexport class FileDatabase {\n  dataChange: BehaviorSubject<FileNode[]> = new BehaviorSubject<FileNode[]>([]);\n\n  get data(): FileNode[] { return this.dataChange.value; }\n\n  constructor() {\n    this.initialize();\n  }\n\n  initialize() {\n    // Parse the string to json object.\n    const dataObject = JSON.parse(TREE_DATA);\n\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\n    //     file node as children.\n    const data = this.buildFileTree(dataObject, 0);\n\n    // Notify the change.\n    this.dataChange.next(data);\n  }\n\n  /**\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n   * The return value is the list of `FileNode`.\n   */\n  buildFileTree(value: any, level: number): FileNode[] {\n    let data: any[] = [];\n    for (let k in value) {\n      let v = value[k];\n      let node = new FileNode();\n      node.filename = `${k}`;\n      if (v === null || v === undefined) {\n        // no action\n      } else if (typeof v === 'object') {\n        node.children = this.buildFileTree(v, level + 1);\n      } else {\n        node.type = v;\n      }\n      data.push(node);\n    }\n    return data;\n  }\n}\n\n/**\n * @title Tree with nested nodes\n */\n@Component({\n  selector: 'cdk-tree-nested-example',\n  templateUrl: 'cdk-tree-nested-example.html',\n  styleUrls: ['cdk-tree-nested-example.css'],\n  providers: [FileDatabase]\n})\nexport class CdkTreeNestedExample {\n  nestedTreeControl: NestedTreeControl<FileNode>;\n\n  nestedDataSource: MatTreeNestedDataSource<FileNode>;\n\n  constructor(database: FileDatabase) {\n    this.nestedTreeControl = new NestedTreeControl<FileNode>(this._getChildren);\n    this.nestedDataSource = new MatTreeNestedDataSource();\n\n    database.dataChange.subscribe(data => this.nestedDataSource.data = data);\n  }\n\n  private _getChildren = (node: FileNode) => { return observableOf(node.children); };\n\n  hasNestedChild = (_: number, nodeData: FileNode) => {return !(nodeData.type); };\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Configurable checkbox\n */\n@Component({\n  selector: 'checkbox-configurable-example',\n  templateUrl: 'checkbox-configurable-example.html',\n  styleUrls: ['checkbox-configurable-example.css'],\n})\nexport class CheckboxConfigurableExample {\n  checked = false;\n  indeterminate = false;\n  labelPosition = 'after';\n  disabled = false;\n}\n","import {Component} from '@angular/core';\n\n/**\n * @title Basic checkboxes\n */\n@Component({\n  selector: 'checkbox-overview-example',\n  templateUrl: 'checkbox-overview-example.html',\n  styleUrls: ['checkbox-overview-example.css'],\n})\nexport class CheckboxOverviewExample {}\n","import {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {Component, ElementRef, ViewChild} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MatAutocompleteSelectedEvent, MatChipInputEvent} from '@angular/material';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n/**\n * @title Chips Autocomplete\n */\n@Component({\n  selector: 'chips-autocomplete-example',\n  templateUrl: 'chips-autocomplete-example.html',\n  styleUrls: ['chips-autocomplete-example.css']\n})\nexport class ChipsAutocompleteExample {\n  visible: boolean = true;\n  selectable: boolean = true;\n  removable: boolean = true;\n  addOnBlur: boolean = false;\n\n  separatorKeysCodes = [ENTER, COMMA];\n\n  fruitCtrl = new FormControl();\n\n  filteredFruits: Observable<any[]>;\n\n  fruits = [\n    'Lemon',\n  ];\n\n  allFruits = [\n    'Apple',\n    'Lemon',\n    'Lime',\n    'Orange',\n    'Strawberry'\n  ];\n\n  @ViewChild('fruitInput') fruitInput: ElementRef;\n\n  constructor() {\n    this.filteredFruits = this.fruitCtrl.valueChanges.pipe(\n        startWith(null),\n        map((fruit: string | null) => fruit ? this.filter(fruit) : this.allFruits.slice()));\n  }\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    // Add our fruit\n    if ((value || '').trim()) {\n      this.fruits.push(value.trim());\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  remove(fruit: any): void {\n    const index = this.fruits.indexOf(fruit);\n\n    if (index >= 0) {\n      this.fruits.splice(index, 1);\n    }\n  }\n\n  filter(name: string) {\n    return this.allFruits.filter(fruit =>\n        fruit.toLowerCase().indexOf(name.toLowerCase()) === 0);\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.fruits.push(event.option.viewValue);\n    this.fruitInput.nativeElement.value = '';\n  }\n}\n"],"names":["title","component","SliderOverviewExample","snack-bar-component","SnackBarComponentExample","additionalFiles","selectorName","snack-bar-overview","SnackBarOverviewExample","snack-bar-position","SnackBarPositionExample","sort-overview","SortOverviewExample","stepper-editable","StepperEditableExample","stepper-optional","StepperOptionalExample","stepper-overview","StepperOverviewExample","table-basic-flex","TableBasicFlexExample","table-basic","TableBasicExample","table-dynamic-columns","TableDynamicColumnsExample","table-filtering","TableFilteringExample","table-footer-row","TableFooterRowExample","table-http","TableHttpExample","table-multiple-header-footer","TableMultipleHeaderFooterExample","table-native-only","TableNativeOnlyExample","table-overview","TableOverviewExample","table-pagination","TablePaginationExample","table-row-context","TableRowContextExample","table-selection","TableSelectionExample","table-sorting","TableSortingExample","tabs-overview","TabsOverviewExample","tabs-template-label","TabsTemplateLabelExample","text-field-autofill-directive","TextFieldAutofillDirectiveExample","text-field-autofill-monitor","TextFieldAutofillMonitorExample","text-field-autosize-textarea","TextFieldAutosizeTextareaExample","toolbar-multirow","ToolbarMultirowExample","toolbar-overview","ToolbarOverviewExample","tooltip-auto-hide","TooltipAutoHideExample","tooltip-custom-class","TooltipCustomClassExample","tooltip-delay","TooltipDelayExample","tooltip-disabled","TooltipDisabledExample","tooltip-manual","TooltipManualExample","tooltip-message","TooltipMessageExample","tooltip-modified-defaults","TooltipModifiedDefaultsExample","tooltip-overview","TooltipOverviewExample","tooltip-position","TooltipPositionExample","tree-checklist","TreeChecklistExample","tree-dynamic","TreeDynamicExample","tree-flat-overview","TreeFlatOverviewExample","tree-loadmore","TreeLoadmoreExample","tree-nested-overview","TreeNestedOverviewExample","EXAMPLE_LIST","AutocompleteAutoActiveFirstOptionExample","AutocompleteDisplayExample","AutocompleteFilterExample","AutocompleteOptgroupExample","AutocompleteOverviewExample","AutocompleteSimpleExample","BadgeOverviewExample","BottomSheetOverviewExampleSheet","BottomSheetOverviewExample","ButtonOverviewExample","ButtonToggleExclusiveExample","ButtonToggleOverviewExample","ButtonTypesExample","CardFancyExample","CardOverviewExample","CdkTableBasicFlexExample","CdkTableBasicExample","CdkTreeFlatExample","CdkTreeNestedExample","CheckboxConfigurableExample","CheckboxOverviewExample","ChipsAutocompleteExample","ChipsInputExample","ChipsOverviewExample","ChipsStackedExample","DatepickerApiExample","DatepickerColorExample","ExampleHeader","DatepickerCustomHeaderExample","DatepickerCustomIconExample","DatepickerDisabledExample","DatepickerEventsExample","DatepickerFilterExample","DatepickerFormatsExample","DatepickerLocaleExample","DatepickerMinMaxExample","DatepickerMomentExample","DatepickerOverviewExample","DatepickerStartViewExample","DatepickerTouchExample","DatepickerValueExample","DatepickerViewsSelectionExample","DialogContentExampleDialog","DialogContentExample","DialogDataExampleDialog","DialogDataExample","DialogElementsExampleDialog","DialogElementsExample","DialogOverviewExampleDialog","DialogOverviewExample","DividerOverviewExample","ElevationOverviewExample","ExpansionExpandCollapseAllExample","ExpansionOverviewExample","ExpansionStepsExample","FocusMonitorDirectivesExample","FocusMonitorFocusViaExample","FocusMonitorOverviewExample","FormFieldAppearanceExample","MyTelInput","FormFieldCustomControlExample","FormFieldErrorExample","FormFieldHintExample","FormFieldLabelExample","FormFieldOverviewExample","FormFieldPrefixSuffixExample","FormFieldThemingExample","GridListDynamicExample","GridListOverviewExample","IconOverviewExample","IconSvgExample","InputClearableExample","InputErrorStateMatcherExample","InputErrorsExample","InputFormExample","InputHintExample","InputOverviewExample","InputPrefixSuffixExample","ListOverviewExample","ListSectionsExample","ListSelectionExample","MenuIconsExample","MenuOverviewExample","NestedMenuExample","PaginatorConfigurableExample","PaginatorOverviewExample","ProgressBarBufferExample","ProgressBarConfigurableExample","ProgressBarDeterminateExample","ProgressBarIndeterminateExample","ProgressBarQueryExample","ProgressSpinnerConfigurableExample","ProgressSpinnerOverviewExample","RadioNgModelExample","RadioOverviewExample","SelectCustomTriggerExample","SelectDisabledExample","SelectErrorStateMatcherExample","SelectFormExample","SelectHintErrorExample","SelectMultipleExample","SelectNoRippleExample","SelectOptgroupExample","SelectOverviewExample","SelectPanelClassExample","SelectResetExample","SelectValueBindingExample","SidenavAutosizeExample","SidenavBackdropExample","SidenavDisableCloseExample","SidenavDrawerOverviewExample","SidenavFixedExample","SidenavModeExample","SidenavOpenCloseExample","SidenavOverviewExample","SidenavPositionExample","SidenavResponsiveExample","SlideToggleConfigurableExample","SlideToggleFormsExample","SlideToggleOverviewExample","SliderConfigurableExample","SliderFormattingExample","PizzaPartyComponent","type","NgModule","args","declarations","entryComponents","imports","ExampleMaterialModule","FormsModule","ReactiveFormsModule","CommonModule","ExampleModule","ExampleData","example","EXAMPLE_COMPONENTS","hasOwnProperty","exampleConfig","this","exampleFiles","map","extension","examplePath","indexFilename","_a","push","apply","exampleName","replace","letter","toUpperCase","description","componentName","styles","Component","selector","template","positionOptions","position","FormControl","encapsulation","ViewEncapsulation","None","showDelay","hideDelay","disabled","message","myCustomTooltipDefaults","touchendHideDelay","providers","provide","MAT_TOOLTIP_DEFAULT_OPTIONS","useValue","TodoItemNode","TodoItemFlatNode","TREE_DATA","Reminders","Groceries","Organic eggs","Protein Powder","Almond Meal flour","Fruits","Apple","Orange","Berries","ChecklistDatabase","dataChange","BehaviorSubject","initialize","Object","defineProperty","prototype","value","data","buildFileTree","next","level","k","v","node","item","undefined","children","insertItem","parent","name","child","updateItem","Injectable","database","_this","flatNodeMap","Map","nestedNodeMap","selectedParent","newItemName","checklistSelection","SelectionModel","getLevel","isExpandable","expandable","getChildren","ofObservable","hasChild","_","_nodeData","hasNoContent","transformer","flatNode","has","get","set","treeFlattener","MatTreeFlattener","treeControl","FlatTreeControl","dataSource","MatTreeFlatDataSource","subscribe","descendantsAllSelected","getDescendants","every","isSelected","descendantsPartiallySelected","some","todoItemSelectionToggle","toggle","descendants","select","_b","deselect","addNewItem","parentNode","expand","saveNode","itemValue","nestedNode","DynamicFlatNode","isLoading","DynamicDatabase","dataMap","rootLevelNodes","initialData","DynamicDataSource","dataNodes","connect","collectionViewer","expansionModel","change","added","removed","handleTreeControl","merge","viewChange","pipe","forEach","toggleNode","reverse","index","indexOf","setTimeout","nodes","splice","concat","length","FileNode","FileFlatNode","FileDatabase","dataObject","JSON","parse","filename","_getLevel","_isExpandable","_getChildren","observableOf","LOAD_MORE","LoadmoreNode","hasChildren","loadMoreParentItem","childrenChange","LoadmoreFlatNode","batchNumber","nodeMap","LoadmoreDatabase","_generateNode","loadMore","onlyFirstTime","newChildrenNumber","slice","result","newNode","isLoadMore","loadChildren","hasNestedChild","nodeData","nestedTreeControl","NestedTreeControl","nestedDataSource","MatTreeNestedDataSource","autocomplete-auto-active-first-option","autocomplete-display","autocomplete-filter","autocomplete-optgroup","autocomplete-overview","autocomplete-simple","badge-overview","bottom-sheet-overview","button-overview","button-toggle-exclusive","button-toggle-overview","button-types","card-fancy","card-overview","cdk-table-basic-flex","cdk-table-basic","cdk-tree-flat","cdk-tree-nested","checkbox-configurable","checkbox-overview","chips-autocomplete","chips-input","chips-overview","chips-stacked","datepicker-api","datepicker-color","datepicker-custom-header","datepicker-custom-icon","datepicker-disabled","datepicker-events","datepicker-filter","datepicker-formats","datepicker-locale","datepicker-min-max","datepicker-moment","datepicker-overview","datepicker-start-view","datepicker-touch","datepicker-value","datepicker-views-selection","dialog-content","dialog-data","dialog-elements","dialog-overview","divider-overview","elevation-overview","expansion-expand-collapse-all","expansion-overview","expansion-steps","focus-monitor-directives","focus-monitor-focus-via","focus-monitor-overview","form-field-appearance","form-field-custom-control","form-field-error","form-field-hint","form-field-label","form-field-overview","form-field-prefix-suffix","form-field-theming","grid-list-dynamic","grid-list-overview","icon-overview","icon-svg","input-clearable","input-error-state-matcher","input-errors","input-form","input-hint","input-overview","input-prefix-suffix","list-overview","list-sections","list-selection","menu-icons","menu-overview","nested-menu","paginator-configurable","paginator-overview","progress-bar-buffer","progress-bar-configurable","progress-bar-determinate","progress-bar-indeterminate","progress-bar-query","progress-spinner-configurable","progress-spinner-overview","radio-ng-model","radio-overview","select-custom-trigger","select-disabled","select-error-state-matcher","select-form","select-hint-error","select-multiple","select-no-ripple","select-optgroup","select-overview","select-panel-class","select-reset","select-value-binding","sidenav-autosize","sidenav-backdrop","sidenav-disable-close","sidenav-drawer-overview","sidenav-fixed","sidenav-mode","sidenav-open-close","sidenav-overview","sidenav-position","sidenav-responsive","slide-toggle-configurable","slide-toggle-forms","slide-toggle-overview","slider-configurable","slider-formatting","slider-overview","ELEMENT_DATA","weight","symbol","definedColumns","columnsToDisplay","addColumn","randomColumn","Math","floor","random","removeColumn","pop","shuffle","currentIndex","randomIndex","temp","displayedColumns","MatTableDataSource","applyFilter","filterValue","trim","toLowerCase","filter","transactions","cost","getTotalCost","t","reduce","acc","http","resultsLength","isLoadingResults","isRateLimitReached","ngOnInit","exampleDatabase","ExampleHttpDao","sort","sortChange","paginator","pageIndex","page","startWith","switchMap","getRepoIssues","active","direction","total_count","items","catchError","HttpClient","ViewChild","MatPaginator","MatSort","order","requestUrl","href","elements","users","i","createNewUser","firstPage","COLORS","NAMES","selection","isAllSelected","selected","masterToggle","clear","row","autofill","monitor","firstName","nativeElement","e","firstNameAutofilled","isAutofilled","lastName","lastNameAutofilled","ngOnDestroy","stopMonitoring","AutofillMonitor","read","ElementRef","ngZone","triggerResize","onStable","take","autosize","resizeToFitContent","NgZone","pokemon","viewValue","foods","panelColor","states","showFiller","reason","shouldRun","h","test","window","location","host","close","sidenav","fb","options","group","fixed","top","bottom","FormBuilder","mode","events","changeDetectorRef","media","fillerNav","Array","fill","fillerContent","mobileQuery","matchMedia","_mobileQueryListener","detectChanges","addListener","removeListener","ChangeDetectorRef","MediaMatcher","color","checked","formBuilder","isChecked","formGroup","enableWifi","acceptTerms","Validators","requiredTrue","onFormSubmit","formValue","alert","stringify","autoTicks","invert","max","min","showTicks","step","thumbLabel","vertical","_tickInterval","Number","formatLabel","round","snackBar","openSnackBar","openFromComponent","duration","MatSnackBar","action","open","horizontalPosition","verticalPosition","desserts","calories","fat","carbs","protein","sortedData","sortData","a","b","isAsc","compare","_formBuilder","isEditable","firstFormGroup","firstCtrl","required","secondFormGroup","secondCtrl","isOptional","isLinear","controlType","id","nextId","describedBy","_required","_disabled","parts","area","exchange","subscriber","fm","elRef","origin","focused","stateChanges","n","empty","_placeholder","plh","req","coerceBooleanProperty","dis","MyTel","tel","setValue","complete","setDescribedByIds","ids","join","onContainerClick","event","tagName","querySelector","focus","MatFormFieldControl","useExisting","[class.floating]","[id]","[attr.aria-describedby]","FocusMonitor","placeholder","Input","email","getErrorMessage","hasError","hideRequired","floatLabel","hide","fontSize","getFontSize","tiles","text","cols","rows","iconRegistry","sanitizer","addSvgIcon","bypassSecurityTrustResourceUrl","MatIconRegistry","DomSanitizer","MyErrorStateMatcher","isErrorState","control","form","isSubmitted","submitted","invalid","dirty","touched","emailFormControl","matcher","folders","updated","Date","notes","typesOfShoes","pageSize","pageSizeOptions","setPageSizeOptions","setPageSizeOptionsInput","split","str","bufferValue","seasons","toppings","toppingList","disableSelect","pattern","animalControl","animals","sound","pokemonControl","pokemonGroups","selectable","removable","addOnBlur","separatorKeysCodes","ENTER","COMMA","fruits","add","input","remove","fruit","availableColors","exampleHeader","changeDetection","ChangeDetectionStrategy","OnPush","calendar","dateAdapter","dateFormats","cdr","destroyed","Subject","takeUntil","markForCheck","format","activeDate","display","monthYearLabel","toLocaleUpperCase","previousClicked","addCalendarMonths","addCalendarYears","nextClicked","MatCalendar","decorators","Host","DateAdapter","Inject","MAT_DATE_FORMATS","addEvent","myFilter","d","day","getDay","moment","_rollupMoment","_moment","MY_FORMATS","dateInput","dateA11yLabel","monthYearA11yLabel","date","useClass","MomentDateAdapter","deps","MAT_DATE_LOCALE","ɵ0","MAT_MOMENT_DATE_FORMATS","adapter","french","setLocale","minDate","maxDate","startDate","serializedDate","toISOString","chosenYearHandler","normalizedYear","ctrlValue","year","chosenMonthHandler","normlizedMonth","datepicker","month","dialog","openDialog","height","afterClosed","console","log","MatDialog","animal","MAT_DIALOG_DATA","width","dialogRef","onNoClick","MatDialogRef","isActive","accordion","MatAccordion","panelOpenState","setStep","nextStep","prevStep","elementOrigin","formatOrigin","subtreeOrigin","run","focusMonitor","monitoredEl","element","subtree","ngControl","errorState","__extends","__","constructor","extendStatics","create","charAt","toString","progress","setPrototypeOf","__proto__","p","CdkTableModule","CdkTreeModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatFormFieldModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSlideToggleModule","MatSliderModule","MatSnackBarModule","MatSortModule","MatStepperModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","ScrollDispatchModule","exports","myControl","filteredOptions","valueChanges","val","option","User","displayFn","user","includes","stateForm","stateGroup","stateGroups","names","stateGroupOptions","filterGroup","_filter","opt","startsWith","population","flag","stateCtrl","filteredStates","state","filterStates","bottomSheet","openBottomSheet","MatBottomSheet","bottomSheetRef","openLink","dismiss","preventDefault","MatBottomSheetRef","ExampleDataSource","_super","tslib_1.__extends","disconnect","DataSource","indeterminate","labelPosition","visible","fruitCtrl","allFruits","filteredFruits","fruitInput"],"mappings":"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O,yBACPC,UAAWqD,IAEbC,oBACEvD,MAAO,oBACPC,UAAWuD,IAEbC,oBACEzD,MAAO,gBACPC,UAAWyD,IAEbC,qBACE3D,MAAO,sFACPC,UAAW2D,IAEbC,wBACE7D,MAAO,gDACPC,UAAW6D,IAEbC,iBACE/D,MAAO,qCACPC,UAAW+D,IAEbC,oBACEjE,MAAO,+BACPC,UAAWiE,IAEbC,kBACEnE,MAAO,6CACPC,UAAWmE,IAEbC,mBACErE,MAAO,kCACPC,UAAWqE,IAEbC,6BACEvE,MAAO,qCACPC,UAAWuE,IAEbC,oBACEzE,MAAO,gBACPC,UAAWyE,IAEbC,oBACE3E,MAAO,iCACPC,UAAW2E,IAEbC,kBACE7E,MAAO,uBACPC,UAAW6E,IAEbC,gBACE/E,MAAO,yBACPC,UAAW+E,IAEbC,sBACEjF,MAAO,uBACPC,UAAWiF,IAEbC,iBACEnF,MAAO,kCACPC,UAAWmF,IAEbC,wBACErF,MAAO,yBACPC,UAAWqF,KAIFC,IACXC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAAgCC,EAChCC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAAcC,GACdC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAA2BC,GAC3BC,GAAwBC,GACxBC,GAA4BC,GAC5BC,GAA4BC,GAC5BC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAAWC,GACXC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACA/M,GACAgN,GAAoB9M,GACpBI,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,GACAE,gCA/8BF,sBAk9BA6H,KAACC,EAAAA,SAADC,OACEC,aAAc/H,GACdgI,gBAAiBhI,GACjBiI,SACEC,EACAC,EAAAA,YACAC,EAAAA,oBACAC,EAAAA,kBAz9BJC,KCQAC,GAAA,WAuBE,QAAFA,GAAcC,GACV,GAAKA,GAAYC,GAAmBC,eAAeF,GAAnD,CAIA,GAAMG,GAAgBF,GAAmBD,EAGzCI,MAAKC,cAAgB,OAAQ,KAAM,OAAOC,IAAI,SAAAC,GAAa,MAAGP,GAAlE,YAAqFO,IACjFH,KAAKI,YAAc,+BAA+BR,EAAtD,IACII,KAAK7N,aAAe6N,KAAKK,cAAmBT,EAAhD,WAEQG,EAAc7N,kBAChBoO,EAAAN,KAAKC,cAAaM,KAAxBC,MAAAF,EAAgCP,EAAc7N,gBAG1C,IAAMuO,GAAcb,EAAQc,QAAQ,gBAAiB,SAAAC,GAAU,MAAAA,GAAOC,eAEtEZ,MAAKa,YAAcd,EAAclO,OAAS4O,EAAYC,QAAQ,SAAU,KAAO,WAC/EV,KAAKc,cAAgBf,EAAc5N,cACbsO,EAAYC,QAAQ,SAAU,IAAM,iBAnD9D,MAAAf"}